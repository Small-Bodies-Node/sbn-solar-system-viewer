#!/bin/bash
#
# Manager for developing and assembling library

### Params and prelims
FILE_NAME=$(cat "package.json" | jq -r '.name')
VERSION=$(cat "package.json" | jq -r '.version')
export BLA="\033[30m"
export RED="\033[31m"
export GRE="\033[32m"
export YEL="\033[33m"
export BLU="\033[34m"
export MAG="\033[35m"
export CYA="\033[36m"
export WHI="\033[37m"

#######################################
# Prints options for this script
# Globals:
#   None
# Arguments:
#   None
#######################################
function _usage() {
  echo -e """${GRE}
  =======================================================
    _library_manager usage:
  -------------------------------------------------------
    ${WHI}--help         ${GRE}-  Show this usage
    ${WHI}--build        ${GRE}-  Assemble complete lib in ./dist
    ${WHI}--build-worker ${GRE}-  Build separate worker script(s)
    ${WHI}--dev          ${GRE}-  Serve up src code directly
    ${WHI}--dev-worker   ${GRE}-  Serve up worker
    ${WHI}--demo-umd     ${GRE}-  Demo-run umd build
  =======================================================
  """
}

#######################################
# Colored wrapper around echo for pretty
#   printing
# Globals:
#   None
# Arguments:
#   - Text to print
#######################################
function _print() {
  echo -e "${GRE}>>> ${1}${WHI}"
}

#######################################
# Begin development server acting
#   directly on the src code
# Globals:
#   None
# Arguments:
#   None
#######################################
function _develop() {
  ./node_modules/.bin/parcel serve -p 3000 src/dev.html
}

#######################################
# Build umd and modules part of dist
# Globals:
#   None
# Arguments:
#   All script args
#######################################
function _build() {
  _print "Building cjs,umd,esm..."
  ./node_modules/.bin/tsdx build --format cjs,esm,umd --name SbnSolarSystemViewer

  _print "Generating package.json for this lib..."
  ./_package_lib.ts

  _print "Copying umd demo-umd..."
  cp dist/*.umd.*.*js* demo-umd
}

#######################################
# Build
# Globals:
#   None
# Arguments:
#   All script args
#######################################
function _build_worker() {
  _print "Building worker..."

  _print "Compile worker code..."
  ./node_modules/.bin/rollup -c worker-rollup.config.js

  _print "Copy compiled worker to dist-worker ..."
}

#######################################
# Develop worker
# Globals:
#   None
# Arguments:
#   All script args
#######################################
function _develop_worker() {
  _print "Develop worker..."
  ./node_modules/.bin/rollup -c worker-rollup.config.js --watch
}

#######################################
# Runs vanilla html with UMD app
#   to test consumption of this
#   npm package
#######################################
function _demo_umd() {

  _print "Demo-ing UMD build..."
  # cd demo-umd
  ./node_modules/.bin/http-server demo-umd -p 1234
  # cd ..
}

#######################################
# Create local package and install into
#   demo-ngx and demo-cra to test that
#   the package's module can be
#   properly consumed
# Globals:
#   None
# Arguments:
#   None
#######################################
function _package_locally() {
  _print "Creating dist/package.json"
  ./_package_lib.ts

  _print "Creating local package from dist"
  cd dist
  npm pack .
  mv "${FILE_NAME}-"*".tgz" "../${FILE_NAME}.tgz"
  cd ..
}

main() {
  case "$1" in
  "--help" | "help")
    _usage
    ;;
  "--build")
    _build
    ;;
  "--build-worker")
    _build_worker
    ;;
  "--dev")
    _develop
    ;;
  "--dev-worker")
    _develop_worker
    ;;
  "--demo-umd")
    _demo_umd
    ;;
  *)
    echo >&2 "Invalid option: $@"
    _usage
    return 1
    ;;
  esac
}

main "$@"
