{"version":3,"file":"sbnsolarsystemviewer.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/threejs/utils/ascii-error.ts","../src/threejs/utils/conversions.ts","../src/threejs/html/add-global-styles.ts","../src/threejs/utils/clean-local-storage.ts","../src/threejs/utils/simple-uuid.ts","../src/threejs/html/add-loader-div.ts","../src/threejs/utils/myprint.ts","../src/threejs/abstract-scene/abstract-scene-manager.ts","../src/threejs/html/set-loader-div-visbility.ts","../src/threejs/utils/get-texture-from-image-url.ts","../src/threejs/data/basic-solar-system-data.ts","../src/options.ts","../src/threejs/utils/get-all-options.ts","../src/threejs/abstract-scene/abstract-scene-entity.ts","../src/threejs/abstract-scene/abstract-toy-model.ts","../src/threejs/utils/constants.ts","../src/threejs/models/EOrbitalType.ts","../src/threejs/scene-entities/sun.ts","../src/threejs/utils/gltf-loader.ts","../src/threejs/utils/resize-threejs-object.ts","../src/threejs/utils/center-on-bounding-box.ts","../src/threejs/utils/enshadow-children.ts","../src/threejs/utils/sk-ephem.ts","../src/threejs/data/ephem-presets.ts","../src/threejs/utils/sk-scale.ts","../src/threejs/utils/sk-math.ts","../src/threejs/utils/sk-util.ts","../src/threejs/utils/sk-orbit.ts","../src/threejs/utils/sk-ephemeris-table.ts","../src/threejs/utils/sk-units.ts","../src/threejs/utils/get-logged-position.ts","../src/threejs/utils/orbit.ts","../src/threejs/scene-entities/planet.ts","../src/threejs/utils/create-earth-cloud-mesh.ts","../src/threejs/utils/get-planet-radius-meters.ts","../src/threejs/scene-entities/star-field.ts","../src/threejs/utils/invert-texture-color.ts","../src/threejs/scene-entities/misc-helpers.ts","../src/threejs/scene-entities/simple-light.ts","../src/threejs/utils/create-asteroid-geometry.ts","../src/threejs/scene-entities/asteroid.ts","../src/threejs/scene-entities/point-light.ts","../src/threejs/scene-entities/birds-eye.ts","../src/threejs/utils/get-destination-look-position.ts","../src/threejs/models/TAsteroidBeltType.ts","../src/threejs/utils/get-asteroid-belt-color.ts","../src/threejs/utils/get-worker-url.ts","../src/threejs/utils/get-asteroid-belt-merged-geometries.ts","../src/threejs/scene-entities/asteroid-belt.ts","../src/threejs/html/inject-common-button-properties.ts","../src/threejs/html/add-html-button-row.ts","../src/threejs/utils/get-react-icon-svg.ts","../src/threejs/utils/set-options.ts","../src/threejs/html/create-three-column-container.ts","../src/threejs/html/create-titled-switch.ts","../src/threejs/html/create-titled-input.ts","../src/threejs/html/create-hr-div.ts","../src/threejs/html/create-settings-panel.ts","../src/index.tsx","../src/threejs/scene-manager.ts","../src/threejs/utils/update-traversal-fraction.ts","../src/threejs/utils/threejs-geometry-functions.ts","../src/threejs/utils/update-camera-position.ts","../src/threejs/utils/get-destination-camera-position.ts","../src/threejs/utils/update-camera-viewing-angle.ts","../src/threejs/html/create-display-message-div.ts","../src/threejs/html/create-search-field.ts","../src/threejs/html/create-settings-button.ts","../src/react-component.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * A simple ascii-art wrapper for error messaging in order to convey\n * just how tragic your errors are\n */\nexport function asciiError(msg: string) {\n  // console.clear();\n  return `\n\n   ______________________________    . \\\\  | / .\n  /                            / \\\\     \\\\ \\\\ / /\n |                            | ==========  - -\n  \\\\____________________________\\\\_/     / / \\\\ \\\\\n  ______________________________      \\\\  | / | \\\\\n /                            / \\\\     \\\\ \\\\ / /.   .\n|                            | ==========  - -\n \\\\____________________________\\\\_/     / / \\\\ \\\\    /\n   ______________________________   / |\\\\  | /  .\n  /                            / \\\\     \\\\ \\\\ / /\n |                            | ==========  -  - -\n  \\\\____________________________\\\\_/     / / \\\\ \\\\\n                                     .  / | \\\\  .\n\n  Are you trying to wreak havoc on the Universe!?!\n\n  ${msg}\n\n  Idiot.\n\n  `;\n}\n","export function mToAu(meters: number) {\n  // Source: https://en.wikipedia.org/wiki/Astronomical_unit\n  return meters / 149597870700;\n}\n\nexport function auToMeters(aus: number) {\n  return 149597870700 * aus;\n}\n\nexport function dateToCenturiesSinceJ2000(date: Date) {\n  if (true) {\n    //\n    const xxx = date.toLocaleDateString('en-ZA');\n    // const julianDate = JulianUtils.getJulianDate(xxx);\n    // const yyy = JulianUtils.getCenturiesSinceJ2000(julianDate);\n\n    // console.log('julianDate', xxx, yyy);\n\n    // return yyy;\n  } else {\n    //\n    return 0;\n  }\n}\n","/**\n * Function to inject global styles into the document head\n * Make sure to prefix all of your global class names, etc. with\n * something unique to this widget to avoid clashes\n * E.g. sbn-solar-system-viewer-\n */\n\nlet isGlobalStylesSet = false;\n\nexport const addGlobalStyles = () => {\n  // --->>>\n\n  // Some params\n  const switchOnColor = 'red';\n  const switchOffColor = 'blue';\n\n  // Only set once\n  if (isGlobalStylesSet) return;\n\n  // Create style element\n  const globalStyle = document.createElement('style');\n  globalStyle.innerHTML = `\n    @keyframes sbn-solar-system-viewer-fade-in {\n      from { opacity: 0; }\n      to   { opacity: 1; }\n    }\n\n    @keyframes sbn-solar-system-viewer-loader-spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .sbn-solar-system-viewer-input:focus{\n        outline-width: 0;\n    }\n\n    /**\n     *\n     * This is for styling the switches\n     *\n     */\n    .three-column-container {\n      width: 100%;\n      height: 34px;\n      display: flex;\n      white-space: nowrap;\n    }\n\n    .three-column-container .switch {\n      position: relative;\n      display: inline-block;\n      width: 60px;\n      height: 34px;\n    }\n\n    /* Hide default HTML checkbox */\n    .three-column-container .switch input {\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n\n    /* The slider */\n    .three-column-container .slider {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: #ccc;\n      background-color: ${switchOnColor};\n      -webkit-transition: .4s;\n      transition: .4s;\n    }\n\n    .three-column-container .slider:before {\n      position: absolute;\n      content: \"\";\n      height: 26px;\n      width: 26px;\n      left: 4px;\n      bottom: 4px;\n      background-color: white;\n      -webkit-transition: .4s;\n      transition: .4s;\n    }\n\n    .three-column-container input:checked + .slider {\n      background-color: #2196F3;\n      background-color: ${switchOffColor};\n    }\n\n    .three-column-container input:focus + .slider {\n      box-shadow: 0 0 1px #2196F3;\n    }\n\n    .three-column-container input:checked + .slider:before {\n      -webkit-transform: translateX(26px);\n      -ms-transform: translateX(26px);\n      transform: translateX(26px);\n    }\n  `;\n\n  document.head.append(globalStyle);\n};\n","import { defaultOptions, IOptions } from '../../options';\n\n/**\n * Remove any keys that are not members of optionKeys\n * If a value does not exist for any member of optionKeys\n * then set that value to the default\n *\n */\nexport const cleanLocalStorage = () => {\n  // --->>\n\n  const optionKeys = Object.keys(defaultOptions);\n\n  // Remove key-value pairs where the key is not in optionKeys\n  const items = { ...localStorage };\n\n  Object.keys(items).forEach(key => {\n    if (!optionKeys.includes(key as any)) localStorage.removeItem(key);\n  });\n\n  // Make sure every key has at least a default value\n  optionKeys.forEach(key => {\n    const val = localStorage.getItem(key);\n    if (!val) {\n      localStorage.setItem(\n        key,\n        JSON.stringify(defaultOptions[(key as any) as keyof IOptions])\n      );\n    } else {\n      try {\n        const parsedVal = JSON.parse(val);\n        if (\n          typeof parsedVal !==\n          typeof defaultOptions[(key as any) as keyof IOptions]\n        ) {\n          localStorage.setItem(\n            key,\n            JSON.stringify(defaultOptions[(key as any) as keyof IOptions])\n          );\n        }\n      } catch (err) {\n        console.log('Local-storage mishap');\n        return;\n      }\n    }\n  });\n};\n","let count = 0;\n\nexport const simpleUuid = () => {\n  count++;\n  return 'sbn-solar-system-viewer-' + count;\n};\n","import { addGlobalStyles } from './add-global-styles';\nimport { simpleUuid } from '../utils/simple-uuid';\n\nexport const loaderDivId = 'loader-div-id-' + simpleUuid();\nconst borderWidthPxls = 5;\nconst spinSpeedMs = 2000;\n\nlet isInit = false;\n\n/**\n * Simple loader div; removed by `remove-loader-div`\n * It consists of two divs; the outer 'loaderDiv' that is just a shell\n * for centering the div with the actual animation, and the 'animDiv'\n * that does the spinning, etc.\n */\nexport const addLoaderDiv = (containerDiv: HTMLElement) => {\n  // --->>>\n\n  // Only add once\n  if (isInit) return;\n  isInit = true;\n\n  // Injects key frames for spin animation\n  addGlobalStyles();\n\n  // Create divs\n  const loaderDiv = document.createElement('div');\n  const animDiv = document.createElement('div');\n  containerDiv.append(loaderDiv);\n  loaderDiv.append(animDiv);\n  // Style loaderDiv\n  loaderDiv.id = loaderDivId;\n  loaderDiv.style.setProperty('position', 'absolute');\n  loaderDiv.style.setProperty('top', '0px');\n  loaderDiv.style.setProperty('left', '0px');\n  loaderDiv.style.setProperty('bottom', '0px');\n  loaderDiv.style.setProperty('right', '0px');\n  loaderDiv.style.setProperty('display', 'flex');\n  loaderDiv.style.setProperty('align-items', 'center');\n  loaderDiv.style.setProperty('justify-content', 'center');\n  loaderDiv.style.setProperty('pointer-events', 'none');\n  // Calc size of radius based on size of container\n  const width = loaderDiv.offsetWidth;\n  const height = loaderDiv.offsetHeight;\n  const shorterLength = width < height ? width : height;\n  // Style animation div\n  animDiv.style.setProperty('width', shorterLength * 0.25 + 'px');\n  animDiv.style.setProperty('height', shorterLength * 0.25 + 'px');\n  animDiv.style.setProperty('border', `${borderWidthPxls}px solid #f3f3f3`);\n  animDiv.style.setProperty('border-top', `${borderWidthPxls}px solid #3498db`);\n  animDiv.style.setProperty('border-radius', '100px');\n  animDiv.style.setProperty(\n    'animation',\n    `sbn-solar-system-viewer-loader-spin ${spinSpeedMs}ms linear infinite`\n  );\n  return loaderDiv;\n};\n","import { getInitDate } from '../..';\n\n/**\n * Wrapper to console with time taken\n */\nexport const myprint = (...msg: any[]) => {\n  console.log(' >>> ', +new Date() - +getInitDate(), ' >>> ', ...msg);\n};\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { asciiError } from '../utils/ascii-error';\nimport { auToMeters } from '../utils/conversions';\nimport { getInitDate, initDate, setInitDate } from '../../index';\nimport { addLoaderDiv } from '../html/add-loader-div';\n// import { removeLoaderDiv } from '../html/remove-loader-div';\nimport { daysPerCentury } from '../data/time-units';\nimport { myprint } from '../utils/myprint';\nimport { setLoaderDivVisibility } from '../html/set-loader-div-visbility';\n\n// Initial Camera Params\nconst ar = 2; // Aspect Ratio\nconst fov = 60; // Field of View\nconst near = auToMeters(0.00001); // Near Plane\nconst far = auToMeters(3000); // Far Plane\n\n/**\n * This abstract class is to be inherited by the SceneManager instance.\n * The idea is to place all the usual/boilerplate code for setting up\n * a threeJs scene and running it here, so that the only place you\n * need to implement the specifics of your scene is in your\n * SceneManager instance.\n *\n * By convention, properties/methods that are not intended/expected to be used\n * outside this class are prefixed with '_'\n *\n */\nexport abstract class AbstractSceneManager {\n  // --->>>\n\n  /* Do NOT init OR re-init _controls till scene is set up or they will be erratic */\n  protected _controls!: OrbitControls;\n  protected _scene = new THREE.Scene();\n  protected _renderer?: THREE.WebGLRenderer;\n  protected _canvas = document.createElement('canvas');\n  protected _requestAnimationFrameId: undefined | number;\n  protected _clock = new THREE.Clock(false);\n  protected _initialViewingVector = new THREE.Vector3();\n  protected _isSceneReady = false;\n  protected _isRendering = false;\n  protected _isHelpersShown = false;\n  protected _isInit = false;\n  protected _container!: HTMLElement;\n  protected _isLoaderVisible = true;\n  protected _fps = 60;\n  protected _camera = new THREE.PerspectiveCamera(fov, ar, near, far);\n  protected _sceneEntities: ISceneEntity[] = [];\n  protected _preInitHook: () => void = () => {};\n  protected _postInitHook: () => void = () => {};\n  protected _destroyHook: () => void = () => {};\n  protected updateCamera: () => void = () => {};\n\n  constructor(protected _containerId: string) {\n    // --->>\n\n    // Get container and add fitting canvas to it\n    this._container = document.getElementById(this._containerId)!;\n    if (!this._container) {\n      throw new Error('No container found with id: ' + this._containerId);\n    }\n\n    this._canvas.style.width = '100%';\n    this._canvas.style.height = '100%';\n    this._container.append(this._canvas);\n    this._container.style.setProperty('position', 'relative');\n    this._container.style.setProperty('font-family', '\"Odibee Sans\", cursive');\n    this._container.style.setProperty('background-color', 'black');\n    addLoaderDiv(this._container);\n  }\n\n  public async init() {\n    // ------>>>\n\n    // Init only once\n    if (!!this._isInit) return;\n    this._isInit = true;\n\n    // Time initialization\n    setInitDate(new Date());\n\n    // Enable superclass constructor to adjust settings prior to initialization sequence\n    this._preInitHook();\n\n    // React to resize events on window\n    window.addEventListener('resize', this._updateCameraAspect);\n\n    // Build Renderer\n    const DPR: number = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this._canvas,\n      antialias: true,\n      alpha: true,\n    });\n    this._renderer.setPixelRatio(DPR);\n    this._renderer.sortObjects = false; // This prevents pesky rendering-disruption effect\n    this._renderer.shadowMap.enabled = true;\n    this._renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this._renderer.outputEncoding = THREE.GammaEncoding;\n\n    // Init camera position and orientation\n    this._camera.position.copy(this._initialViewingVector);\n    this._camera.up = new THREE.Vector3(0, 0, 1); // Vector defining up direction of camera\n    this._camera.lookAt(0, 0, 0);\n\n    // Configure orbitControls\n    // ! Don't move this code to earlier position or controls will be screwy\n    // ! Note sure why; treat as brute fact supervening on inscrutable metaphysical states of affair\n    this._controls = new OrbitControls(this._camera, this._renderer.domElement);\n    this._controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n    this._controls.dampingFactor = 0.25;\n    this._controls.target = new THREE.Vector3();\n\n    // Initiate Scene Entities\n    if (!this._sceneEntities.length) {\n      throw new Error(asciiError('You have no scene entities!'));\n    }\n    const initiatedSceneEntityGroups = await Promise.all(\n      this._sceneEntities.map(async sceneEntity => {\n        const initiatedSceneEntityGroup: THREE.Group = await sceneEntity.init();\n        if (\n          !initiatedSceneEntityGroup ||\n          !initiatedSceneEntityGroup.children.length\n        )\n          throw new Error(\n            asciiError(`\n            -----------------------------------------------------------------------------\n            The scene entity \"${sceneEntity.constructor.name}\" has empty sceneEntityGroup\n            after initialization!!!\n            -----------------------------------------------------------------------------\n            `)\n          );\n        return initiatedSceneEntityGroup;\n      })\n    )\n      .then(\n        _ =>\n          new Promise<THREE.Group[]>(resolve =>\n            setTimeout(() => resolve(_), 100)\n          )\n      )\n      .then(_ => _);\n    initiatedSceneEntityGroups.forEach(group => this._scene.add(group));\n\n    // Run updater methods\n    this.setHelpersVisibility(false);\n    this._updateCameraAspect();\n\n    // Begin Animation\n    this._startRendering();\n\n    // Enable superclass constructor to adjust settings after to initialization sequence\n    this._postInitHook();\n\n    // Remove loader div\n    this.setIsLoaderDivVisible(false);\n\n    //\n\n    // Finish\n    myprint('Finished initiating scene.');\n  }\n\n  protected registerSceneEntities = (sceneEntities: ISceneEntity[]) => {\n    sceneEntities.forEach(el => this._sceneEntities.push(el));\n  };\n\n  /**\n   * This method lets you show/hide the objects within in your scene\n   * designated as 'helpers'. It relies on the practice of setting the property `userData.isHelper = true`\n   * on any object you want to be classified as a helper\n   */\n  public setHelpersVisibility = (isHelpersShown: boolean) => {\n    this._isHelpersShown = !!isHelpersShown;\n    this._scene.traverse(child => {\n      return child.userData.isHelper && (child.visible = this._isHelpersShown);\n    });\n  };\n\n  public toggleHelpersVisibility = () => {\n    this._isHelpersShown = !this._isHelpersShown;\n    this.setHelpersVisibility(this._isHelpersShown);\n  };\n\n  public setIsLoaderDivVisible(val: boolean, fadeInOutTimeMs = 3000) {\n    this._isLoaderVisible = val;\n    setLoaderDivVisibility(this._isLoaderVisible, fadeInOutTimeMs);\n  }\n\n  public setFramesPerSecond(newFps: number) {\n    if (newFps <= 0 || newFps > 100) return;\n    this._fps = newFps;\n  }\n\n  private _updateCameraAspect = () => {\n    // Not sure where/how, but canvas' style width/height\n    // gets altered and needs to be reset to 100%\n    this._canvas.style.width = '100%';\n    this._canvas.style.height = '100%';\n    const width = this._canvas.offsetWidth || 1;\n    const height = this._canvas.offsetHeight || 1;\n    this._camera.aspect = width / height;\n    this._camera.updateProjectionMatrix();\n    this._renderer!.setSize(width, height);\n  };\n\n  public destroy: () => void = () => {\n    window.removeEventListener('resize', this._updateCameraAspect);\n    this._stopRendering();\n    this._destroyHook();\n  };\n\n  private _update() {\n    // Loop through scene entities and trigger their update methods\n    // If they need 'universal' time, they can access this._clock, etc.\n    this._sceneEntities.forEach(el =>\n      el.update(this._camera, this._clock.elapsedTime)\n    );\n\n    // Update camera\n    this.updateCamera();\n\n    // Finish loop\n    if (!this._camera || !this._renderer) throw new Error('Poor Logic');\n    if (!!this._requestAnimationFrameId) {\n      this._renderer.render(this._scene, this._camera);\n    }\n  }\n\n  private _render = () => {\n    if (!this._isRendering) return;\n    setTimeout(() => {\n      this._requestAnimationFrameId = requestAnimationFrame(this._render);\n      this._update();\n    }, 1000 / this._fps);\n  };\n\n  private _startRendering = () => {\n    myprint('Starting animation...');\n    this._isRendering = true;\n    this._clock.start();\n    this._render();\n  };\n\n  private _stopRendering = () => {\n    myprint('Stopping animation...');\n    this._isRendering = false;\n    this._clock.stop();\n  };\n}\n","import { loaderDivId } from './add-loader-div';\n\nexport const setLoaderDivVisibility = (\n  isVisible: boolean,\n  fadeOutTimeMs = 3000\n) => {\n  // --->>>\n\n  const loaderDiv = document.getElementById(loaderDivId);\n  loaderDiv?.style.setProperty(\n    'transition',\n    `opacity ${fadeOutTimeMs}ms ease-in-out`\n  );\n\n  // pointer-events:none\n\n  loaderDiv?.style.setProperty('opacity', `${isVisible ? 1 : 0}`);\n  /*   setTimeout(() => {\n    loaderDiv?.style.setProperty('display', isVisible ? 'block' : 'none');\n  }, fadeOutTimeMs); */\n};\n","import * as THREE from 'three';\n\n// Artificial delay to simulate poor networks, etc.\n// Can also be used to buffer planet load\nexport const delayMs = 5;\n\nexport const getTextureFromImageUrl = (\n  url: string,\n  name?: string\n): Promise<THREE.Texture> => {\n  return new Promise((resolve, reject) => {\n    new THREE.TextureLoader().load(\n      url,\n      texture => {\n        texture.encoding = THREE.GammaEncoding;\n        setTimeout(() => resolve(texture), delayMs);\n      },\n      xhr => console.log(`${name} ${(xhr.loaded / xhr.total) * 100}%`),\n      () => {\n        console.log('Failed to load: ', url);\n        reject(new Error('Failed to load: ' + url));\n      }\n    );\n  });\n};\n","export const solarSystemData = {\n  SUN: {\n    radiusMeters: 696342000,\n    periodDays: undefined,\n  },\n  MERCURY: {\n    radiusMeters: 2439700,\n    periodDays: 87.9691,\n  },\n  VENUS: {\n    radiusMeters: 6051800,\n    periodDays: 224.701,\n  },\n  EARTH: {\n    radiusMeters: 6378000,\n    periodDays: 365.256,\n  },\n  MARS: {\n    radiusMeters: 3389500,\n    periodDays: 686.971,\n  },\n  CERES: {\n    radiusMeters: 470000,\n    periodDays: 1683.14570801,\n  },\n  JUPITER: {\n    radiusMeters: 71492000,\n    periodDays: 4332.59,\n  },\n  SATURN: {\n    radiusMeters: 60268000,\n    periodDays: 10759.22,\n  },\n  URANUS: {\n    radiusMeters: 25362000,\n    periodDays: 30688.5,\n  },\n  NEPTUNE: {\n    radiusMeters: 24764000,\n    periodDays: 60182,\n  },\n  PLUTO: {\n    radiusMeters: 1188300,\n    periodDays: 90560,\n  },\n  HAUMEA: {\n    radiusMeters: 620_000,\n    periodDays: 103_410,\n  },\n  MAKEMAKE: {\n    radiusMeters: 720_000,\n    periodDays: 111_845,\n  },\n  ERIS: {\n    radiusMeters: 1_163_000,\n    periodDays: 204_199,\n  },\n  // Moons\n  MOON: {\n    radiusMeters: 350000,\n    periodDays: 29.5,\n  },\n};\n","/**\n * This module is the SSOT for global \"static\" settings for the app\n * that get set before the threejs scene begins. These govern e.g.\n * the default values of the \"dynamic\" settings that the user can set\n * and that will then persist within localStorage (at least, that is the eventual goal)\n */\n\nexport interface IOptionsBooleans {\n  __sbnViewer__isPlanetsLoadedBeforeAnimationBegins: boolean;\n  __sbnViewer__isBeltLoadedBeforeAnimationBegins: boolean;\n  __sbnViewer__isBeltAbundanceToyModel: boolean;\n}\n\nexport interface IOptionsNumbers {\n  // Only apply if __sbnViewer__isBeltAbundanceToyModel === false\n  __sbnViewer__beltAbundanceMaxObjects: number;\n  __sbnViewer__beltAbundanceHThreshold: number;\n}\nexport interface IOptions extends IOptionsBooleans, IOptionsNumbers {}\n\nexport const defaultOptions: IOptions = {\n  __sbnViewer__isPlanetsLoadedBeforeAnimationBegins: true,\n  __sbnViewer__isBeltLoadedBeforeAnimationBegins: true,\n  __sbnViewer__isBeltAbundanceToyModel: true,\n  // Only apply if __sbnViewer__isBeltAbundanceToyModel === false\n  __sbnViewer__beltAbundanceMaxObjects: 100,\n  __sbnViewer__beltAbundanceHThreshold: -10,\n};\n","import {\n  IOptions,\n  defaultOptions,\n  IOptionsBooleans,\n  IOptionsNumbers,\n} from '../../options';\nimport { cleanLocalStorage } from './clean-local-storage';\n\n// Make sure local-storage has no extraneous values\ncleanLocalStorage();\n\n/**\n * Get all options from local storage; if a value from optionKeys is not\n * represented then return the default value\n */\nexport const getAllOptions = (): IOptions => {\n  // --->>\n\n  // Build up options from local storage\n  const optionsFromLocalStorage: Partial<IOptions> = {};\n  Object.keys(defaultOptions).forEach(key => {\n    const val = localStorage.getItem(key);\n    if (!val) return;\n    try {\n      const parsedVal = JSON.parse(val);\n      optionsFromLocalStorage[(key as any) as keyof IOptions] = parsedVal;\n    } catch (err) {\n      return;\n    }\n  });\n  return { ...defaultOptions, ...optionsFromLocalStorage };\n};\n\n/**\n * Wrapper that just returns the booleans from stored options\n */\nexport const getAllOptionsBooleans = (): IOptionsBooleans => {\n  const {\n    __sbnViewer__isBeltAbundanceToyModel,\n    __sbnViewer__isBeltLoadedBeforeAnimationBegins,\n    __sbnViewer__isPlanetsLoadedBeforeAnimationBegins,\n  } = getAllOptions();\n  return {\n    __sbnViewer__isBeltAbundanceToyModel,\n    __sbnViewer__isBeltLoadedBeforeAnimationBegins,\n    __sbnViewer__isPlanetsLoadedBeforeAnimationBegins,\n  };\n};\n\n/**\n * Wrapper that just returns the booleans from stored options\n */\nexport const getAllOptionsNumbers = (): IOptionsNumbers => {\n  const {\n    __sbnViewer__beltAbundanceHThreshold,\n    __sbnViewer__beltAbundanceMaxObjects,\n  } = getAllOptions();\n  return {\n    __sbnViewer__beltAbundanceHThreshold,\n    __sbnViewer__beltAbundanceMaxObjects,\n  };\n};\n","import * as THREE from 'three';\nimport { getAllOptions } from '../utils/get-all-options';\n\n/**\n * Base class that any entity must extend in order that its threeJs group\n * might get added to the threeJs scene owned by the manager\n */\nexport abstract class AbstractSceneEntity {\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>>>\n\n  private static _isAsyncLoad = getAllOptions()\n    .__sbnViewer__isPlanetsLoadedBeforeAnimationBegins;\n  protected _isAsyncLoad = () => AbstractSceneEntity._isAsyncLoad;\n\n  protected _sceneEntityGroup: THREE.Group = new THREE.Group();\n  public getSceneEntityGroup = () => this._sceneEntityGroup;\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from './abstract-scene-entity';\n\n/**\n * Time to finish switch from log to normal scales\n */\nconst timeToCompleteTransition = 2;\n\n/**\n * Base class for space object that can be toggled between\n * 'real' and 'toy' scales\n */\nexport abstract class AbstractToyModel extends AbstractSceneEntity {\n  // ~~~>>>\n\n  // Setup\n  protected _toyGroup: THREE.Object3D[] = [];\n  protected _realScale = 1;\n  protected _isZoomToToyScale = false;\n\n  protected isLogScale = false;\n  protected logTransitionClock = new THREE.Clock();\n\n  constructor(protected _toyScale: number) {\n    super();\n  }\n\n  public setIsZoomToToyScale(value: boolean) {\n    this._isZoomToToyScale = value;\n  }\n\n  public setToyScale(val: number) {\n    this._toyScale = val;\n  }\n\n  public getScale() {\n    return this._isZoomToToyScale ? this._toyScale : this._realScale;\n  }\n\n  protected _setToToyScale() {\n    this._isZoomToToyScale = true;\n    this._toyGroup.forEach(child => {\n      const t = this._toyScale; // 't' for 'target'\n      child.scale.set(t, t, t);\n    });\n  }\n\n  public setIsLogScale(val: boolean) {\n    // Update flag\n    this.isLogScale = val;\n    // Restart clock\n    this.logTransitionClock = new THREE.Clock(true);\n    this.logTransitionClock.start();\n    // Update toyScale for log\n    // const nonLogToyScale = getPlanetToyScale(this.NAME);\n    const logToyScale = 1000;\n    this.setToyScale(this.isLogScale ? logToyScale : 3000);\n  }\n\n  public toggleIsLogScale() {\n    this.setIsLogScale(!this.isLogScale);\n  }\n\n  getLogInterpolationParam() {\n    const t =\n      this.logTransitionClock.getElapsedTime() / timeToCompleteTransition;\n    const v = t < 1 ? t : 1;\n    return this.isLogScale ? v : 1 - v;\n  }\n\n  protected _updateModelScale() {\n    this._toyGroup.forEach(child => {\n      // Test if planet is already at target scale; 't' for target\n      const t = this._isZoomToToyScale ? this._toyScale : this._realScale;\n      const { x: sx, y: sy, z: sz } = child.scale;\n      if (sx === t) return;\n\n      // Update-mesh-scale logic\n      const ds = this._toyScale / 20;\n      if (sx < t) {\n        // Increase deficient scale\n        child.scale.set(sx + ds, sy + ds, sz + ds);\n      }\n      if (sx > t) {\n        // Decrease excessive scale\n        child.scale.set(sx - ds, sy - ds, sz - ds);\n      }\n      if (Math.abs(sx - t) < ds) {\n        // Snap scale to target\n        child.scale.set(t, t, t);\n      }\n    });\n  }\n}\n","/**\n * Constants for widget\n */\n\nimport { auToMeters } from './conversions';\n\n/**\n * Properties common to all html buttons\n */\nexport const buttonBackgroundColor = 'rgba(255,255,255,0.2)';\nexport const buttonClickedBackgroundColor = 'rgba(255,255,255,0.4)';\nexport const buttonTextColor = 'rgba(255,255,255,0.8)';\nexport const buttonCursorType = 'pointer';\nexport const buttonPadding = '10px';\nexport const buttonFadeInSpecs = '1s ease-in-out';\n\n// These two properties must be coordinated together using e.g. google.fonts\nexport const buttonFontFamily = \"'Odibee Sans', cursive\";\nexport const buttonCssUrl =\n  'https://fonts.googleapis.com/css2?family=Odibee+Sans';\n\n/**\n * Root url of file server with copy of /images\n */\nexport const assetsBaseUrl: string = getAssetsBaseUrl();\n\nfunction getAssetsBaseUrl(): string {\n  return `https://sbn-solar-system-viewer.s3.amazonaws.com`;\n  let assetsBaseUrl: string = 'http://localhost:3001';\n\n  try {\n    // @ts-ignore\n    if (__IS_PRODUCTION__) {\n      assetsBaseUrl = `https://sbn-solar-system-viewer.s3.amazonaws.com`;\n    }\n  } catch (err) {\n    //\n  }\n\n  console.log('assetsBaseUrl: ', assetsBaseUrl);\n\n  return assetsBaseUrl;\n}\n\n/**\n * Often handy to use this as a scale\n */\nexport const au = auToMeters(1);\n","export enum EOrbitalType {\n  PLANET = 'PLANET',\n  DWARF_PLANET = 'DWARF_PLANET',\n  SUN = 'SUN',\n  ASTEROID = 'ASTEROID',\n}\n","import * as THREE from 'three';\n\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { solarSystemData } from '../data/basic-solar-system-data';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { assetsBaseUrl } from '../utils/constants';\nimport { getInitDate } from '../..';\nimport { IZoomable } from '../models/IZoomable';\nimport { myprint } from '../utils/myprint';\n\n/**\n * When a sprite is loaded it is given a size of '1'\n * So it needs to be scaled, in this case, to the size of the Sun\n * Further, the Sun only takes up a fraction of this image, so we need this factor\n * to scale the image further\n */\nconst realToToyRatio = 30;\nconst imageToSunRatio = 20;\n\nexport class Sun extends AbstractToyModel implements IZoomable {\n  // ~~~>>>\n\n  public readonly NAME = 'SUN';\n  private readonly position = new THREE.Vector3(0, 0, 0);\n  private readonly sunRadiusMeters = solarSystemData.SUN.radiusMeters;\n  private model = new THREE.Group();\n  private helper: THREE.LineSegments;\n  private sprite = new THREE.Sprite(\n    new THREE.SpriteMaterial({\n      blending: THREE.AdditiveBlending,\n      transparent: true,\n      visible: false,\n    })\n  );\n\n  constructor() {\n    super(realToToyRatio);\n\n    // Set up sun sprite size\n    this.sprite.scale.multiplyScalar(this.sunRadiusMeters * imageToSunRatio);\n    this.model.add(this.sprite);\n\n    // Set up helper\n    this.helper = new THREE.LineSegments(\n      new THREE.EdgesGeometry(\n        new THREE.SphereGeometry(this.sunRadiusMeters, 32)\n      ),\n      new THREE.LineBasicMaterial({ color: new THREE.Color('cyan') })\n    );\n    this.helper.userData.isHelper = true;\n    this.helper.rotateX(Math.PI / 2);\n    this.model.add(this.helper);\n  }\n\n  getRadius = () => this.sunRadiusMeters;\n\n  getPosition = () => this.position;\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      const spriteUrl = `${assetsBaseUrl}/stars/sun3-sprite-512.png`;\n      const onTextureLoad = (texture: THREE.Texture | null) => {\n        this.sprite.material.map = texture;\n        this.sprite.material.needsUpdate = true;\n        this.sprite.material.visible = true;\n      };\n\n      if (this._isAsyncLoad()) {\n        getTextureFromImageUrl(spriteUrl, 'SUN SPRITE IMAGE')\n          .then(onTextureLoad)\n          .catch(_ => null);\n      } else {\n        onTextureLoad(await getTextureFromImageUrl(spriteUrl).catch(_ => null));\n      }\n\n      this._toyGroup.push(this.model);\n      this._sceneEntityGroup.name = this.NAME;\n      this._sceneEntityGroup.add(this.model);\n      myprint('RESOLVED SUN');\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  update() {\n    this._updateModelScale();\n  }\n}\n","import * as THREE from 'three';\nimport { GLTFLoader as Loader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport { centerOnBoundingBox } from './center-on-bounding-box';\nimport { enshadowChildren } from './enshadow-children';\nimport { delayMs } from './get-texture-from-image-url';\nimport { resizeThreejsObject } from './resize-threejs-object';\n\nexport function gltfLoader(\n  gltfUrl: string,\n  targetRadius?: number,\n  isCenteredOnBoundingBox?: boolean,\n  isShadowShown?: boolean\n) {\n  // ----------------->>>\n\n  return new Promise<THREE.Group>((resolve, reject) => {\n    new Loader().load(\n      gltfUrl,\n      gltf => {\n        const object = gltf.scene;\n        if (!!targetRadius) resizeThreejsObject(object, targetRadius);\n        if (!!isCenteredOnBoundingBox) centerOnBoundingBox(object);\n        if (!!isShadowShown) enshadowChildren(object);\n        setTimeout(() => resolve(object), delayMs);\n      },\n      xhr => !true && console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n      error => {\n        console.log('Loading error occurred:', error.message);\n        reject();\n      }\n    );\n  });\n}\n","import * as THREE from 'three';\n\n/**\n * Function to scale an object so that the child with the largest bounding-sphere radius\n * will end up with a bounding sphere radius equal to the supplied targetRadius\n */\nexport function resizeThreejsObject(\n  object: THREE.Object3D,\n  targetRadius: number\n) {\n  // --------------------------------------------------------------------------->>>\n\n  let biggestSphereRadius: number = Math.pow(10, -10);\n  object.traverse(child => {\n    if (child instanceof THREE.Mesh) {\n      child.geometry.computeBoundingSphere(); // Need to run this, else `child.geometry.boundingSphere.radius` will be undefined\n      if (\n        !!child.geometry &&\n        !!child.geometry.boundingSphere &&\n        child.geometry.boundingSphere.radius > biggestSphereRadius\n      ) {\n        biggestSphereRadius = child.geometry.boundingSphere.radius;\n      }\n    }\n  });\n  const s = targetRadius / biggestSphereRadius;\n  object.scale.set(s, s, s);\n}\n","import * as THREE from 'three';\n\n/**\n * Function to center object on its bounding box\n *\n * An object created in blender may not have its origin at the object's\n * physical center, and this can be annoying when, say, you want to rotate\n * that object. This function will shift the object relative to its parent\n * coordinate system so that its center is at the parent's origin; that means\n * you can then e.g. rotate the parent to get a realistic/useful rotation effect\n * on this object\n */\nexport function centerOnBoundingBox(object: THREE.Object3D) {\n  // ----------------------------------------------------->>>\n\n  // Get center of boundingBox\n  const boundingBox = new THREE.Box3().setFromObject(object);\n  const [x2, y2, z2] = boundingBox.getCenter(new THREE.Vector3()).toArray();\n\n  // Move object to where center was\n  const [x1, y1, z1] = object.position.clone().toArray();\n  object.position.set(x1 - x2, y1 - y2, z1 - z2);\n}\n","/**\n * Simple function to ensure all children receive and cast shadows\n */\nexport function enshadowChildren(object: THREE.Object3D) {\n  object.traverse(child => {\n    if (child.type === 'Mesh') {\n      child.castShadow = true;\n      child.receiveShadow = true;\n    }\n  });\n}\n","const METERS_IN_AU = 149597870700;\nconst SECONDS_IN_DAY = 86400;\n\nconst EPHEM_VALID_ATTRS_ARR = [\n  'a', // Semi-major axis\n  'e', // Eccentricity\n  'i', // Inclination\n  'q', // Perihelion distance\n\n  'epoch',\n  'period', // in days\n  'tp', // time of perihelion\n\n  'ma', // Mean anomaly\n  'n', // Mean motion\n  'L', // Mean longitude\n\n  'om', // Longitude of Ascending Node\n  'w', // Argument of Perihelion = Longitude of Perihelion - Longitude of Ascending Node\n  'wBar', // Longitude of Perihelion = Longitude of Ascending Node + Argument of Perihelion\n\n  'GM', // Gravitational constant of more massive body\n] as const;\n\ntype TEphemValidAttrs = typeof EPHEM_VALID_ATTRS_ARR[number];\n\nconst EPHEM_VALID_ATTRS = new Set(EPHEM_VALID_ATTRS_ARR);\n\n// Which of these are angular measurements.\nconst ANGLE_UNITS = new Set(['i', 'ma', 'n', 'L', 'om', 'w', 'wBar']);\n\n// Returns true if object is defined.\nfunction isDef(obj: any) {\n  return typeof obj !== 'undefined';\n}\n\ntype TInitialValues = { [k in TEphemValidAttrs]: number };\n\n/**\n * A class representing Kepler ephemerides.\n * @example\n * const NEPTUNE = new Ephem({\n *   epoch: 2458426.500000000,\n *   a: 3.009622263428050E+01,\n *   e: 7.362571187193770E-03,\n *   i: 1.774569249829094E+00,\n *   om: 1.318695882492132E+02,\n *   w: 2.586226409499831E+02,\n *   ma: 3.152804988924479E+02,\n * }, 'deg'),\n */\nexport class SKEphem {\n  // ~~~>>>\n\n  /**\n   * Defaults to GM.SUN.  @see {GM}\n   * @param {'deg'|'rad'} units The unit of angles in the list of initial values.\n   */\n\n  _attrs: Partial<TInitialValues>;\n  _locked = false;\n  actualUnits?: string;\n\n  // a?: number; // Semimajor axis\n  // e?: number; // Eccentricity\n  // i?: number; // Inclination\n  // epoch?: number; // Epoch in JD\n  // period?: number; // Period in days\n  // ma?: number; // Mean anomaly\n  // n?: number; // Mean motion\n  // L?: number; // Mean longitude\n  // om?: number; // Longitude of Ascending Node\n  // w?: number; // Argument of Perihelion\n  // wBar?: number; // Longitude of Perihelion\n  // GM?: number; // Standard gravitational parameter in km^3/s^2.\n\n  constructor(\n    initialValues: Partial<TInitialValues>,\n    units = 'rad',\n    locked = false\n  ) {\n    this._attrs = { ...initialValues };\n    this._locked = false;\n\n    // let attr: keyof TInitialValues;\n    // for (attr in initialValues) {\n    //   if (!!initialValues[attr]) {\n    //     const actualUnits = ANGLE_UNITS.has(attr) ? units : undefined;\n    //     const x = initialValues[attr];\n    //     if (x) this.set(attr, x, actualUnits);\n    //   }\n    // }\n\n    if (!!initialValues) {\n      Object.keys(initialValues).forEach((key: any) => {\n        const actualUnits = ANGLE_UNITS.has(key) ? units : undefined;\n        const val = (initialValues as any)[key];\n        if (val) this.set(key, val, actualUnits);\n      });\n    }\n\n    if (typeof this._attrs.GM === 'undefined') {\n      this._attrs.GM = GM.SUN;\n    }\n    this.fill();\n\n    if (this.get('e') > 0.9 && typeof this.get('tp') === 'undefined') {\n      console.warn(\n        'You must specify \"tp\" (time of perihelion) for highly eccentric orbits'\n      );\n    }\n\n    this._locked = locked;\n  }\n\n  /**\n   * Sets an ephemerides attribute.\n   * @param {String} attr The name of the attribute (e.g. 'a')\n   * @param {Number} val The value of the attribute (e.g. 0.5)\n   * @param {'deg'|'rad'} units The unit of angle provided, if applicable.\n   */\n  set(attr: TEphemValidAttrs, val: number, units = 'rad') {\n    if (this._locked) {\n      throw new Error('Attempted to modify locked (immutable) Ephem object');\n    }\n\n    if (!EPHEM_VALID_ATTRS.has(attr)) {\n      console.warn(`Invalid ephem attr: ${attr}`);\n      return false;\n    }\n\n    // Store everything in radians.\n    if (units === 'deg') {\n      this._attrs[attr] = (val * Math.PI) / 180;\n    } else {\n      this._attrs[attr] = val;\n    }\n    return true;\n  }\n\n  /**\n   * Gets an ephemerides attribute.\n   * @param {String} attr The name of the attribute (e.g. 'a')\n   * @param {'deg'|'rad'} units The unit of angle desired, if applicable. This\n   * input is ignored for values that are not angle measurements.\n   */\n  get(attr: TEphemValidAttrs, units = 'rad') {\n    // --->>>\n\n    const val = this._attrs[attr]!;\n    // if (!val && units !== 'deg') throw new Error('Poor logic to allow non angle attr here');\n\n    return units === 'deg' ? (val * 180) / Math.PI : val;\n  }\n\n  /**\n   * @private\n   * Infers values of some ephemerides attributes if the required information\n   * is available.\n   */\n  fill() {\n    // Perihelion distance and semimajor axis\n    const e = this.get('e');\n    if (!isDef(e)) {\n      throw new Error('Must define eccentricity \"e\" in an orbit');\n    }\n\n    // Semimajor axis and perihelion distance\n    let a = this.get('a');\n    let q = this.get('q');\n    if (isDef(a)) {\n      if (!isDef(q)) {\n        if (e >= 1.0) {\n          throw new Error(\n            'Must provide perihelion distance \"q\" if eccentricity \"e\" is greater than 1'\n          );\n        }\n        q = a * (1.0 - e);\n        this.set('q', q);\n      }\n    } else if (isDef(q)) {\n      a = q / (1.0 - e);\n      this.set('a', a);\n    } else {\n      throw new Error(\n        'Must define semimajor axis \"a\" or perihelion distance \"q\" in an orbit'\n      );\n    }\n\n    // Longitude/Argument of Perihelion and Long. of Ascending Node\n    let w = this.get('w');\n    let wBar = this.get('wBar');\n    let om = this.get('om');\n    if (isDef(w) && isDef(om) && !isDef(wBar)) {\n      wBar = w + om;\n      this.set('wBar', wBar);\n    } else if (isDef(wBar) && isDef(om) && !isDef(w)) {\n      w = wBar - om;\n      this.set('w', w);\n    } else if (isDef(w) && isDef(wBar) && !isDef(om)) {\n      om = wBar - w;\n      this.set('om', om);\n    }\n\n    // Mean motion and period\n    const aMeters = a * METERS_IN_AU;\n    const n = this.get('n');\n    const GM = this.get('GM');\n    let period = this.get('period');\n\n    if (!isDef(period) && isDef(a)) {\n      period =\n        (2 * Math.PI * Math.sqrt((aMeters * aMeters * aMeters) / GM)) /\n        SECONDS_IN_DAY;\n      this.set('period', period);\n    }\n\n    if (e < 1.0) {\n      // Only work with mean motion for elliptical orbits.\n      if (isDef(period) && !isDef(n)) {\n        // Set radians\n        const newN = (2.0 * Math.PI) / period;\n        this.set('n', newN);\n      } else if (isDef(n) && !isDef(period)) {\n        this.set('period', (2.0 * Math.PI) / n);\n      }\n    }\n\n    // Mean longitude\n    const ma = this.get('ma');\n    let L = this.get('L');\n    if (!isDef(L) && isDef(om) && isDef(w) && isDef(ma)) {\n      L = om + w + ma;\n      this.set('L', L);\n    }\n\n    // Mean anomaly\n    if (!isDef(ma)) {\n      // MA = Mean longitude - Longitude of perihelion\n      this.set('ma', L - wBar);\n    }\n\n    //  TODO(ian): Handle no om\n  }\n\n  /**\n   * Make this ephem object immutable.\n   */\n  lock() {\n    this._locked = true;\n  }\n\n  copy() {\n    return new SKEphem(\n      {\n        GM: this.get('GM'),\n        epoch: this.get('epoch'),\n        a: this.get('a'),\n        e: this.get('e'),\n        i: this.get('i'),\n        om: this.get('om'),\n        ma: this.get('ma'),\n        w: this.get('w'),\n      },\n      'rad'\n    );\n  }\n}\n\n/**\n * Standard gravitational parameter for objects orbiting these bodies.\n * Units in m^3/s^2\n */\nexport const GM = {\n  // See https://space.stackexchange.com/questions/22948/where-to-find-the-best-values-for-standard-gravitational-parameters-of-solar-sys and https://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/gm_de431.tpc\n  SUN: 1.3271244004193938e20,\n  MERCURY: 2.2031780000000021e13,\n  VENUS: 3.2485859200000006e14,\n  EARTH_MOON: 4.0350323550225981e14,\n  MARS: 4.2828375214000022e13,\n  JUPITER: 1.2671276480000021e17,\n  SATURN: 3.7940585200000003e16,\n  URANUS: 5.794548600000008e15,\n  NEPTUNE: 6.8365271005800236e15,\n  PLUTO_CHARON: 9.7700000000000068e11,\n};\n","import { SKEphem } from '../utils/sk-ephem';\n\n/**\n * A dictionary containing ephemerides of planets and other well-known objects.\n * @example\n * const planet1 = viz.createObject('planet1', {\n *   ephem: EphemPresets.MERCURY,\n * });\n */\nexport const EphemPresets = {\n  // See https://ssd.jpl.nasa.gov/?planet_pos and https://ssd.jpl.nasa.gov/txt/p_elem_t1.txt\n  MERCURY: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 3.870968969437096e-1,\n      e: 2.056515875393916e-1,\n      i: 7.003891682749818,\n      om: 4.830774804443502e1,\n      w: 2.917940253442659e1,\n      ma: 2.56190975209273e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  VENUS: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 7.233458663591554e-1,\n      e: 6.762510759617694e-3,\n      i: 3.394567787211735,\n      om: 7.662534150657346e1,\n      w: 5.474567447560867e1,\n      ma: 2.756687596099721e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  EARTH: new SKEphem(\n    {\n      // Taken from https://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html\n      /*\n    epoch: 2451545.0,\n    a: 1.00000011,\n    e: 0.01671022,\n    i: 0.00005,\n    om: -11.26064,\n    wBar: 102.94719,\n    L: 100.46435,\n    */\n\n      // https://ssd.jpl.nasa.gov/txt/p_elem_t1.txt\n      epoch: 2451545.0,\n      a: 1.00000261,\n      e: 0.01671123,\n      i: -0.00001531,\n      om: 0.0,\n      wBar: 102.93768193,\n      L: 100.46457166,\n\n      /*\n      epoch: 2458426.500000000,\n      a: 1.000618919441359E+00,\n      e: 1.676780871638673E-02,\n      i: 0,\n      om: 1.888900932218542E+02,\n      w: 2.718307282052625E+02,\n      ma: 3.021792498388233E+02,\n     */\n    },\n    'deg',\n    true /* locked */\n  ),\n  MOON: new SKEphem(\n    {\n      // https://nssdc.gsfc.nasa.gov/planetary/factsheet/moonfact.html\n      GM: 0.3986e6,\n\n      // Geocentric\n      // https://ssd.jpl.nasa.gov/horizons.cgi#results\n      epoch: 2458621.5,\n      a: 2.582517063772124e-3,\n      e: 4.582543645168888e-2,\n      i: 5.102060246928811,\n      om: 1.085916732144811e2,\n      w: 6.180561793729225e1,\n      ma: 5.053270083636792e1,\n      /*\n     * heliocentric\n    epoch: 2458621.500000000,\n    a: 1.078855621785179E+00,\n    e: 6.333300212090676E-02,\n    i: 7.211217382317713E-02,\n    om: 6.722057157026397E+01,\n    w: 1.503642883585293E+02,\n    ma: 1.666758688084831E+01,\n   */\n    },\n    'deg',\n    true /* locked */\n  ),\n  MARS: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 1.52371401537107,\n      e: 9.336741335309606e-2,\n      i: 1.848141099825311,\n      om: 4.950420572080223e1,\n      w: 2.866965847685386e2,\n      ma: 2.538237617924876e1,\n    },\n    'deg',\n    true /* locked */\n  ),\n  ///\n  CERES: new SKEphem(\n    {\n      // Sources:\n      // https://www.princeton.edu/~willman/planetary_systems/Sol/Ceres/\n      // https://en.wikipedia.org/wiki/Ceres_(dwarf_planet)\n      // epoch: 2458600.5,\n      // a: 2.7658,\n      // e: 0.078,\n      // i: 10.607,\n      // om: 80.7,\n      // w: 73.1,\n      // ma: 77.37209589,\n      //\n      //\n\n      // From MPC data\n      epoch: 2459200.5,\n      a: 2.7660891,\n      e: 0.0781685,\n      i: 10.5879,\n      om: 80.27236,\n      w: 73.72487,\n      ma: 205.54542,\n    },\n    'deg',\n    true /* locked */\n  ),\n  ///\n  JUPITER: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 5.20180355911023,\n      e: 4.89912558249006e-2,\n      i: 1.303560894624275,\n      om: 1.005203828847816e2,\n      w: 2.73736301845404e2,\n      ma: 2.31939544389401e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  SATURN: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 9.577177295536776,\n      e: 5.101889921719987e-2,\n      i: 2.482782449972317,\n      om: 1.136154964073247e2,\n      w: 3.394422648650336e2,\n      ma: 1.870970898012944e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  URANUS: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 1.914496966635462e1,\n      e: 4.832662948112808e-2,\n      i: 7.697511134483724e-1,\n      om: 7.414239045667875e1,\n      w: 9.942704504702185e1,\n      ma: 2.202603033874267e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  NEPTUNE: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 3.00962226342805e1,\n      e: 7.36257118719377e-3,\n      i: 1.774569249829094,\n      om: 1.318695882492132e2,\n      w: 2.586226409499831e2,\n      ma: 3.152804988924479e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  PLUTO: new SKEphem(\n    {\n      epoch: 2454000.5,\n      a: 39.4450697257,\n      e: 0.250248713478,\n      i: 17.0890009196,\n      om: 110.376957955,\n      w: 112.597141677,\n      ma: 25.2471897122,\n    },\n    'deg',\n    true /* locked */\n  ),\n  HAUMEA: new SKEphem(\n    {\n      epoch: 2459200.5,\n      a: 43.116,\n      e: 0.19642,\n      i: 28.2137,\n      om: 122.167,\n      w: 239.041,\n      ma: 218.205,\n    },\n    'deg',\n    true /* locked */\n  ),\n  MAKEMAKE: new SKEphem(\n    {\n      epoch: 2458900.5,\n      a: 45.43,\n      e: 0.16126,\n      i: 28.9835,\n      om: 79.62,\n      w: 294.834,\n      ma: 165.514,\n    },\n    'deg',\n    true /* locked */\n  ),\n  ERIS: new SKEphem(\n    {\n      epoch: 2459000.5,\n      a: 67.864,\n      e: 0.43607,\n      i: 44.04,\n      om: 35.951,\n      w: 151.639,\n      ma: 205.989,\n    },\n    'deg',\n    true /* locked */\n  ),\n};\n\n// a?: number; // Semimajor axis\n// e?: number; // Eccentricity\n// i?: number; // Inclination\n// epoch?: number; // Epoch in JD\n// period?: number; // Period in days\n// ma?: number; // Mean anomaly\n// n?: number; // Mean motion\n// L?: number; // Mean longitude\n// om?: number; // Longitude of Ascending Node ===> \"Node\" in MPC asteroids\n// w?: number; // Argument of Perihelion ===> \"Peri\" in MPC asteroids\n// wBar?: number; // Longitude of Perihelion\n// GM?: number; // Standard gravitational parameter in km^3/s^2.\n","let scaleFactor = 1.0;\n\n/**\n * Set the number of units per AU.\n */\nexport function setScaleFactor(val: number) {\n  scaleFactor = val;\n}\n\n/**\n * Get the number of units per AU.\n */\nexport function getScaleFactor() {\n  return scaleFactor;\n}\n\nexport function rescalePos(pos: { x: number; y: number; z: number }) {\n  pos.x *= scaleFactor;\n  pos.y *= scaleFactor;\n  pos.z *= scaleFactor;\n  return pos;\n}\n\nexport function rescaleArray(XYZ: number[]) {\n  return [XYZ[0] * scaleFactor, XYZ[1] * scaleFactor, XYZ[2] * scaleFactor];\n}\n\nexport function rescaleXYZ(X: number, Y: number, Z: number) {\n  return [X * scaleFactor, Y * scaleFactor, Z * scaleFactor];\n}\n\nexport function rescaleVector(vec: THREE.Vector3) {\n  return vec.multiplyScalar(scaleFactor);\n}\n\nexport function rescaleNumber(x: number) {\n  return scaleFactor * x;\n}\n\nexport function rescale(...args: any[]) {\n  if (Array.isArray(args[0])) {\n    return rescaleArray(args[0]);\n  }\n  if (typeof args[0] === 'number') {\n    if (args.length === 3) {\n      // @ts-ignore\n      return rescaleXYZ(...args);\n    }\n    return rescaleNumber(args[0]);\n  }\n  return rescalePos(args[0]);\n}\n","/**\n * Interpolates the given 2D array of data using a Lagrange Polynomial interpolation. User specifies first/last row\n * versus giving a number of sample points and a starting index. For best performance number of points generally would\n * be between 1 (linear) and 7\n *\n * @param {Array} data array\n * @param {Number} xValue value of x to evaluate for function y = f(x) represented by the data\n * @param {Number} sampleRowMin first row of data to use for the interpolation\n * @param {Number} sampleRowMax last row of data to use for the interpolation\n * @param {Number} xIndex the column of data which represents the 'x' variable of y = f(x)\n * @param {Number} yIndex the column of data which represents the 'y' curve data of y = f(x)\n * @returns {Number} the interpolated value of the function f(x) from the data\n */\nexport function interpolate(\n  data: any[],\n  xValue: number,\n  sampleRowMin: number,\n  sampleRowMax: number,\n  xIndex: number,\n  yIndex: number\n) {\n  if (data === undefined) {\n    throw 'data object is undefined';\n  }\n\n  if (!Array.isArray(data)) {\n    throw 'data object must be an array';\n  }\n\n  if (sampleRowMin >= sampleRowMax) {\n    throw 'first row must be greater than last row';\n  }\n\n  if (sampleRowMin < 0) {\n    throw 'first row must be greater than zero';\n  }\n\n  if (sampleRowMax > data.length - 1) {\n    throw 'last row must be ';\n  }\n\n  if (!Array.isArray(data[sampleRowMin])) {\n    throw 'data in rows must be array data';\n  }\n\n  const maxColumn = data[0].length - 1;\n  if (xIndex < 0 || xIndex > maxColumn) {\n    throw `xIndex has to be between 0 and ${maxColumn}: ${xIndex}`;\n  }\n\n  if (yIndex < 0 || yIndex > maxColumn) {\n    throw `yIndex has to be between 0 and ${maxColumn}: ${yIndex}`;\n  }\n\n  let sum = 0;\n  for (let j = sampleRowMin; j <= sampleRowMax; j++) {\n    let prod = 1;\n    for (let k = sampleRowMin; k <= sampleRowMax; k++) {\n      if (k === j) {\n        continue;\n      }\n      prod *= (xValue - data[k][xIndex]) / (data[j][xIndex] - data[k][xIndex]);\n    }\n\n    sum += prod * data[j][yIndex];\n  }\n\n  return sum;\n}\n","import * as THREE from 'three';\n\nconst DEFAULT_COMPARER_METHOD = (a: any, b: any) => {\n  return a - b;\n};\n/**\n * @ignore\n */\nexport const DEFAULT_TEXTURE_URL = '{{assets}}/sprites/fuzzyparticle.png';\n\n/**\n * Returns the complete URL to a texture given a basepath and a template url.\n * @param {String} template URL containing optional template parameters\n * @param {String} basePath Base path\n * @example\n * getFullUrl('{{assets}}/images/mysprite.png', '/path/to/assets')\n * => '/path/to/assets/images/mysprite.png'\n */\nexport function getFullUrl(template: string, basePath: string) {\n  return template\n    .replace('{{assets}}', `${basePath}/assets`)\n    .replace('{{data}}', `${basePath}/data`);\n}\n\n/**\n * Returns the complete URL to a texture given a basepath and a template url.\n * @param {String} template URL containing optional template parameters\n * @param {String} basePath Base path for simulation data and assets.\n * @example\n * getFullTextureUrl('{{assets}}/images/mysprite.png', '/path/to/assets')\n * => '/path/to/assets/images/mysprite.png'\n */\nexport function getFullTextureUrl(template: string, basePath: string) {\n  return getFullUrl(template || DEFAULT_TEXTURE_URL, basePath);\n}\n\n/*\n * Returns a THREE.js texture given a basepath and a template url.\n * @param {String} template URL containing optional template parameters\n * @param {String} basePath Base path for simulation data and assets.\n */\nexport function getThreeJsTexture(template: string, basePath: string) {\n  const fullTextureUrl = getFullTextureUrl(template, basePath);\n  return new THREE.TextureLoader().load(fullTextureUrl);\n}\n\nexport function getDefaultBasePath() {\n  return window.location.href.indexOf('localhost') > -1\n    ? '/src/'\n    : 'https://typpo.github.io/spacekit/src';\n}\n\n/**\n * Performs a standard binary search on an array of values returning the index of the found item or the twos complement\n * negative of the closest value if the exact value isn't found. For example for array: [10, 20, 30]\n *   * Searching for a value of 20 would return an index of 1\n *   * Searching for a value of 12 would return a value of -2 (taking the two's complement back '~' give you 1)\n * @param {Array} data an array of values of the type consistent with the comparer method\n * @param value the value to be searched for in the data array\n * @param {Function} [comparer] a function which takes two arguments: first of same type as data row and second as same\n * time as value to compare. Default method is a numerical comparison\n * @returns {number}\n */\nexport function binarySearch(\n  data: any[],\n  value: any,\n  comparer = DEFAULT_COMPARER_METHOD\n) {\n  if (data === undefined) {\n    throw 'data object is undefined';\n  }\n\n  if (!Array.isArray(data)) {\n    throw 'data object must be an array';\n  }\n\n  if (value === undefined) {\n    throw 'value object must be defined';\n  }\n\n  if (comparer === undefined) {\n    throw 'comparer must be defined';\n  }\n\n  let left = 0;\n  let right = data.length;\n\n  while (left <= right) {\n    let middle = Math.floor((left + right) / 2);\n    if (middle === data.length) {\n      return middle;\n    }\n    let comparisonCalc = comparer(data[middle], value);\n    if (comparisonCalc < 0) {\n      left = middle + 1;\n    } else if (comparisonCalc > 0) {\n      right = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  return ~left;\n}\n","import * as THREE from 'three';\nimport julian from 'julian';\n\nimport { rescaleArray, rescaleXYZ } from './sk-scale';\nimport { SKEphemerisTable } from './sk-ephemeris-table';\nimport { SKEphem } from './sk-ephem';\nimport { auToMeters } from './conversions';\n\nconst sin = Math.sin;\nconst cos = Math.cos;\nconst sqrt = Math.sqrt;\n\nconst DEFAULT_LEAD_TRAIL_YEARS = 10;\nconst DEFAULT_SAMPLE_POINTS = 360;\n// const DEFAULT_ORBIT_PATH_SETTINGS = {\n//   leadDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n//   trailDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n//   numberSamplePoints: DEFAULT_SAMPLE_POINTS,\n// };\n// const MAX_NUM_ECLIPTIC_DROPLINES = 90;\n\n/**\n * Special cube root function that assumes input is always positive.\n */\nfunction cbrt(x: number) {\n  return Math.exp(Math.log(x) / 3.0);\n}\n\n/**\n * Enum of orbital types.\n */\n// export const OrbitType = Object.freeze({\n//   UNKNOWN: 0,\n//   PARABOLIC: 1,\n//   HYPERBOLIC: 2,\n//   ELLIPTICAL: 3,\n//   TABLE: 4,\n// });\n\nenum OrbitType {\n  UNKNOWN,\n  PARABOLIC,\n  HYPERBOLIC,\n  ELLIPTICAL,\n  TABLE,\n}\n\n/**\n * Get the type of orbit. Returns one of OrbitType.PARABOLIC, HYPERBOLIC,\n * ELLIPTICAL, or UNKNOWN.\n * @return {OrbitType} Name of orbit type\n */\nexport function getOrbitType(ephem: SKEphem | SKEphemerisTable) {\n  if (ephem instanceof SKEphemerisTable) {\n    return OrbitType.TABLE;\n  }\n\n  let e = ephem.get('e');\n  if (e > 0.9 && e < 1.2) {\n    return OrbitType.PARABOLIC;\n  } else if (e > 1.2) {\n    return OrbitType.HYPERBOLIC;\n  } else {\n    return OrbitType.ELLIPTICAL;\n  }\n}\n\ninterface IOptions {\n  color: string;\n  eclipticLineColor: string;\n  orbitPathSettings: {\n    leadDurationYears: number;\n    trailDurationYears: number;\n    numberSamplePoints: number;\n  };\n}\n\n/**\n * A class that builds a visual representation of a Kepler orbit.\n * @example\n * const orbit = new Spacekit.Orbit({\n *   ephem: new Spacekit.Ephem({...}),\n *   options: {\n *     color: 0xFFFFFF,\n *     eclipticLineColor: 0xCCCCCC,\n *   },\n * });\n */\nexport class SKOrbit {\n  // ~~~>>>\n\n  private _options: IOptions;\n  private _orbitPoints?: THREE.BufferGeometry;\n  private _eclipticDropLines?: THREE.LineSegments<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private _orbitShape?: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private _orbitStart = 0;\n  private _orbitStop = 0;\n  private _orbitType: OrbitType;\n\n  /**\n   * @param {(SKEphem | SKEphemerisTable)} ephem The ephemerides that define this orbit.\n   * @param {Object} options\n   * @param {Object} options.color The color of the orbital ellipse.\n   * @param {Object} options.orbitPathSettings settings for the path\n   * @param {Object} options.orbitPathSettings.leadDurationYears orbit path lead time in years\n   * @param {Object} options.orbitPathSettings.trailDurationYears orbit path trail time in years\n   * @param {Object} options.orbitPathSettings.numberSamplePoints number of\n   * points to use when drawing the orbit line. Only applicable for\n   * non-elliptical and ephemeris table orbits.\n   * @param {Object} options.eclipticLineColor The color of lines drawn\n   * perpendicular to the ecliptic in order to illustrate depth (defaults to\n   * 0x333333).\n   */\n  constructor(\n    private _ephem: SKEphem | SKEphemerisTable,\n    options: Partial<IOptions>\n  ) {\n    /**\n     * Ephem object\n     * @type {SKEphem}\n     */\n    // this._ephem = ephem;\n\n    /**\n     * Options (see class definition for details)\n     */\n    this._options = {\n      color: 'white',\n      eclipticLineColor: 'cyan',\n      ...options,\n      orbitPathSettings: {\n        leadDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n        trailDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n        numberSamplePoints: DEFAULT_SAMPLE_POINTS,\n        ...options.orbitPathSettings,\n      },\n    };\n\n    // /**\n    //  * configuring orbit path lead/trail data\n    //  */\n    // if (!this._options.orbitPathSettings) {\n    //   this._options.orbitPathSettings = JSON.parse(\n    //     JSON.stringify(DEFAULT_ORBIT_PATH_SETTINGS)\n    //   );\n    // }\n\n    // if (!this._options.orbitPathSettings.leadDurationYears) {\n    //   this._options.orbitPathSettings.leadDurationYears = DEFAULT_LEAD_TRAIL_YEARS;\n    // }\n\n    // if (!this._options.orbitPathSettings.trailDurationYears) {\n    //   this._options.orbitPathSettings.trailDurationYears = DEFAULT_LEAD_TRAIL_YEARS;\n    // }\n\n    // if (!this._options.orbitPathSettings.numberSamplePoints) {\n    //   this._options.orbitPathSettings.numberSamplePoints = DEFAULT_SAMPLE_POINTS;\n    // }\n\n    /**\n     * Cached orbital points.\n     * @type {Array.<THREE.Vector3>}\n     */\n    // this._orbitPoints = null;\n\n    /**\n     * Cached ecliptic drop lines.\n     * @type {Array.<THREE.Vector3>}\n     */\n    // this._eclipticDropLines = null;\n\n    /**\n     * Cached orbit shape.\n     * @type {THREE.Line}\n     */\n    // this._orbitShape = null;\n\n    /**\n     * Time span of the drawn orbit line\n     */\n    // this._orbitStart = 0;\n    // this._orbitStop = 0;\n\n    /**\n     * Orbit type\n     * @type {OrbitType}\n     */\n    // this._orbitType = getOrbitType(this._ephem);\n\n    this._orbitType = getOrbitType(this._ephem);\n  }\n\n  /**\n   * Get heliocentric position of object at a given JD.\n   * @param {Number} jd Date value in JD.\n   * @param {boolean} debug Set true for debug output.\n   * @return {Array.<Number>} [X, Y, Z] coordinates\n   */\n  getPositionAtTime(jd: number, debug = false) {\n    // Note: logic below must match the vertex shader.\n\n    // This position calculation is used to create orbital ellipses.\n    switch (this._orbitType) {\n      case OrbitType.PARABOLIC:\n        return this.getPositionAtTimeNearParabolic(jd, debug);\n      case OrbitType.HYPERBOLIC:\n        return this.getPositionAtTimeHyperbolic(jd, debug);\n      case OrbitType.ELLIPTICAL:\n        return this.getPositionAtTimeElliptical(jd, debug);\n      case OrbitType.TABLE:\n        return this.getPositionAtTimeTable(jd, debug);\n    }\n    throw new Error('No handler for this type of orbit');\n  }\n\n  getPositionAtTimeParabolic(jd: number, _debug = false) {\n    // See https://stjarnhimlen.se/comp/ppcomp.html#17\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // The Guassian gravitational constant\n    const k = 0.01720209895;\n\n    // Perihelion distance\n    const q = eph.get('q');\n\n    // Compute time since perihelion\n    const d = jd - eph.get('tp');\n\n    const H = (d * (k / sqrt(2))) / sqrt(q * q * q);\n    const h = 1.5 * H;\n    const g = sqrt(1.0 + h * h);\n    const s = cbrt(g + h) - cbrt(g - h);\n\n    // True anomaly\n    const v = 2.0 * Math.atan(s);\n    // Heliocentric distance\n    const r = q * (1.0 + s * s);\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeNearParabolic(jd: number, _debug = false) {\n    // See https://stjarnhimlen.se/comp/ppcomp.html#17\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // The Guassian gravitational constant\n    const k = 0.01720209895;\n\n    // Eccentricity\n    const e = eph.get('e');\n\n    // Perihelion distance\n    const q = eph.get('q');\n\n    // Compute time since perihelion\n    const d = jd - eph.get('tp');\n\n    const a = 0.75 * d * k * sqrt((1 + e) / (q * q * q));\n    const b = sqrt(1 + a * a);\n    const W = cbrt(b + a) - cbrt(b - a);\n    const f = (1 - e) / (1 + e);\n\n    const a1 = 2 / 3 + (2 / 5) * W * W;\n    const a2 = 7 / 5 + (33 / 35) * W * W + (37 / 175) * W ** 4;\n    const a3 =\n      W * W * (432 / 175 + (956 / 1125) * W * W + (84 / 1575) * W ** 4);\n\n    const C = (W * W) / (1 + W * W);\n    const g = f * C * C;\n    const w = W * (1 + f * C * (a1 + a2 * g + a3 * g * g));\n\n    // True anomaly\n    const v = 2 * Math.atan(w);\n    // Heliocentric distance\n    const r = (q * (1 + w * w)) / (1 + w * w * f);\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeHyperbolic(jd: number, _debug = false) {\n    // See https://stjarnhimlen.se/comp/ppcomp.html#17\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // Eccentricity\n    const e = eph.get('e');\n\n    // Perihelion distance\n    // const q = eph.get('q');\n\n    // Semimajor axis\n    const a = eph.get('a');\n\n    // Mean anomaly\n    const ma = eph.get('ma');\n\n    // Calculate mean anomaly at jd\n    const n = eph.get('n', 'rad');\n    const epoch = eph.get('epoch');\n    const d = jd - epoch;\n\n    const M = ma + n * d;\n\n    let F0 = M;\n    for (let count = 0; count < 100; count++) {\n      const F1 =\n        (M + e * (F0 * Math.cosh(F0) - Math.sinh(F0))) /\n        (e * Math.cosh(F0) - 1);\n      const lastdiff = Math.abs(F1 - F0);\n      F0 = F1;\n\n      if (lastdiff < 0.0000001) {\n        break;\n      }\n    }\n    const F = F0;\n\n    const v = 2 * Math.atan(sqrt((e + 1) / (e - 1))) * Math.tanh(F / 2);\n    const r = (a * (1 - e * e)) / (1 + e * cos(v));\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeElliptical(jd: number, _debug = false) {\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // Eccentricity\n    const e = eph.get('e');\n\n    // Mean anomaly\n    const ma = eph.get('ma', 'rad');\n\n    // Calculate mean anomaly at jd\n    const n = eph.get('n', 'rad');\n    const epoch = eph.get('epoch');\n    const d = jd - epoch;\n\n    const M = ma + n * d;\n    if (_debug) {\n      console.info('period=', eph.get('period'));\n      console.info('n=', n);\n      console.info('ma=', ma);\n      console.info('d=', d);\n      console.info('M=', M);\n    }\n\n    // Estimate eccentric and true anom using iterative approx\n    let E0 = M;\n    for (let count = 0; count < 100; count++) {\n      const E1 = M + e * sin(E0);\n      const lastdiff = Math.abs(E1 - E0);\n      E0 = E1;\n\n      if (lastdiff < 0.0000001) {\n        break;\n      }\n    }\n    const E = E0;\n    const v = 2 * Math.atan(sqrt((1 + e) / (1 - e)) * Math.tan(E / 2));\n\n    // Radius vector, in AU\n    const a = eph.get('a');\n    const r = (a * (1 - e * e)) / (1 + e * cos(v));\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeTable(jd: number, _debug = false) {\n    if (this._ephem instanceof SKEphem)\n      throw new Error('Poor logic allowing non-table type here');\n\n    const point = this._ephem.getPositionAtTime(jd);\n    return rescaleXYZ(point[0], point[1], point[2]);\n  }\n\n  /**\n   * Given true anomaly and heliocentric distance, returns the scaled heliocentric coordinates (X, Y, Z)\n   * @param {Number} v True anomaly\n   * @param {Number} r Heliocentric distance\n   * @return {Array.<Number>} Heliocentric coordinates\n   */\n  vectorToHeliocentric(v: number, r: number) {\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // Inclination, Longitude of ascending node, Longitude of perihelion\n    const i = eph.get('i', 'rad');\n    const o = eph.get('om', 'rad');\n    const p = eph.get('wBar', 'rad');\n\n    // Heliocentric coords\n    const X = r * (cos(o) * cos(v + p - o) - sin(o) * sin(v + p - o) * cos(i));\n    const Y = r * (sin(o) * cos(v + p - o) + cos(o) * sin(v + p - o) * cos(i));\n    const Z = r * (sin(v + p - o) * sin(i));\n\n    return rescaleXYZ(X, Y, Z);\n  }\n\n  /**\n   * Returns whether the requested epoch is within the current orbit's\n   * definition. Used only for ephemeris tables.\n   * @param {Number} jd\n   * @return {boolean} true if it is within the orbit span, false if not\n   */\n  needsUpdateForTime(jd: number) {\n    if (this._orbitType === OrbitType.TABLE) {\n      return jd < this._orbitStart || jd > this._orbitStop;\n    }\n    // Renderings for other types are static.\n    return false;\n  }\n\n  /**\n   * Calculates, caches, and returns the orbit state for this orbit around this time\n   * @param {Number} jd center time of the orbit (only used for ephemeris table ephemeris)\n   * @param {boolean} forceCompute forces the recomputing of the orbit on this call\n   * @return {THREE.Line}\n   */\n  getOrbitShape(\n    jd?: number,\n    forceCompute = false\n  ): THREE.Line<THREE.BufferGeometry, THREE.LineBasicMaterial> {\n    if (forceCompute) {\n      if (this._orbitShape) {\n        this._orbitShape.geometry.dispose();\n        this._orbitShape.material.dispose();\n      }\n      this._orbitShape = undefined;\n\n      if (this._orbitPoints) {\n        this._orbitPoints.dispose();\n      }\n      this._orbitPoints = undefined;\n\n      if (this._eclipticDropLines) {\n        this._eclipticDropLines.geometry.dispose();\n        this._eclipticDropLines.material.dispose();\n      }\n      this._eclipticDropLines = undefined;\n    }\n\n    if (this._orbitShape) {\n      return this._orbitShape;\n    }\n\n    if (this._orbitType === OrbitType.ELLIPTICAL) {\n      return this.getEllipse();\n    }\n\n    // For hyperbolic and parabolic orbits, decide on a time range to draw\n    // them.\n    // TODO(ian): Should we compute around current position, not time of perihelion?\n    // @ts-ignore\n    const tp = this._orbitType === OrbitType.TABLE ? jd : this._ephem.get('tp');\n    // Use current date as a fallback if time of perihelion is not available.\n    const centerDate = tp ? tp : julian.toJulianDay(new Date());\n    const startJd =\n      centerDate - this._options.orbitPathSettings.trailDurationYears * 365.25;\n    const endJd =\n      centerDate + this._options.orbitPathSettings.leadDurationYears * 365.25;\n    const step =\n      (endJd - startJd) / this._options.orbitPathSettings.numberSamplePoints;\n\n    this._orbitStart = startJd;\n    this._orbitStop = endJd;\n\n    switch (this._orbitType) {\n      case OrbitType.HYPERBOLIC:\n        return this.getLine(\n          this.getPositionAtTimeHyperbolic.bind(this),\n          startJd,\n          endJd,\n          step\n        );\n      case OrbitType.PARABOLIC:\n        return this.getLine(\n          this.getPositionAtTimeNearParabolic.bind(this),\n          startJd,\n          endJd,\n          step\n        );\n      case OrbitType.TABLE:\n        return this.getTableOrbit(startJd, endJd, step);\n    }\n    throw new Error('Unknown orbit shape');\n  }\n\n  /**\n   * Compute a line between a given date range.\n   * @private\n   */\n  getLine(\n    orbitFn: (_: number) => number[],\n    startJd: number,\n    endJd: number,\n    step: number\n  ) {\n    const points = [];\n    for (let jd = startJd; jd <= endJd; jd += step) {\n      const pos = orbitFn(jd);\n\n      // DWD\n      pos[0] = auToMeters(pos[0]);\n      pos[1] = auToMeters(pos[1]);\n      pos[2] = auToMeters(pos[2]);\n      //\n\n      points.push(new THREE.Vector3(pos[0], pos[1], pos[2]));\n    }\n\n    // const pointsGeometry = new THREE.Geometry();\n    // pointsGeometry.vertices = points;\n    const pointsGeometry = new THREE.BufferGeometry();\n    pointsGeometry.setFromPoints(points);\n\n    return this.generateAndCacheOrbitShape(pointsGeometry);\n  }\n\n  /**\n   * Returns the orbit for a table lookup orbit definition\n   * @private\n   * @param {Number} startJd start of orbit in JDate format\n   * @param {Number} stopJd end of orbit in JDate format\n   * @param {Number} step step size in days\n   * @return {THREE.Line}\n   */\n  getTableOrbit(startJd: number, stopJd: number, step: number) {\n    // --->>>\n\n    if (this._ephem instanceof SKEphem)\n      throw new Error('Poor logic allowing non-table type here');\n\n    const rawPoints = this._ephem.getPositions(startJd, stopJd, step);\n    const points = rawPoints\n      .map(values => rescaleArray(values))\n      .map(values => new THREE.Vector3(values[0], values[1], values[2]));\n\n    // const pointGeometry = new THREE.Geometry();\n    // pointGeometry.vertices = points;\n\n    const pointGeometry = new THREE.BufferGeometry();\n    pointGeometry.setFromPoints(points);\n\n    return this.generateAndCacheOrbitShape(pointGeometry);\n  }\n\n  /**\n   * @private\n   * @return {THREE.Line} The ellipse object that represents this orbit.\n   */\n  getEllipse() {\n    const pointGeometry = this.getEllipseGeometry();\n    return this.generateAndCacheOrbitShape(pointGeometry);\n  }\n\n  /**\n   * @private\n   * @return {THREE.Geometry} A THREE.js geometry\n   */\n  getEllipseGeometry() {\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    const _period = eph.get('period');\n    const a = eph.get('a');\n    const ecc = eph.get('e');\n\n    const twoPi = Math.PI * 2;\n    const step = twoPi / 90;\n    const pts = [];\n    for (let E = 0; E < twoPi; E += step) {\n      const v = 2 * Math.atan(sqrt((1 + ecc) / (1 - ecc)) * Math.tan(E / 2));\n      const r = (a * (1 - ecc * ecc)) / (1 + ecc * cos(v));\n      const pos = this.vectorToHeliocentric(v, r);\n\n      if (isNaN(pos[0]) || isNaN(pos[1]) || isNaN(pos[2])) {\n        console.error(\n          'NaN position value - you may have bad or incomplete data in the following ephemeris:'\n        );\n        console.error(eph);\n      }\n      // pts.push(new THREE.Vector3(pos[0], pos[1], pos[2]));\n      // DWD\n      pts.push(\n        new THREE.Vector3(\n          auToMeters(pos[0]),\n          auToMeters(pos[1]),\n          auToMeters(pos[2])\n        )\n      );\n      //\n    }\n    pts.push(pts[0]);\n\n    // const pointGeometry = new THREE.Geometry();\n    // pointGeometry.vertices = pts;\n\n    const pointGeometry = new THREE.BufferGeometry();\n    pointGeometry.setFromPoints(pts);\n\n    return pointGeometry;\n  }\n\n  /**\n   * @private\n   */\n  generateAndCacheOrbitShape(\n    pointGeometry: THREE.BufferGeometry\n  ): THREE.Line<THREE.BufferGeometry, THREE.LineBasicMaterial> {\n    // --->>>\n\n    this._orbitPoints = pointGeometry;\n    this._orbitShape = new THREE.Line(\n      pointGeometry,\n      new THREE.LineBasicMaterial({\n        color: new THREE.Color(this._options.color || 0x444444),\n      })\n    );\n    return this._orbitShape;\n  }\n\n  /**\n   * A geometry containing line segments that run between the orbit ellipse and\n   * the ecliptic plane of the solar system. This is a useful visual effect\n   * that makes it easy to tell when an orbit goes below or above the ecliptic\n   * plane.\n   * @return {THREE.Geometry} A geometry with many line segments.\n   */\n  getLinesToEcliptic() {\n    if (this._eclipticDropLines) {\n      return this._eclipticDropLines;\n    }\n\n    if (!this._orbitPoints) {\n      // Generate the orbitPoints cache.\n      this.getOrbitShape();\n    }\n    const points = this._orbitPoints;\n    // const geometry = new THREE.Geometry();\n    const geometry = new THREE.BufferGeometry();\n\n    if (!points) throw new Error('Poor logic letting point be undefined here');\n\n    // Place a cap on visible lines, for large or highly inclined orbits.\n    // points.vertices.forEach((vertex, idx) => {\n    //   // Drop last point because it's a repeat of the first point.\n    //   if (\n    //     idx === points.vertices.length - 1 &&\n    //     this._orbitType === OrbitType.ELLIPTICAL\n    //   ) {\n    //     return;\n    //   }\n    //   geometry.vertices.push(vertex);\n    //   geometry.vertices.push(new THREE.Vector3(vertex.x, vertex.y, 0));\n    // });\n\n    this._eclipticDropLines = new THREE.LineSegments(\n      geometry,\n      new THREE.LineBasicMaterial({\n        color: this._options.eclipticLineColor || 0x333333,\n        blending: THREE.AdditiveBlending,\n      })\n      // THREE.LineStrip\n    );\n\n    return this._eclipticDropLines;\n  }\n\n  /**\n   * Get the color of this orbit.\n   * @return {Number} The hexadecimal color of the orbital ellipse.\n   */\n  getHexColor() {\n    return this._orbitShape?.material.color.getHex();\n  }\n\n  /**\n   * @param {Number} hexVal The hexadecimal color of the orbital ellipse.\n   */\n  setHexColor(hexVal: string) {\n    if (this._orbitShape?.material?.color)\n      this._orbitShape.material.color = new THREE.Color(hexVal);\n  }\n\n  /**\n   * Get the visibility of this orbit.\n   * @return {boolean} Whether the orbital ellipse is visible. Note that\n   * although the ellipse may not be visible, it is still present in the\n   * underlying Scene and Simultation.\n   */\n  getVisibility() {\n    return this._orbitShape?.visible;\n  }\n\n  /**\n   * Change the visibility of this orbit.\n   * @param {boolean} val Whether to show the orbital ellipse.\n   */\n  setVisibility(val: boolean) {\n    if (this._orbitShape) this._orbitShape.visible = val;\n  }\n}\n","import * as SpacekitMath from './sk-math';\nimport * as Units from './sk-units';\nimport * as Util from './sk-util';\n\n/**\n * A class representing an ephemeris look-up table for defining a space object.\n * @example\n */\n\n// Constants\nconst MAX_INTERPOLATION_ORDER = 20;\nconst INCREASING_JDATE_SEARCH_METHOD = (a: any, b: any) => {\n  return a[0] - b;\n};\n\ninterface IUnits {\n  distance: 'au';\n  time: 'day';\n}\n\n//Default Values\nconst DEFAULT_UNITS: IUnits = {\n  distance: 'au',\n  time: 'day',\n};\n\nconst DEFAULT_EPHEM_TYPE = 'cartesianposvel';\nconst DEFAULT_INTERPOLATION_TYPE = 'lagrange';\nconst DEFAULT_INTERPOLATION_ORDER = 5;\n\n//Allowable unit types\nconst DISTANCE_UNITS = new Set(['km', 'au']);\nconst EPHEM_TYPES = new Set(['cartesianposvel']);\nconst INTERPOLATION_TYPES = new Set(['lagrange']);\nconst TIME_UNITS = new Set(['day', 'sec']);\n\ninterface IEphemerisData {\n  data: number[][];\n  ephemerisType: string;\n  distanceUnits: 'au';\n  timeUnits: 'day';\n  interpolationType: string;\n  interpolationOrder: number;\n}\n\n/**\n * This class encapsulates the data and necessary methods for operating with look up ephemeris data.\n * Users of the class pass in their ephemeris data as a data structure with the data and the settings for the ephemeris.\n * The settings include things like the units, and the ephemeris representation. The ephemeris data itself is an array\n * of arrays where each line constitute the necessary components of the line.\n *\n * For 'cartesianposvel' style ephemeris each line of data looks like: [Julian Date, X, Y, Z, Vx, Vy, Vz]\n */\nexport class SKEphemerisTable {\n  // ~~~>>>\n\n  private _units = { ...DEFAULT_UNITS };\n  private _ephemType = DEFAULT_EPHEM_TYPE;\n  private _interpolationType = DEFAULT_INTERPOLATION_TYPE;\n  private _interpolationOrder = DEFAULT_INTERPOLATION_ORDER;\n  private _data: number[][];\n\n  /**\n   * @param {Object} ephemerisData Look up ephemeris data to initialize the table with and the properties of it\n   * @param {Array.<Array.<Number>>} ephemerisData.data the ephemeris data appropriate for the specified ephemeris type\n   * @param {String} ephemerisData.ephemerisType the type of ephemeres data here (defaults to 'cartesianposvel')\n   * @param {String} ephemerisData.distanceUnits the distance units for this data (defaults to AU\n   * @param {String} ephemerisData.timeUnits the distance units for this data (defaults to day)\n   * @param {String} ephemerisData.interpolationType the type of interpolater to use (defaults to 'lagrange')\n   * @param {Number} ephemerisData.interpolationOrder the order of the interpolator to use (defaults to 5)\n   */\n  constructor(ephemerisData: IEphemerisData) {\n    // this._units = JSON.parse(JSON.stringify(DEFAULT_UNITS));\n    // this._ephemType = DEFAULT_EPHEM_TYPE;\n    // this._ephemType = DEFAULT_EPHEM_TYPE;\n    // this._interpolationType = DEFAULT_INTERPOLATION_TYPE;\n    // this._interpolationOrder = DEFAULT_INTERPOLATION_ORDER;\n\n    if (!ephemerisData) {\n      throw 'EphemerisTable must be initialized with an ephemeris data structure';\n    }\n\n    if (\n      !ephemerisData.data ||\n      !Array.isArray(ephemerisData.data) ||\n      ephemerisData.data.length === 0 ||\n      !Array.isArray(ephemerisData.data[0])\n    ) {\n      throw 'EphemerisTable must be initialized with a structure containing an array of arrays of ephemeris data';\n    }\n    // this._data = JSON.parse(JSON.stringify(ephemerisData.data));\n    this._data = [...ephemerisData.data];\n\n    if (ephemerisData.distanceUnits) {\n      if (!DISTANCE_UNITS.has(ephemerisData.distanceUnits)) {\n        throw `Unknown distance units: ${ephemerisData.distanceUnits}`;\n      }\n      this._units.distance = ephemerisData.distanceUnits;\n    }\n\n    if (ephemerisData.timeUnits) {\n      if (!TIME_UNITS.has(ephemerisData.timeUnits)) {\n        throw `Unknown time units: ${ephemerisData.timeUnits}`;\n      }\n      this._units.time = ephemerisData.timeUnits;\n    }\n\n    if (ephemerisData.ephemerisType) {\n      if (!EPHEM_TYPES.has(ephemerisData.ephemerisType)) {\n        throw `Unknown ephemeris type: ${ephemerisData.ephemerisType}`;\n      }\n      this._ephemType = ephemerisData.ephemerisType;\n    }\n\n    if (ephemerisData.interpolationType) {\n      if (!INTERPOLATION_TYPES.has(ephemerisData.interpolationType)) {\n        throw `Unknown interpolation type: ${ephemerisData.interpolationType}`;\n      }\n      this._interpolationType = ephemerisData.interpolationType;\n    }\n\n    if (ephemerisData.interpolationOrder !== undefined) {\n      if (\n        ephemerisData.interpolationOrder < 1 ||\n        ephemerisData.interpolationOrder > MAX_INTERPOLATION_ORDER\n      ) {\n        throw `Interpolation order must be >0 and <${MAX_INTERPOLATION_ORDER}: ${ephemerisData.interpolationOrder}`;\n      }\n      this._interpolationOrder = ephemerisData.interpolationOrder;\n    }\n\n    if (\n      this._units.distance !== DEFAULT_UNITS.distance ||\n      this._units.time !== DEFAULT_UNITS.time\n    ) {\n      const distanceMultiplier = this.calcDistanceMultiplier(\n        this._units.distance\n      );\n      const timeMultiplier = this.calcTimeMultiplier(this._units.time);\n      this._data.forEach(line => {\n        line[1] *= distanceMultiplier;\n        line[2] *= distanceMultiplier;\n        line[3] *= distanceMultiplier;\n        line[4] *= distanceMultiplier * timeMultiplier;\n        line[5] *= distanceMultiplier * timeMultiplier;\n        line[6] *= distanceMultiplier * timeMultiplier;\n      });\n    }\n  }\n\n  /**\n   * Calculates the interpolated position for the given requested date. If the requested date is before the first\n   * point it returns the first point. If the requested date is after the last point it returns the last point.\n   * @param {Number} jd of the requested time\n   * @returns {Number[]|*[]} x, y, z position in the ephemeris table's reference frame\n   */\n  getPositionAtTime(jd: number) {\n    if (jd <= this._data[0][0]) {\n      return [this._data[0][1], this._data[0][2], this._data[0][3]];\n    }\n\n    const last = this._data[this._data.length - 1];\n    if (jd >= last[0]) {\n      return [last[1], last[2], last[3]];\n    }\n\n    const { startIndex, stopIndex } = this.calcBoundingIndices(jd);\n    const x = SpacekitMath.interpolate(\n      this._data,\n      jd,\n      startIndex,\n      stopIndex,\n      0,\n      1\n    );\n    const y = SpacekitMath.interpolate(\n      this._data,\n      jd,\n      startIndex,\n      stopIndex,\n      0,\n      2\n    );\n    const z = SpacekitMath.interpolate(\n      this._data,\n      jd,\n      startIndex,\n      stopIndex,\n      0,\n      3\n    );\n\n    return [x, y, z];\n  }\n\n  /**\n   * Given the start and stop time returns a uniform ephemeris history.\n   * @param {Number} startJd the requested start date\n   * @param {Number} stopJd the requested stop date\n   * @param {Number} stepDays the step size of the data requested in days (can be fractional days)\n   * @returns {number[][]}\n   */\n  getPositions(startJd: number, stopJd: number, stepDays: number) {\n    if (startJd > stopJd) {\n      throw `Requested start needs to be after requested stop`;\n    }\n\n    if (stepDays <= 0.0) {\n      throw 'Step days needs to be greater than zero';\n    }\n\n    let result = [];\n    for (let t = startJd; t <= stopJd; t += stepDays) {\n      result.push(this.getPositionAtTime(t));\n    }\n\n    return result;\n  }\n\n  /**\n   * @private\n   */\n  calcDistanceMultiplier(unitType: 'au' | 'km') {\n    switch (unitType) {\n      case 'au':\n        return 1.0;\n      case 'km':\n        return Units.kmToAu(1);\n      default:\n        throw new Error('Unknown distance unit type: ' + unitType);\n    }\n  }\n\n  /**\n   * @private\n   */\n  calcTimeMultiplier(unitType: 'day' | 'sec') {\n    switch (unitType) {\n      case 'day':\n        return 1.0;\n      case 'sec':\n        return 1 / 86400.0;\n      default:\n        throw new Error('Unknown time unit type: ' + unitType);\n    }\n  }\n\n  /**\n   * @private\n   */\n  calcBoundingIndices(jd: number) {\n    const halfSampleSize = Math.floor(this._interpolationOrder / 2);\n    let closestIndex = Util.binarySearch(\n      this._data,\n      jd,\n      INCREASING_JDATE_SEARCH_METHOD\n    );\n    if (closestIndex < 0) {\n      closestIndex = ~closestIndex - 1;\n    }\n    let startIndex = closestIndex - halfSampleSize;\n    if (startIndex < 0) {\n      startIndex = 0;\n    }\n\n    let stopIndex = startIndex + Number(this._interpolationOrder);\n    if (stopIndex >= this._data.length) {\n      stopIndex = this._data.length - 1;\n      if (this._data.length > halfSampleSize) {\n        startIndex = stopIndex - halfSampleSize;\n      }\n    }\n\n    return { startIndex: startIndex, stopIndex: stopIndex };\n  }\n}\n","export function rad(val: number) {\n  return (val * Math.PI) / 180;\n}\n\nexport function deg(val: number) {\n  return (val * 180) / Math.PI;\n}\n\nexport function hoursToDeg(val: number) {\n  return val * 15.0;\n}\n\nexport function sexagesimalToDecimalRa(\n  raHour: number,\n  raMin: number,\n  raSec: number\n) {\n  // https://astronomy.stackexchange.com/questions/24518/convert-a-decimal-into-ra-or-dec\n  return raHour * 15.0 + raMin / 4.0 + raSec / 240.0;\n}\n\nexport function sexagesimalToDecimalDec(\n  decDeg: number,\n  decMin: number,\n  decSec: number,\n  isObserverBelowEquator = false\n) {\n  const posneg = isObserverBelowEquator ? -1 : 1;\n  return decDeg + decMin / 60.0 + (posneg * decSec) / 3600.0;\n}\n\nexport function decimalToSexagesimalRa(decimal: string) {\n  const val = parseFloat(decimal);\n  const raHour = Math.trunc(val / 15.0);\n  const raMin = Math.trunc((val - raHour * 15.0) * 4.0);\n  const raSec = (val - raHour * 15.0 - raMin / 4.0) * 240.0;\n  return [raHour, raMin, raSec];\n}\n\nexport function decimalToSexagesimalDec(\n  decimal: string,\n  isObserverBelowEquator = false\n) {\n  const val = parseFloat(decimal);\n  const posneg = isObserverBelowEquator ? -1 : 1;\n\n  const decDeg = Math.trunc(val);\n  const decMin = Math.trunc((val - posneg * decDeg) * 60.0 * posneg);\n  const decSec =\n    (val - posneg * decDeg - (posneg * decMin) / 60.0) * 3600.0 * posneg;\n  return [decDeg, decMin, decSec];\n}\n\nexport function kmToAu(km: number) {\n  return km / 149597870.7;\n}\n\nexport function auToKm(au: number) {\n  return au * 149597870.7;\n}\n","import { au } from './constants';\n\n/**\n * Scale a given position to be a distance logged from the center\n * adjusted to leave the position of earth unaffected\n */\nexport function getLoggedPosition(position: THREE.Vector3) {\n  // --->>\n\n  // Get old length in aus\n  const oldLengthAus = position.length() / au;\n\n  // Take log and add 1 to keep earth untransformed and venus/mercury to not have negative length\n  const newLengthAus = Math.log10(oldLengthAus) + 1;\n\n  // Compute scale factor with which to multiply position\n  // to leave Earth unchanged, etc.; au's will cancel.\n  const f = newLengthAus / oldLengthAus;\n\n  // Clone, transform and return\n  const newPosition = position.clone();\n  newPosition.multiplyScalar(f);\n  return newPosition;\n}\n","import * as THREE from 'three';\n\nimport { EphemPresets } from '../data/ephem-presets';\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { IXYZ } from '../models/IXYZ';\nimport { TPlanets } from '../models/TPlanets';\nimport { auToMeters } from './conversions';\nimport { SKEphem } from './sk-ephem';\nimport { SKOrbit } from './sk-orbit';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport { getLoggedPosition } from './get-logged-position';\n\nconst au = auToMeters(1);\n\nexport class Orbit {\n  // ~~~>>>\n\n  private SKprojectedOrbitLine!: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  // private orbitLine!: THREE.Line<THREE.BufferGeometry, THREE.LineBasicMaterial>;\n  private orbitLine!: THREE.Line<THREE.BufferGeometry, THREE.LineBasicMaterial>;\n  private SKEph?: SKEphem;\n  private SKOrbit?: SKOrbit;\n\n  constructor(\n    //\n    private name: string,\n    private orbitalType = EOrbitalType.PLANET,\n    private skephem?: SKEphem,\n    private color: string = 'white',\n    private opacity: number = 0.7\n  ) {\n    // --->>>\n\n    switch (this.orbitalType) {\n      case EOrbitalType.ASTEROID: {\n        this.loadAsteroid();\n        break;\n      }\n      case EOrbitalType.PLANET: {\n        this.loadPlanet();\n        break;\n      }\n      case EOrbitalType.DWARF_PLANET: {\n        this.loadPlanet();\n        break;\n      }\n      default: {\n        this.loadPlanet();\n        break;\n      }\n    }\n  }\n\n  loadPlanet = () => {\n    this.SKEph = EphemPresets[this.name as TPlanets];\n    this.SKOrbit = new SKOrbit(this.SKEph, {\n      color: this.orbitalType === EOrbitalType.PLANET ? 'white' : 'pink',\n      eclipticLineColor: undefined,\n      orbitPathSettings: undefined,\n    });\n    // this.SKprojectedOrbitLine = this.SKOrbit.getOrbitShape();\n    this.SKprojectedOrbitLine = this.getMorphedOrbitLine();\n    this.SKprojectedOrbitLine.material.transparent = true;\n    this.SKprojectedOrbitLine.material.opacity = this.opacity || 1;\n    this.SKprojectedOrbitLine.material.needsUpdate = true;\n  };\n\n  loadAsteroid = () => {\n    this.SKEph =\n      this.skephem ||\n      new SKEphem(\n        {\n          epoch: 2458600.5,\n          a: 5.38533,\n          e: 0.19893,\n          i: 22.11137,\n          om: 294.42992,\n          w: 314.2889,\n          ma: 229.14238,\n        },\n        'deg'\n      );\n    this.SKOrbit = new SKOrbit(this.SKEph, {\n      color: 'cyan',\n      eclipticLineColor: undefined,\n      orbitPathSettings: undefined,\n    });\n    // this.SKprojectedOrbitLine = this.SKOrbit.getOrbitShape();\n    this.SKprojectedOrbitLine = this.getMorphedOrbitLine();\n    this.SKprojectedOrbitLine.material.color = new THREE.Color('cyan');\n    this.SKprojectedOrbitLine.material.transparent = true;\n    this.SKprojectedOrbitLine.material.opacity = this.opacity || 1;\n    this.SKprojectedOrbitLine.material.needsUpdate = true;\n  };\n\n  getMorphedOrbitLine() {\n    if (!!this.orbitLine) return this.orbitLine;\n    if (!this.SKOrbit) throw new Error('Poor logic mi amigo');\n    const geometry = this.SKOrbit.getEllipseGeometry();\n    geometry.morphAttributes.position = [];\n    const positionAttribute = geometry.attributes.position;\n    const loggedPositions = [];\n    for (let i = 0; i < positionAttribute.count; i++) {\n      const x0 = positionAttribute.getX(i);\n      const y0 = positionAttribute.getY(i);\n      const z0 = positionAttribute.getZ(i);\n\n      const position = new THREE.Vector3(x0, y0, z0);\n      const logpos = getLoggedPosition(position);\n      const { x, y, z } = logpos;\n      loggedPositions.push(x, y, z);\n    }\n    geometry.morphAttributes.position[0] = new THREE.Float32BufferAttribute(\n      loggedPositions,\n      3\n    );\n    // this.orbitLine = new THREE.Line(\n    this.orbitLine = new THREE.Line(\n      geometry,\n      new THREE.LineBasicMaterial({\n        color: new THREE.Color(this.color || 0x444444),\n        morphTargets: true,\n      })\n    );\n    return this.orbitLine;\n  }\n\n  getProjectedOrbitLine = () => this.SKprojectedOrbitLine;\n\n  getXyzMeters(tCenturiesSinceJ200 = 0): IXYZ {\n    // --->>>\n\n    const xyz = this.SKOrbit?.getPositionAtTime(tCenturiesSinceJ200);\n    if (!xyz) return { x: 0, y: 0, z: 0 };\n    const x = auToMeters(xyz[0]);\n    const y = auToMeters(xyz[1]);\n    const z = auToMeters(xyz[2]);\n    return { x, y, z };\n  }\n\n  getPosition(tCenturiesSinceJ200 = 0) {\n    const { x, y, z } = this.getXyzMeters(tCenturiesSinceJ200);\n    return new THREE.Vector3(x, y, z);\n  }\n\n  getTail(radius: number, tailLength = au * 0.3, tCenturiesSinceJ200 = 0) {\n    // --->>\n\n    // Calc positions\n    const realBodyPosition = this.getPosition(tCenturiesSinceJ200);\n    const loggedBodyPosition = getLoggedPosition(realBodyPosition);\n\n    // Compute times for real and logged positions to stretch out to tailLength\n    let realTargetTime = tCenturiesSinceJ200;\n    let loggedTargetTime = tCenturiesSinceJ200;\n    let realDiffLength = 0;\n    let loggedDiffLength = 0;\n    let isRealSearch = true;\n    let isLoggedSearch = true;\n    while (isRealSearch || isLoggedSearch) {\n      // --->\n\n      isRealSearch = realDiffLength < tailLength;\n      isLoggedSearch = loggedDiffLength < tailLength;\n      if (isRealSearch) {\n        realTargetTime += 0.5;\n        realDiffLength = realBodyPosition.distanceTo(\n          this.getPosition(realTargetTime)\n        );\n      }\n      if (isLoggedSearch) {\n        loggedTargetTime += 0.5;\n        loggedDiffLength = loggedBodyPosition.distanceTo(\n          getLoggedPosition(this.getPosition(loggedTargetTime))\n        );\n      }\n    }\n\n    // Set up loop to generate segments\n    const radialSegments = 3;\n    const heightSegments = 1;\n    const numberOfSegments = 5;\n    const realDt = (realTargetTime - tCenturiesSinceJ200) / numberOfSegments;\n    const loggedDt =\n      (loggedTargetTime - tCenturiesSinceJ200) / numberOfSegments;\n    const dSegmentRadius = radius / numberOfSegments;\n    const geometries: {\n      realSegmentGeometry: THREE.BufferGeometry;\n      loggedSegmentGeometry: THREE.BufferGeometry;\n    }[] = [];\n    let lastRealPosition = realBodyPosition.clone();\n    let lastLoggedPosition = loggedBodyPosition.clone();\n    let nextRealPosition = realBodyPosition.clone();\n    let nextLoggedPosition = loggedBodyPosition.clone();\n    let lastSegmentRadius = radius;\n    let i = 0;\n\n    // Generate segments\n    for (let segment = 1; segment <= numberOfSegments; segment++) {\n      // Extrapolate back in time to compute positions of tail\n      const tReal = tCenturiesSinceJ200 + segment * realDt;\n      const tLogged = tCenturiesSinceJ200 + segment * loggedDt;\n      nextRealPosition = this.getPosition(tReal);\n      nextLoggedPosition = getLoggedPosition(this.getPosition(tLogged));\n\n      // Compute radius of the end of this segment\n      let nextSegmentRadius = lastSegmentRadius - dSegmentRadius;\n\n      // Compute height of segment\n      const realSegmentHeight = lastRealPosition.distanceTo(nextRealPosition);\n      const loggedSegmentHeight = lastLoggedPosition.distanceTo(\n        nextLoggedPosition\n      );\n\n      // Create tail segments at coord origin\n      const realSegmentGeometry = new THREE.CylinderGeometry(\n        lastSegmentRadius,\n        nextSegmentRadius,\n        realSegmentHeight,\n        radialSegments,\n        heightSegments,\n        !true\n      );\n      const loggedSegmentGeometry = new THREE.CylinderGeometry(\n        lastSegmentRadius,\n        nextSegmentRadius,\n        loggedSegmentHeight,\n        radialSegments,\n        heightSegments,\n        !true\n      );\n\n      // Position and rotate geometry\n      {\n        const { x, y, z } = lastRealPosition;\n        const orientation = new THREE.Matrix4();\n        orientation.makeTranslation(x, y, z);\n        orientation.lookAt(\n          lastRealPosition,\n          nextRealPosition,\n          new THREE.Vector3(0, 0, 1)\n        );\n        realSegmentGeometry.translate(0, -realSegmentHeight / 2, 0); // Rotate around end\n        realSegmentGeometry.rotateX(Math.PI / 2);\n        realSegmentGeometry.applyMatrix4(orientation);\n      }\n      {\n        const { x, y, z } = lastLoggedPosition;\n        const orientation = new THREE.Matrix4();\n        orientation.makeTranslation(x, y, z);\n        orientation.lookAt(\n          lastLoggedPosition,\n          nextLoggedPosition,\n          new THREE.Vector3(0, 0, 1)\n        );\n        loggedSegmentGeometry.translate(0, -loggedSegmentHeight / 2, 0); // Rotate around end\n        loggedSegmentGeometry.rotateX(Math.PI / 2);\n        loggedSegmentGeometry.applyMatrix4(orientation);\n      }\n\n      // Store segments\n      geometries.push({ realSegmentGeometry, loggedSegmentGeometry });\n\n      // End loop\n      lastRealPosition = nextRealPosition;\n      lastLoggedPosition = nextLoggedPosition;\n      lastSegmentRadius = nextSegmentRadius;\n    }\n\n    // Merge segments into single geometry\n    const realGeometry = BufferGeometryUtils.mergeBufferGeometries(\n      geometries.map(el => el.realSegmentGeometry),\n      true\n    );\n    const loggedGeometry = BufferGeometryUtils.mergeBufferGeometries(\n      geometries.map(el => el.loggedSegmentGeometry),\n      true\n    );\n\n    return { realGeometry, loggedGeometry };\n  }\n}\n","import * as THREE from 'three';\n\nimport { createEarthCloudMesh } from '../utils/create-earth-cloud-mesh';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { getPlanetRadiusMeters } from '../utils/get-planet-radius-meters';\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { gltfLoader } from '../utils/gltf-loader';\nimport { TPlanets } from '../models/TPlanets';\nimport { assetsBaseUrl, au } from '../utils/constants';\nimport { getInitDate } from '../..';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { Orbit } from '../utils/orbit';\nimport { IZoomableOrbital } from '../models/IZoomableOrbital';\nimport { getLoggedPosition } from '../utils/get-logged-position';\nimport { myprint } from '../utils/myprint';\n\nconst planetsWithBumpMaps: Partial<TPlanets>[] = [\n  'MERCURY',\n  'VENUS',\n  'EARTH',\n  'MARS',\n  'CERES',\n  'PLUTO',\n];\n\nconst planetsAsLoadableObjects: Partial<TPlanets>[] = [\n  'HAUMEA',\n  'MAKEMAKE',\n  'ERIS',\n];\n\nconst dwarfPlanets: Partial<TPlanets>[] = [\n  'CERES',\n  'PLUTO',\n  'HAUMEA',\n  'MAKEMAKE',\n  'ERIS',\n];\n\nconst getPlanetType = (name: TPlanets) => {\n  return dwarfPlanets.includes(name)\n    ? EOrbitalType.DWARF_PLANET\n    : EOrbitalType.PLANET;\n};\n\n/**\n * \"Cloud Radius Factor\": ratio of cloud radius to planet radius\n */\nconst crf = 1.05;\n\n/**\n * \"Helper Radius Factor\": ratio of helper radius to clouded-planet radius\n */\nconst hrf = 1.2;\n\n/**\n * Get the toy scale for different planets\n */\nconst getPlanetToyScale = (name: TPlanets) => {\n  if (name === 'PLUTO') return 10000;\n  if (name === 'CERES') return 10000;\n  if (name === 'HAUMEA') return 15000;\n  if (name === 'MAKEMAKE') return 15000;\n  if (name === 'ERIS') return 15000;\n  return 3000;\n};\n\nexport class Planet extends AbstractToyModel implements IZoomableOrbital {\n  // --->>>\n\n  private helper: THREE.LineSegments;\n  private model = new THREE.Group();\n  private clouds?: THREE.Mesh;\n  private orbit: Orbit;\n  private SKprojectedOrbitLine: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private radius: number;\n\n  constructor(public readonly NAME: TPlanets) {\n    // --->>\n\n    super(getPlanetToyScale(NAME));\n    // super(getPlanetToyScale('MERCURY'));\n\n    this.radius = getPlanetRadiusMeters(NAME);\n    // this.radius = getPlanetRadiusMeters('MERCURY');\n    this.orbit = new Orbit(this.NAME, getPlanetType(NAME));\n    this.SKprojectedOrbitLine = this.orbit.getProjectedOrbitLine();\n    this._sceneEntityGroup.add(this.SKprojectedOrbitLine);\n\n    // Make the model toy-scalable\n    this._toyGroup.push(this.model);\n\n    // Set up helper\n    this.helper = new THREE.LineSegments(\n      new THREE.EdgesGeometry(new THREE.SphereGeometry(this.radius * hrf, 32)),\n      new THREE.LineBasicMaterial({ color: new THREE.Color('cyan') })\n    );\n    this.helper.userData.isHelper = true;\n    this.helper.rotateX(Math.PI / 2);\n    this.model.add(this.helper);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      // Choose between planet as sphere or loadable object\n      if (planetsAsLoadableObjects.includes(this.NAME)) {\n        await this.loadPlanetAsObject();\n      } else {\n        await this.loadPlanetAsTexturedSphere();\n      }\n\n      myprint('RESOLVED ' + this.NAME);\n      this._sceneEntityGroup.add(this.model);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  loadPlanetAsObject = async () => {\n    const name = this.NAME.toLowerCase();\n    const objUrl = `${assetsBaseUrl}/planets/${name}/${name}.glb`;\n\n    // Add temporary sphere till object is loaded\n    const tempMesh = new THREE.Mesh(\n      new THREE.SphereGeometry(this.radius, 32, 32),\n      new THREE.MeshPhongMaterial()\n    );\n    tempMesh.rotateX(Math.PI / 2);\n    this.model.add(tempMesh);\n\n    const onObjectLoad = (obj: THREE.Group | null) => {\n      tempMesh.visible = false;\n      if (!!obj) this.model.add(obj);\n    };\n\n    if (this._isAsyncLoad()) {\n      gltfLoader(objUrl, this.radius)\n        .then(onObjectLoad)\n        .catch(_ => onObjectLoad(null));\n    } else {\n      onObjectLoad(await gltfLoader(objUrl, this.radius).catch(_ => null));\n    }\n  };\n\n  loadPlanetAsTexturedSphere = async () => {\n    const name = this.NAME.toLowerCase();\n    const imageUrl = `${assetsBaseUrl}/planets/${name}/${name}-map-1024.jpg`;\n    const bumpUrl = `${assetsBaseUrl}/planets/${name}/${name}-bump-1024.png`;\n    const isBumpy = planetsWithBumpMaps.includes(this.NAME);\n    const isEarth = this.NAME === 'EARTH';\n    const pNull = Promise.resolve(null);\n    const mesh = new THREE.Mesh(\n      new THREE.SphereGeometry(this.radius, 32, 32),\n      new THREE.MeshPhongMaterial({ shininess: isEarth ? 25 : 2 })\n    );\n    mesh.rotateX(Math.PI / 2);\n    this.model.add(mesh);\n\n    const onTexturesLoad = ([\n      promisedMapTexture,\n      promisedBumpTexture,\n      promisedEarthCloudTexture,\n    ]: PromiseSettledResult<THREE.Texture | null>[]) => {\n      // Unpack PromiseSettledResults:\n      const map =\n        promisedMapTexture.status === 'fulfilled'\n          ? promisedMapTexture.value\n          : null;\n      const bumpMap =\n        promisedBumpTexture.status === 'fulfilled'\n          ? promisedBumpTexture.value\n          : null;\n      const earthClouds =\n        promisedEarthCloudTexture.status === 'fulfilled'\n          ? promisedEarthCloudTexture.value\n          : null;\n\n      mesh.material.map = map;\n      mesh.material.bumpMap = bumpMap;\n      mesh.material.bumpScale = this.radius * 50;\n      mesh.material.needsUpdate = true;\n\n      if (earthClouds) {\n        this.clouds = new THREE.Mesh<THREE.SphereGeometry>(\n          new THREE.SphereGeometry(this.radius * crf, 32, 32),\n          new THREE.MeshPhongMaterial({\n            map: earthClouds,\n            side: THREE.DoubleSide,\n            transparent: true,\n            opacity: 0.6,\n            depthWrite: false, // Prevents mesh from blocking background sprites\n          })\n        );\n        this.model.add(this.clouds);\n      }\n    };\n\n    // Create promises\n    const promises = [\n      getTextureFromImageUrl(imageUrl, name).catch(_ => null),\n      isBumpy ? getTextureFromImageUrl(bumpUrl, name).catch(_ => null) : pNull,\n      isEarth ? createEarthCloudMesh().catch(_ => null) : pNull,\n    ];\n\n    // Wait for promises or load async\n    if (this._isAsyncLoad()) {\n      Promise.allSettled(promises).then(onTexturesLoad);\n    } else {\n      onTexturesLoad(await Promise.allSettled(promises));\n    }\n  };\n\n  public getPosition = () => {\n    return this.model.position;\n  };\n\n  public getRadius = () => this.radius;\n\n  public getOrbit = () => this.orbit;\n\n  public setIsOrbitVisible = (val: boolean) => {\n    this.SKprojectedOrbitLine.visible = val;\n  };\n\n  // Gets position of planet in either normal or logged coords\n  getDestinationPosition(_tCenturiesSinceJ200 = 0) {\n    const u = this.getLogInterpolationParam();\n    const position = this.orbit.getPosition(_tCenturiesSinceJ200);\n    const logpos = getLoggedPosition(position);\n    return position.lerp(logpos, u);\n  }\n\n  updateOrbitLine() {\n    const u = this.getLogInterpolationParam();\n    this.SKprojectedOrbitLine.morphTargetInfluences![0] = u;\n  }\n\n  update() {\n    const { x, y, z } = this.getDestinationPosition();\n    this.model.position.set(x, y, z);\n\n    this.updateOrbitLine();\n\n    // Toy Model Scale\n    this._updateModelScale();\n\n    // Spin planet\n    this.model.rotateZ(0.0015);\n    if (!!this.clouds) {\n      // Spin clouds relative to planet\n      this.clouds.rotateY(-0.0001);\n      this.clouds.rotateZ(-0.0004);\n    }\n  }\n}\n","import * as THREE from 'three';\nimport { assetsBaseUrl } from './constants';\n\n/**\n * This function is adapted from `https://github.com/jeromeetienne/threex.planets/blob/master/threex.planets.js`, based on instructions from `http://learningthreejs.com/blog/2013/09/16/how-to-make-the-earth-in-webgl/`\n * Jpegs don't have an alpha channel, so the idea is to load cloud image from jpg and remove pixels manually to create an alpha-channel effect\n */\nexport function createEarthCloudMesh(): Promise<THREE.Texture> {\n  // --->>>\n\n  return new Promise((resolve, reject) => {\n    // --->>>\n\n    // create destination canvas\n    const canvasResult = document.createElement('canvas');\n    canvasResult.width = 1024;\n    canvasResult.height = 512;\n    const contextResult = canvasResult.getContext('2d');\n\n    // load earthcloudmap\n    const imageMap = new Image();\n    imageMap.crossOrigin = 'Anonymous';\n\n    // const material = new THREE.MeshPhongMaterial({\n    //   map: new THREE.Texture(canvasResult),\n    //   side: THREE.DoubleSide,\n    //   transparent: true,\n    //   opacity: 0.6,\n    // });\n    // const mesh = new THREE.Mesh<THREE.SphereGeometry>(geometry, material);\n\n    imageMap.onerror = (error: any) => {\n      console.log('Error: ', error);\n      reject();\n    };\n    imageMap.onload = function() {\n      // --->>>\n\n      // create dataMap ImageData for earthcloudmap\n      const canvasMap = document.createElement('canvas');\n      canvasMap.width = imageMap.width;\n      canvasMap.height = imageMap.height;\n      const contextMap = canvasMap.getContext('2d');\n      contextMap!.drawImage(imageMap, 0, 0);\n      const dataMap = contextMap!.getImageData(\n        0,\n        0,\n        canvasMap.width,\n        canvasMap.height\n      );\n\n      // load earthcloudmaptrans\n      const imageTrans = new Image();\n      imageTrans.crossOrigin = 'Anonymous';\n      imageTrans.addEventListener('load', function() {\n        // --->>>\n\n        // create dataTrans ImageData for earthcloudmaptrans\n        const canvasTrans = document.createElement('canvas');\n        canvasTrans.width = imageTrans.width;\n        canvasTrans.height = imageTrans.height;\n        const contextTrans = canvasTrans.getContext('2d');\n        contextTrans!.drawImage(imageTrans, 0, 0);\n        try {\n          const dataTrans = contextTrans!.getImageData(\n            0,\n            0,\n            canvasTrans.width,\n            canvasTrans.height\n          );\n          // merge dataMap + dataTrans into dataResult\n          let dataResult = contextMap!.createImageData(\n            canvasMap.width,\n            canvasMap.height\n          );\n          for (let y = 0, offset = 0; y < imageMap.height; y++) {\n            for (let x = 0; x < imageMap.width; x++, offset += 4) {\n              dataResult.data[offset + 0] = dataMap.data[offset + 0];\n              dataResult.data[offset + 1] = dataMap.data[offset + 1];\n              dataResult.data[offset + 2] = dataMap.data[offset + 2];\n              dataResult.data[offset + 3] = 255 - dataTrans.data[offset + 0];\n            }\n          }\n\n          // update texture with result\n          contextResult!.putImageData(dataResult, 0, 0);\n          // if (!!material && !!material.map) material.map.needsUpdate = true;\n        } catch (error) {\n          console.log('Error: ', error);\n          reject();\n        }\n        resolve(new THREE.CanvasTexture(canvasResult));\n      });\n      imageTrans.src = `${assetsBaseUrl}/planets/earth/earth-clouds-trans-1024.png`;\n    };\n    imageMap.src = `${assetsBaseUrl}/planets/earth/earth-clouds-color-1024.png`;\n  });\n}\n","import { solarSystemData } from '../data/basic-solar-system-data';\nimport { TPlanets } from '../models/TPlanets';\n\nexport function getPlanetRadiusMeters(name: TPlanets): number {\n  // --->>>\n\n  return solarSystemData[name].radiusMeters;\n}\n","import * as THREE from 'three';\n\nimport { getInitDate } from '../..';\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { assetsBaseUrl } from '../utils/constants';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { invertTextureColor } from '../utils/invert-texture-color';\n\nexport class StarField extends AbstractSceneEntity implements ISceneEntity {\n  // --->>>\n\n  public readonly NAME = 'STARFIELD';\n  private mesh: THREE.Mesh<THREE.SphereGeometry, THREE.MeshPhongMaterial>;\n  private material: THREE.MeshPhongMaterial;\n  private texture: THREE.Texture | null = null;\n\n  constructor(radius: number) {\n    super();\n\n    this.material = new THREE.MeshPhongMaterial({\n      side: THREE.DoubleSide,\n      transparent: true,\n      color: 'black',\n      // opacity: 0,\n      opacity: 1,\n      shininess: 0,\n    });\n\n    this.mesh = new THREE.Mesh(\n      new THREE.SphereGeometry(radius, 32, 32),\n      this.material\n    );\n\n    this.mesh.rotation.y = Math.PI / 2;\n    this._sceneEntityGroup.name = 'STARFIELD';\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      // const url = `${assetsBaseUrl}/stars/galaxy_starfield6.png`;\n      const url = `${assetsBaseUrl}/stars/galaxy-starfield-4096.jpg`;\n\n      if (this._isAsyncLoad()) {\n        getTextureFromImageUrl(url, 'star-field').then(texture => {\n          this.texture = texture;\n          texture.encoding = THREE.GammaEncoding;\n          this.material.map = texture;\n          // this.material.color = new THREE.Color();\n          this.material.needsUpdate = true;\n        });\n      } else {\n        this.texture = await getTextureFromImageUrl(url, 'star-field');\n        this.material.map = this.texture;\n        this.material.color = new THREE.Color();\n        this.material.needsUpdate = true;\n      }\n\n      this._sceneEntityGroup.add(this.mesh);\n\n      console.log('Starfield resolved', +new Date() - +getInitDate());\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  invertColor = () => {\n    if (!this.texture) return;\n    this.texture = invertTextureColor(this.texture);\n    this.material.map = this.texture;\n    this.material.needsUpdate = true;\n  };\n\n  update() {}\n}\n","import * as THREE from 'three';\n\n/**\n * Returns texture with inverted colors\n */\nexport function invertTextureColor(\n  texture: THREE.Texture,\n  isAlphaInverted = false\n) {\n  // --->>>\n\n  // texture -> canvas -> context -> data arrays\n  const img: HTMLImageElement = texture.image;\n  const canvas = document.createElement('canvas');\n  const width = img.width;\n  const height = img.height;\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx!.drawImage(img, 0, 0);\n\n  // Get copy of old data\n  const data = ctx!.getImageData(0, 0, width, height);\n\n  // Modify copy of data\n  for (let y = 0, offset = 0; y < height; y++) {\n    for (let x = 0; x < width; x++, offset += 4) {\n      data.data[offset + 0] = 255 - data.data[offset + 0];\n      data.data[offset + 1] = 255 - data.data[offset + 1];\n      data.data[offset + 2] = 255 - data.data[offset + 2];\n      if (isAlphaInverted) data.data[offset + 3] = 255 - data.data[offset + 3];\n    }\n  }\n\n  // Overwrite old data with new\n  ctx!.putImageData(data, 0, 0);\n\n  // MUST return CanvasTexture or it won't update properly\n  return new THREE.CanvasTexture(canvas);\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { auToMeters } from '../utils/conversions';\n\nexport class MiscHelpers extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Misc Helpers';\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      const axesHelper = new THREE.AxesHelper(auToMeters(100));\n      // Mark this as helper in order to be toggle-able\n      axesHelper.userData.isHelper = true;\n      this._sceneEntityGroup.add(axesHelper);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\n\nexport class SimpleLight extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Simple Light';\n  private _light?: THREE.AmbientLight;\n\n  constructor(private _defaultIntensity = 0.3) {\n    super();\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      this._light = new THREE.AmbientLight(0x333333, this._defaultIntensity);\n      this._light.userData.isAmbientLight = true;\n      this._sceneEntityGroup.add(this._light);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  setPower = (intensity?: number) => {\n    const newIntensity = intensity || this._defaultIntensity;\n    this._light!.intensity = newIntensity;\n  };\n\n  setIsOn(isOn: boolean) {\n    this._light!.visible = isOn;\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\nimport { getLoggedPosition } from './get-logged-position';\n\ninterface IVertices {\n  [index: string]: {\n    x: number;\n    y: number;\n    z: number;\n  };\n}\n\n/**\n * Function to take a dodecahedron and warp the points to createa jagged\n * asteroid shape\n */\nexport const createAsteroidGeometry = (\n  size: number,\n  warpFactor = 0.25,\n  position = new THREE.Vector3()\n) => {\n  // --->>>\n\n  const realGeometry = new THREE.DodecahedronGeometry(size, 1);\n  const positionAttribute = realGeometry.getAttribute('position');\n  const point = new THREE.Vector3();\n  const vertices: IVertices = {};\n\n  // Collect all repeated points into a hashmap of unique vertices\n  for (let i = 0; i < positionAttribute.count; i++) {\n    point.fromBufferAttribute(positionAttribute, i); // read vertex\n    let key = [point.x, point.y, point.z].join(',');\n    if (!vertices[key]) {\n      vertices[key] = {\n        x: point.x += Math.random() * size * warpFactor,\n        y: point.y += Math.random() * size * warpFactor,\n        z: point.z += Math.random() * size * warpFactor,\n      };\n    }\n    const { x, y, z } = vertices[key];\n    positionAttribute.setXYZ(i, x, y, z);\n  }\n\n  // Stretch/flatten asteroid randomly\n  const sx = 0.5 + Math.random();\n  const sy = 0.5 + Math.random();\n  const sz = 0.5 + Math.random();\n  realGeometry.scale(sx, sy, sz);\n\n  // Get create logged stuff\n  const loggedGeometry = realGeometry.clone();\n  const loggedPosition = getLoggedPosition(position);\n\n  // Translate geometries\n  {\n    const { x, y, z } = position;\n    realGeometry.translate(x, y, z);\n  }\n  {\n    const { x, y, z } = loggedPosition;\n    loggedGeometry.translate(x, y, z);\n  }\n\n  return {\n    realGeometry,\n    loggedGeometry,\n  };\n};\n","import * as THREE from 'three';\n\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { Orbit } from '../utils/orbit';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { createAsteroidGeometry } from '../utils/create-asteroid-geometry';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { assetsBaseUrl } from '../utils/constants';\nimport { IZoomableOrbital } from '../models/IZoomableOrbital';\nimport { getLoggedPosition } from '../utils/get-logged-position';\n\nconst defaultRadiusMeters = 10000;\n\nexport class Asteroid extends AbstractToyModel implements IZoomableOrbital {\n  // ~~~>>>\n\n  private model = new THREE.Group();\n  private orbit: Orbit;\n  private SKprojectedOrbitLine: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n\n  constructor(\n    public readonly NAME: string,\n    private radius = defaultRadiusMeters\n  ) {\n    super(30000 * 100);\n    this.orbit = new Orbit(NAME, EOrbitalType.ASTEROID);\n    // this.SKprojectedOrbitLine = this.orbit.getProjectedOrbitLine();\n    this.SKprojectedOrbitLine = this.orbit.getMorphedOrbitLine();\n    this._sceneEntityGroup.add(this.SKprojectedOrbitLine);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      const url = `${assetsBaseUrl}/misc/asteroid-texture-1024.jpg`;\n      // const url = `${imageBaseUrl}/misc/rock-texture-512.png`;\n\n      const geometry = createAsteroidGeometry(this.radius);\n      const mesh = new THREE.Mesh(\n        geometry.realGeometry,\n        new THREE.MeshPhongMaterial({\n          // color: new THREE.Color('red'),\n          map: await getTextureFromImageUrl(url),\n          shininess: 0,\n        })\n      );\n      this.model.add(mesh);\n      this._toyGroup.push(this.model);\n      this._sceneEntityGroup.add(this.model);\n\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => {\n    const { x, y, z } = this.orbit.getXyzMeters();\n    return new THREE.Vector3(x, y, z);\n  };\n\n  public getRadius = () => this.radius;\n\n  public getOrbit = () => this.orbit;\n\n  public setIsOrbitVisible = (val: boolean) => {\n    this.SKprojectedOrbitLine.visible = val;\n  };\n\n  updateOrbitLine() {\n    //\n    const u = this.getLogInterpolationParam();\n    this.SKprojectedOrbitLine.morphTargetInfluences![0] = u;\n  }\n\n  // Gets position of planet in either normal or logged coords\n  getDestinationPosition(_tCenturiesSinceJ200 = 0) {\n    const u = this.getLogInterpolationParam();\n    const position = this.orbit.getPosition(_tCenturiesSinceJ200);\n    const logpos = getLoggedPosition(position);\n    return position.lerp(logpos, u);\n  }\n\n  update() {\n    const { x, y, z } = this.getDestinationPosition();\n    this.model.position.set(x, y, z);\n\n    this.updateOrbitLine();\n\n    // Toy Model Scale\n    this._updateModelScale();\n  }\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\n\nexport class PointLight extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Point Light';\n  private _light?: THREE.PointLight;\n\n  constructor(private _defaultIntensity = 0.3, private _radius = 1) {\n    super();\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      this._light = new THREE.PointLight(0x333333, this._defaultIntensity);\n      const helper = new THREE.PointLightHelper(\n        this._light,\n        this._radius,\n        new THREE.Color('red')\n      );\n      helper.userData.isHelper = true;\n      this._sceneEntityGroup.add(this._light);\n      this._sceneEntityGroup.add(helper);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  setPower = (intensity?: number) => {\n    const newIntensity = intensity || this._defaultIntensity;\n    this._light!.intensity = newIntensity;\n  };\n\n  setIsOn(isOn: boolean) {\n    this._light!.visible = isOn;\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { au } from '../utils/constants';\nimport { IZoomable } from '../models/IZoomable';\n\nconst dxy = au * 0.1;\n\n/**\n * This entity doesn't draw anything, it's just an empty object\n * positioned so as to be zoomable from above the sun\n */\nexport class BirdsEye extends AbstractToyModel implements IZoomable {\n  // --->>>\n\n  private token = new THREE.Object3D();\n  private position = new THREE.Vector3(dxy, dxy, au * 30);\n\n  constructor(public readonly NAME = 'BIRDSEYE', zInAus = 30) {\n    super(1);\n    this.position.setZ(zInAus * au);\n    const { x, y, z } = this.position;\n    this.token.position.set(x, y, z);\n    this._sceneEntityGroup.add(this.token);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => {\n    return this.token.position;\n  };\n\n  getRadius = () => 1;\n\n  update() {}\n}\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { BirdsEye } from '../scene-entities/birds-eye';\n\n/**\n *\n *\n */\nexport const getDestinationLookPosition = (zoomTarget: IZoomable) => {\n  return zoomTarget instanceof BirdsEye\n    ? new THREE.Vector3(0, 0, 0)\n    : zoomTarget.getPosition();\n};\n","/**\n * Permissible types of asteroid belt\n */\n\nexport const asteroidBeltTypes = [\n  'MBA',\n  'NEO1KM',\n  'NOT_NEO1KM',\n  'PHA',\n  'DISTANTOBJECT',\n] as const;\n\nexport type TAsteroidBeltType = typeof asteroidBeltTypes[number];\n","import { TAsteroidBeltType } from '../models/TAsteroidBeltType';\n\n/**\n * Maps asteroid belt to a color\n */\nexport function getAsteroidBeltColor(belt: TAsteroidBeltType) {\n  switch (belt) {\n    case 'MBA': {\n      return 'grey';\n    }\n    case 'NEO1KM': {\n      return 'orange';\n    }\n    case 'NOT_NEO1KM': {\n      return 'pink';\n    }\n    case 'PHA': {\n      return 'red';\n    }\n    case 'DISTANTOBJECT': {\n      return 'cyan';\n    }\n  }\n}\n","/**\n * Wrapper around technique to fetch a worker script in a way\n * that does not require CORS config\n */\nexport function getWorkerURL(url: string) {\n  const content = `importScripts( \"${url}\" );`;\n  return URL.createObjectURL(new Blob([content], { type: 'text/javascript' }));\n}\n","import * as THREE from 'three';\n\nimport { TAsteroidBeltType } from '../models/TAsteroidBeltType';\nimport { getVersionString } from './get-version-string';\nimport { myprint } from './myprint';\nimport { getWorkerURL } from './get-worker-url';\nimport { IAllMergedAsteroidBeltGeometries } from '../models/IAllMergedAsteroidBeltGeometries';\nimport { SceneManager } from '../scene-manager';\n\ntype TAllMergedAsteroidBeltGeometriesStringified = {\n  [key in keyof IAllMergedAsteroidBeltGeometries]: string;\n};\n\n/**\n * Wraps around web worker to kick off thread to create merged geometries\n * then parse the returned data and return THREE.BufferGeometries\n */\nexport async function getAsteroidBeltMergedGeometries(\n  belts: TAsteroidBeltType[],\n  parentSceneManager: SceneManager\n): Promise<IAllMergedAsteroidBeltGeometries[]> {\n  return new Promise(async resolve0 => {\n    // --->>\n\n    // Build URL to worker script\n    let baseUrl = `http://localhost:3001`;\n    try {\n      // @ts-ignore: will be truthy if built by rollup\n      if (__IS_PRODUCTION__) {\n        baseUrl = `https://sbn-solar-system-viewer.s3.amazonaws.com/scripts`;\n      }\n    } catch (err) {}\n    const url = `${baseUrl}/asteroid-belt-worker-${getVersionString()}.js`;\n    const worker_url = getWorkerURL(url);\n\n    // Define and kick off asteroid-belt worker\n    myprint('Start getting worker');\n\n    interface IXXX {\n      belt: TAsteroidBeltType;\n      data: any;\n    }\n\n    const results: IXXX[] = await Promise.all(\n      belts.map(belt => {\n        return new Promise<IXXX>(resolve => {\n          const worker = new Worker(worker_url);\n          worker.onmessage = function(e) {\n            setTimeout(() => {\n              resolve({ belt, data: e.data });\n            }, 100);\n          };\n          worker.postMessage(belt);\n        });\n      })\n    );\n\n    parentSceneManager.updateDisplayedMessage('Loading asteroids belts');\n    parentSceneManager.setIsScenePaused(true);\n\n    setTimeout(() => {\n      //\n\n      const xxx: IAllMergedAsteroidBeltGeometries[] = results.map(\n        ({ belt, data }) => {\n          let asteroidBeltGeometriesStringified: TAllMergedAsteroidBeltGeometriesStringified = JSON.parse(\n            data\n          );\n          const loader = new THREE.BufferGeometryLoader();\n          const asteroidBeltGeometries: IAllMergedAsteroidBeltGeometries = {\n            mergedAsteroidGeometry: loader.parse(\n              asteroidBeltGeometriesStringified.mergedAsteroidGeometry\n            ),\n            mergedTailsGeometry: loader.parse(\n              asteroidBeltGeometriesStringified.mergedTailsGeometry\n            ),\n            belt,\n          };\n          return asteroidBeltGeometries;\n        }\n      );\n\n      parentSceneManager.updateDisplayedMessage('Asteroids Loaded');\n      parentSceneManager.setIsScenePaused(false);\n\n      resolve0(xxx);\n    }, 100);\n  });\n}\n","import * as THREE from 'three';\n\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { assetsBaseUrl, au } from '../utils/constants';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport {\n  TAsteroidBeltType,\n  asteroidBeltTypes,\n} from '../models/TAsteroidBeltType';\nimport { getAsteroidBeltColor } from '../utils/get-asteroid-belt-color';\nimport { getAsteroidBeltMergedGeometries } from '../utils/get-asteroid-belt-merged-geometries';\nimport { myprint } from '../utils/myprint';\nimport { SceneManager } from '../scene-manager';\n\ntype TLabelsDict = { [key in TAsteroidBeltType]: string };\n/* const labelsDict: TLabelsDict = {\n  DISTANTOBJECT: 'Distant Objects',\n  MBA: 'Main Asteroid Belt',\n  NEO1KM: 'Near Earth Orbit >1Km',\n  PHA: 'Potentially Hazardous Objects',\n  NOT_NEO1KM: 'NOT Near Earth Orbit >1Km',\n}; */\n\ntype TMeshes = {\n  [key in TAsteroidBeltType]: THREE.Mesh<\n    THREE.BufferGeometry,\n    THREE.MeshPhongMaterial\n  >;\n};\n\nconst getInitMeshes = () =>\n  asteroidBeltTypes.reduce((acc: any, belt, ind) => {\n    acc[belt] = new THREE.Mesh(\n      new THREE.BufferGeometry(),\n      new THREE.MeshPhongMaterial({ morphTargets: true })\n    );\n    return acc;\n  }, {}) as any;\n\nexport class AsteroidBelt extends AbstractToyModel implements ISceneEntity {\n  // --->>>\n\n  public readonly NAME: string;\n  private isMeshesLoaded = false;\n  private isBeltVisible = true;\n\n  mergedAsteroidsMeshes: TMeshes = getInitMeshes();\n  mergedTailsMeshes: TMeshes = getInitMeshes();\n\n  constructor(\n    private belts: TAsteroidBeltType[],\n    private parentSceneManager: SceneManager\n  ) {\n    super(3000);\n    this.NAME = 'BELTS';\n    this.belts.forEach(belt => {\n      this._sceneEntityGroup.add(this.mergedAsteroidsMeshes[belt]);\n      this._sceneEntityGroup.add(this.mergedTailsMeshes[belt]);\n    });\n    this.parentSceneManager.updateDisplayedMessage('Building asteroid belt');\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>\n\n      const textureUrl = `${assetsBaseUrl}/misc/rock-texture-512.png`;\n\n      const texture = await getTextureFromImageUrl(textureUrl).catch(_ => null);\n\n      getAsteroidBeltMergedGeometries(this.belts, this.parentSceneManager).then(\n        allAsteroidBeltMergedGeometries => {\n          allAsteroidBeltMergedGeometries.forEach(\n            ({ belt, mergedAsteroidGeometry, mergedTailsGeometry }) => {\n              // --->>\n\n              const color = getAsteroidBeltColor(belt);\n\n              // Update asteroids mesh with computed geometry, etc.\n              this.mergedAsteroidsMeshes[\n                belt\n              ].geometry = mergedAsteroidGeometry;\n              this.mergedAsteroidsMeshes[\n                belt\n              ].material = new THREE.MeshPhongMaterial({\n                color: new THREE.Color(color),\n                map: texture,\n                shininess: 0,\n                transparent: true,\n                morphTargets: true,\n              });\n              this.mergedAsteroidsMeshes[belt].material.needsUpdate = true;\n              this.mergedAsteroidsMeshes[belt].morphTargetInfluences = [0];\n\n              // Update tails mesh with computed geometry, etc.\n              this.mergedTailsMeshes[belt].geometry = mergedTailsGeometry;\n              this.mergedTailsMeshes[\n                belt\n              ].material = new THREE.MeshPhongMaterial({\n                color: new THREE.Color(color),\n                transparent: true,\n                morphTargets: true,\n              });\n              this.mergedTailsMeshes[belt].material.needsUpdate = true;\n              this.mergedTailsMeshes[belt].morphTargetInfluences = [0];\n\n              myprint(this.NAME + ' LOADED');\n              this.isMeshesLoaded = true;\n            }\n          );\n        }\n      );\n\n      myprint('RESOLVED ' + this.NAME);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => new THREE.Vector3();\n\n  public getRadius = () => 1;\n\n  updateMeshes() {\n    // Interpolate between log and real scale\n    const u = this.getLogInterpolationParam();\n    this.belts.forEach(belt => {\n      this.mergedAsteroidsMeshes[belt].morphTargetInfluences![0] = u;\n      this.mergedTailsMeshes[belt].morphTargetInfluences![0] = u;\n    });\n  }\n\n  setIsBeltVisible(val: boolean) {\n    this.isBeltVisible = val;\n    this.belts.forEach(belt => {\n      this.mergedAsteroidsMeshes[belt].visible = this.isBeltVisible;\n      this.mergedTailsMeshes[belt].visible = this.isBeltVisible;\n    });\n  }\n\n  toggleIsBeltVisible() {\n    this.setIsBeltVisible(!this.isBeltVisible);\n  }\n\n  update(_camera?: THREE.Camera) {\n    // --->>\n\n    this._updateModelScale();\n\n    if (this.isMeshesLoaded) this.updateMeshes();\n\n    if (!_camera) return;\n\n    // Update mesh opacity based on distance from camera\n    const dist = _camera.position.distanceTo(new THREE.Vector3());\n    const cutoff = 4 * au;\n    let opacity = 0;\n    opacity = (dist - cutoff) / (0.5 * au);\n    if (opacity < 0) opacity = 0;\n    if (opacity > 1) opacity = 1;\n    this.belts.forEach(belt => {\n      if (!this.isBeltVisible) return;\n      this.mergedTailsMeshes[belt].material.opacity = opacity;\n      this.mergedTailsMeshes[belt].visible = opacity !== 0;\n      if (!true) {\n        this.mergedTailsMeshes[belt].visible = true;\n        this.mergedTailsMeshes[belt].material.opacity = 1;\n      }\n      this.mergedTailsMeshes[belt].material.needsUpdate = true;\n    });\n  }\n}\n","import {\n  buttonBackgroundColor,\n  buttonClickedBackgroundColor,\n  buttonFontFamily,\n  buttonTextColor,\n  buttonPadding,\n  buttonCursorType,\n  buttonCssUrl,\n  buttonFadeInSpecs,\n} from '../utils/constants';\nimport { addGlobalStyles } from './add-global-styles';\n\n/**\n * Function to mutate buttons by injecting them with properties\n * common to all html buttons; append to container when ready\n */\nexport const injectCommonButtonProperties = async (\n  button: HTMLElement,\n  onClickCB: () => void\n): Promise<HTMLElement> => {\n  return new Promise(resolve => {\n    // --->>\n\n    // Add to global styles\n    addGlobalStyles();\n\n    // Start loading the remote fonts style sheet; mutate button on completion\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.onload = () => {\n      // console.log('Loaded css url for fonts');\n      mutateButton();\n    };\n    link.onerror = () => {\n      console.log('Failed to load css url for fonts; continuing anyway...');\n      mutateButton();\n    };\n    link.href = buttonCssUrl;\n    document.head.append(link);\n\n    // Callback to mutate button\n    function mutateButton() {\n      // Positioning\n      // button.style.position = 'absolute';\n      // button.style.setProperty('padding', buttonPadding);\n\n      // Colors\n      button.style.setProperty('color', buttonTextColor);\n      button.style.setProperty('background-color', buttonBackgroundColor);\n\n      // Font stuff\n      button.style.setProperty('font-family', buttonFontFamily);\n      button.style.setProperty('font-size', '20px');\n\n      // Setup fade-in effect\n      button.style.setProperty(\n        'animation',\n        `sbn-solar-system-viewer-fade-in ${buttonFadeInSpecs}`\n      );\n\n      // Cursor behavior\n      // Prevent text in button from being selectable\n      // See here: https://stackoverflow.com/a/4407335/8620332\n      button.style.setProperty('cursor', buttonCursorType);\n      button.style.setProperty('-webkit-touch-callout', 'none');\n      button.style.setProperty('-webkit-user-select', 'none');\n      button.style.setProperty('-khtml-user-select', 'none');\n      button.style.setProperty('-moz-user-select', 'none');\n      button.style.setProperty('-ms-user-select', 'none');\n      button.style.setProperty('user-select', 'none');\n\n      // Properties related to click effect\n      button.style.setProperty(\n        'transition',\n        'background-color 50ms ease-in-out'\n      );\n      button.addEventListener('click', function() {\n        button.style.setProperty(\n          'background-color',\n          buttonClickedBackgroundColor\n        );\n        setTimeout(() => {\n          button.style.setProperty('background-color', buttonBackgroundColor);\n          onClickCB();\n        }, 200);\n      });\n\n      // Return mutated button\n      resolve(button);\n    }\n  });\n};\n","import { injectCommonButtonProperties } from './inject-common-button-properties';\n\n/**\n *\n */\nexport const addHtmlButtonRow = async (\n  buttonInputs: {\n    cb: () => any;\n    label: string;\n  }[],\n  container: HTMLElement\n) => {\n  return new Promise(async resolve => {\n    // --->>>\n\n    // Warning\n    if (!container) throw new Error('Canvas Container is Falsy!');\n\n    // Create wrapper container\n    const buttonWrapperDiv = document.createElement('div');\n    buttonWrapperDiv.style.setProperty('display', 'flex');\n    buttonWrapperDiv.style.setProperty('flex-direction', 'column');\n    buttonWrapperDiv.style.setProperty('gap', '12px');\n    buttonWrapperDiv.style.setProperty('position', 'absolute');\n    buttonWrapperDiv.style.setProperty('top', '100px');\n    buttonWrapperDiv.style.setProperty('bottom', '100px');\n    buttonWrapperDiv.style.setProperty('right', '0px');\n    buttonWrapperDiv.style.setProperty('width', '120px');\n    container.append(buttonWrapperDiv);\n\n    // Map inputs to stylized buttons\n    const buttonDivs = await Promise.all(\n      buttonInputs.map(async buttonInput => {\n        // Set properties unique to this button\n        const buttonDiv = document.createElement('div');\n        buttonDiv.innerText = buttonInput.label;\n        buttonDiv.style.setProperty('display', 'flex');\n        buttonDiv.style.setProperty('flex', '1');\n        buttonDiv.style.setProperty('justify-content', 'center');\n        buttonDiv.style.setProperty('align-items', 'center');\n        return await injectCommonButtonProperties(buttonDiv, buttonInput.cb);\n      })\n    );\n\n    // Add buttons to wrapper in original order\n    buttonDivs.forEach(buttonDiv => {\n      buttonWrapperDiv.append(buttonDiv);\n    });\n\n    resolve();\n  });\n};\n","import { FiPhone } from 'react-icons/fi';\nimport { AiOutlineSetting } from 'react-icons/ai';\nimport { IoIosSettings } from 'react-icons/io';\n\nconst iconsDict = {\n  FiPhone,\n  AiOutlineSetting,\n  IoIosSettings,\n};\n\ninterface IOptions {\n  size?: number;\n  fillColor?: string;\n  strokeColor?: string;\n  strokeWidth?: number;\n}\n\n/**\n * This is a wrapper around react-icons. react-icons is a great resource; it makes\n * it super easy to add icons from a massive array of options. Unfortunatley, we are\n * not using react here, so I've made this function to crudely extract the SVG from\n * the react-svg generator, and enabled this function to inject parameters into the\n * returned string representation.\n *\n * NOTE! This wrapper only extracts the first d property for the path element; if you try\n * to use an icon with more than one path, then you won't get the comlete icon; in short\n * only use simple-looking icons from react-icons\n *\n */\nexport const getReactIconSvg = (\n  icon: keyof typeof iconsDict,\n  options: IOptions = {}\n): string => {\n  // --->>\n\n  // Extract essential data from react-icons instance\n  const reactIcon = iconsDict[icon]({});\n  const d = reactIcon.props.children[0].props.d;\n  const viewBox = reactIcon.props.attr.viewBox;\n\n  // Options\n  const SIZE = options.size || 20;\n  const FILL_COLOR = options.fillColor || 'none';\n  const STROKE_COLOR = options.strokeColor || 'white'; // 'none' for transparent\n  const STROKE_WIDTH = options.strokeWidth || 2;\n\n  const svg = `\n    <svg\n      stroke=\"${STROKE_COLOR}\"\n      fill=\"${FILL_COLOR}\"\n      stroke-width=\"${STROKE_WIDTH}\"\n      viewBox=\"${viewBox}\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      height=\"${SIZE}\"\n      width=\"${SIZE}\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"${d}\"\n      </path>\n    </svg>`;\n\n  // console.log('svg', svg);\n  return svg;\n};\n","import { IOptions } from '../../options';\n\n/**\n * Provide dict of key-value pairs to set in local storage\n */\nexport const setOptions = (newOptions: Partial<IOptions>) => {\n  Object.keys(newOptions).forEach(key => {\n    // console.log('Key Value:', key, newOptions[(key as any) as keyof IOptions]);\n    localStorage.setItem(\n      key,\n      JSON.stringify(newOptions[(key as any) as keyof IOptions])\n    );\n  });\n};\n","import { addGlobalStyles } from './add-global-styles';\nimport { simpleUuid } from '../utils/simple-uuid';\n\n/**\n * Function to create a div with three columns in order to wrap around switches and/or\n * input fields and look neat in the settings menu\n */\n\nexport const createThreeColumnContainer = (\n  id = 'placeholder-id' + simpleUuid()\n) => {\n  /**\n   * Construct and return divs of the following format\n   *\n   *\n    <div class=\"three-column-container\">\n      <div class=\"first-column\"> </div>\n      <div class=\"second-column\"></div>\n      <div class=\"third-column\"> </div>\n    <div>\n   *\n   */\n\n  // Put a lot of the styles in the global file\n  addGlobalStyles();\n\n  // Create the container\n  const threeColumnContainerDiv = document.createElement('div');\n  threeColumnContainerDiv.classList.add('three-column-container');\n  threeColumnContainerDiv.style.setProperty('overflow-x', 'scroll');\n  threeColumnContainerDiv.style.setProperty('width', '100%');\n  threeColumnContainerDiv.style.setProperty('height', '34px');\n  threeColumnContainerDiv.style.setProperty('display', 'flex');\n  threeColumnContainerDiv.style.setProperty('white-space', 'nowrap');\n  threeColumnContainerDiv.id = id;\n\n  // Params for column widths\n  const firstColFlexBasisPxls = 280;\n  const secondColFlexBasisPxls = 70;\n\n  // Create its immediate children\n  const firstColumnDiv = document.createElement('div');\n  firstColumnDiv.classList.add('first-column');\n  firstColumnDiv.style.setProperty('display', 'flex');\n  firstColumnDiv.style.setProperty('align-items', 'center');\n  firstColumnDiv.style.setProperty('justify-content', 'right');\n  firstColumnDiv.style.setProperty('flex', `1 0 ${firstColFlexBasisPxls}px`);\n  firstColumnDiv.style.setProperty('padding-right', '10px');\n  firstColumnDiv.style.setProperty('overflow-x', 'scroll');\n  threeColumnContainerDiv.append(firstColumnDiv);\n\n  const secondColumnDiv = document.createElement('div');\n  secondColumnDiv.classList.add('second-column');\n  secondColumnDiv.style.setProperty('display', 'flex');\n  secondColumnDiv.style.setProperty('align-items', 'center');\n  secondColumnDiv.style.setProperty('justify-content', 'center');\n  secondColumnDiv.style.setProperty('flex', `0 0 ${secondColFlexBasisPxls}px`);\n  threeColumnContainerDiv.append(secondColumnDiv);\n\n  const thirdColumnDiv = document.createElement('div');\n  thirdColumnDiv.classList.add('third-column');\n  thirdColumnDiv.style.setProperty('display', 'flex');\n  thirdColumnDiv.style.setProperty('align-items', 'center');\n  thirdColumnDiv.style.setProperty('justify-content', 'left');\n  thirdColumnDiv.style.setProperty(\n    'flex',\n    `1 0 calc(100% - ${secondColFlexBasisPxls}px - ${firstColFlexBasisPxls}px - 20px)`\n  );\n  thirdColumnDiv.style.setProperty('padding-left', '10px');\n  threeColumnContainerDiv.append(thirdColumnDiv);\n\n  return {\n    threeColumnContainerDiv,\n    firstColumnDiv,\n    secondColumnDiv,\n    thirdColumnDiv,\n  };\n};\n","import { addGlobalStyles } from './add-global-styles';\nimport { getAllOptions, getAllOptionsBooleans } from '../utils/get-all-options';\nimport { setOptions } from '../utils/set-options';\nimport { IOptionsBooleans } from '../../options';\nimport { createThreeColumnContainer } from './create-three-column-container';\n\n/**\n * Function to create a binary switch with text for the two different states\n * and a callback used to set local-storage options\n * This switch is intended for the settings panel; you create it with the\n * text for the title of the switch (goes on left) and for the two different states.\n * The callback will be used to change the state of options\n */\n\nexport const createTitledSwitch = (\n  title: string,\n  onText: string,\n  offText: string,\n  key: keyof IOptionsBooleans,\n  cb = (_isChecked: boolean) => {}\n): HTMLDivElement => {\n  /**\n   * Construct and return wrapped switch of the following format\n   *\n   *\n    <div class=\"three-column-container\">\n      <div class=\"first-column\"> Title Text </div>\n      <div class=\"second-column\">\n        <label class=\"switch\">\n          <input type=\"checkbox\">\n          <span class=\"slider\"></span>\n        </label>\n      <div>\n      <div class=\"third-column\"> On/Off Text </div>\n    <div>\n   *\n   */\n\n  // Put a lot of the styles in the global file\n  addGlobalStyles();\n\n  // Get handles on the container html for this switch\n  const {\n    threeColumnContainerDiv,\n    firstColumnDiv,\n    secondColumnDiv,\n    thirdColumnDiv,\n  } = createThreeColumnContainer();\n\n  const isChecked = getAllOptionsBooleans()[key];\n  firstColumnDiv.innerHTML = `<span>${title}</span>`;\n  thirdColumnDiv.innerHTML = `<span>${isChecked ? onText : offText}</span>`;\n\n  // Create the switch inner workings\n  // See: https://www.w3schools.com/howto/howto_css_switch.asp\n  const switchLabel = document.createElement('label');\n  switchLabel.classList.add('switch');\n  secondColumnDiv.append(switchLabel);\n\n  const switchInput = document.createElement('input');\n  switchInput.type = 'checkbox';\n  switchInput.checked = isChecked;\n  switchLabel.append(switchInput);\n\n  const sliderSpan = document.createElement('span');\n  sliderSpan.classList.add('slider');\n  switchLabel.append(sliderSpan);\n\n  // Add listener to toggle text upon switch clicks\n  switchInput.addEventListener('click', () => {\n    setTimeout(() => {\n      // Toggle state and display text\n      setOptions({ [key]: !getAllOptions()[key] });\n      const isChecked = switchInput.checked;\n      thirdColumnDiv.innerHTML = `${isChecked ? onText : offText}`;\n      // Run custom callback\n      cb(isChecked);\n    }, 0);\n  });\n\n  return threeColumnContainerDiv;\n};\n","import { addGlobalStyles } from './add-global-styles';\nimport { setOptions } from '../utils/set-options';\nimport { getAllOptionsNumbers } from '../utils/get-all-options';\nimport { IOptionsNumbers } from '../../options';\nimport { createThreeColumnContainer } from './create-three-column-container';\n\n/**\n * To generate input fields to be placed neatly within the settings panel\n * like so:\n *\n    <div class=\"three-column-container\">\n      <div class=\"first-column\"> Title Text </div>\n      <div class=\"second-column\">\n          <input type=\"text\">\n      <div>\n      <div class=\"third-column\"> BLANK </div>\n    <div>\n *\n */\nexport const createTitledInput = (\n  title: string,\n  key: keyof IOptionsNumbers\n) => {\n  // --->>\n\n  addGlobalStyles();\n\n  // Create handles for container divs\n  const {\n    threeColumnContainerDiv,\n    firstColumnDiv,\n    secondColumnDiv,\n    thirdColumnDiv,\n  } = createThreeColumnContainer();\n\n  // Add title to first div\n  firstColumnDiv.innerHTML = `<span>${title}</span>`;\n\n  // Inject input field into second div\n  const inputField = document.createElement('input');\n  inputField.style.setProperty('min-width', '10px');\n  inputField.style.setProperty('max-width', '50px');\n  inputField.style.setProperty('min-height', '10px');\n  inputField.style.setProperty('height', '30px');\n  inputField.id = 'input-id-123';\n  inputField.value = getAllOptionsNumbers()[key] + '';\n  secondColumnDiv.append(inputField);\n\n  // Add listener to set input-field value on any change\n  inputField.oninput = () => {\n    setTimeout(() => {\n      try {\n        const numVal = parseInt(inputField.value);\n        setOptions({ [key]: numVal });\n      } catch (err) {\n        alert('Something went horribly wrong with your logic');\n      }\n    }, 0);\n  };\n\n  // Finish\n  return threeColumnContainerDiv;\n};\n","/**\n * Generates simple 'hr' div\n */\nexport function getHrDiv() {\n  const hrDiv = document.createElement('div');\n  hrDiv.style.setProperty('width', '100%');\n  hrDiv.style.setProperty('height', '1px');\n  hrDiv.style.setProperty('background-color', 'black');\n  return hrDiv;\n}\n","import { addGlobalStyles } from './add-global-styles';\nimport { createTitledSwitch } from './create-titled-switch';\nimport { createTitledInput } from './create-titled-input';\nimport { getAllOptions } from '../utils/get-all-options';\nimport { getHrDiv } from './create-hr-div';\nimport { createThreeColumnContainer } from './create-three-column-container';\nimport { simpleUuid } from '../utils/simple-uuid';\n\n// Make some unique ids\nexport const settingsPanelIdX = 'settings-panel-id-' + simpleUuid();\nexport const maxObjectsContainerDivId =\n  'max-objects-container-div-id-' + simpleUuid();\nexport const thresholdHContainerDivId =\n  'threshold-H-container-div-id-' + simpleUuid();\n\n// Track state of panel open-closed\nlet isSettingsPanelDisplayed = false;\n\n/**\n * Create panel to hold all the buttons/fields that will control the widget's\n * local-storage-persisted state\n */\nexport const createSettingsPanel = () => {\n  // --->>\n\n  addGlobalStyles();\n\n  // Create container for the settings panel\n  const settingsPanelDiv = document.createElement('div');\n  settingsPanelDiv.id = settingsPanelIdX;\n  settingsPanelDiv.style.setProperty('position', 'absolute');\n  settingsPanelDiv.style.setProperty('top', '0px');\n  settingsPanelDiv.style.setProperty(\n    'right',\n    isSettingsPanelDisplayed ? '0%' : '100%'\n  );\n  settingsPanelDiv.style.setProperty('left', '0px');\n  settingsPanelDiv.style.setProperty('bottom', '0px');\n  settingsPanelDiv.style.setProperty('transition', 'right 1s ease-in-out');\n  settingsPanelDiv.style.setProperty('overflow', 'hidden');\n  settingsPanelDiv.style.setProperty('font-family', '\"Odibee Sans\", cursive');\n  settingsPanelDiv.style.setProperty('font-size', '22px');\n  settingsPanelDiv.style.setProperty(\n    'background-color',\n    'rgba(255,255,255,0.9)'\n  );\n  const isDark = false;\n  if (isDark)\n    settingsPanelDiv.style.setProperty('background-color', 'rgba(0,0,0,0.9)');\n  settingsPanelDiv.style.setProperty('color', 'black');\n  if (isDark) settingsPanelDiv.style.setProperty('color', 'white');\n  settingsPanelDiv.style.setProperty('display', 'flex');\n  settingsPanelDiv.style.setProperty('flex-direction', 'column');\n  settingsPanelDiv.style.setProperty('gap', '5px');\n  settingsPanelDiv.style.setProperty('justify-content', 'start');\n  settingsPanelDiv.style.setProperty('align-items', 'center');\n\n  // Create callback to toggle settings panel open-closed\n  const toggleSettingsPanelCb = () => {\n    isSettingsPanelDisplayed = !isSettingsPanelDisplayed;\n    settingsPanelDiv.style.setProperty(\n      'right',\n      isSettingsPanelDisplayed ? '0%' : '100%'\n    );\n  };\n\n  // Heading\n  const {\n    threeColumnContainerDiv,\n    secondColumnDiv,\n  } = createThreeColumnContainer();\n  secondColumnDiv.innerHTML = '<h1>Settings</h1>';\n  threeColumnContainerDiv.style.setProperty('height', '100px');\n  settingsPanelDiv.append(threeColumnContainerDiv);\n\n  // Planet-loading switch\n  settingsPanelDiv.append(getHrDiv());\n  const planetLoadingModeSwitchContainerDiv = createTitledSwitch(\n    'Planet loading mode?',\n    'Load planets before animation begins',\n    'Begin animation then load planets',\n    '__sbnViewer__isPlanetsLoadedBeforeAnimationBegins'\n  );\n  settingsPanelDiv.append(planetLoadingModeSwitchContainerDiv);\n  // const hrDiv = document.createElement('div');\n  // hrDiv.style.setProperty('width', '100%');\n  // hrDiv.style.setProperty('height', '1px');\n  // hrDiv.style.setProperty('background-color', 'black');\n  settingsPanelDiv.append(getHrDiv());\n\n  // Comet-asteroid loading mode switch\n  const cometAsteroidLoadingModeSwitchContainerDiv = createTitledSwitch(\n    'Comet-Asteroid Loading Mode?',\n    'Start animation then load comets-asteroids',\n    'Wait for comets-asteroids before starting animation',\n    '__sbnViewer__isBeltLoadedBeforeAnimationBegins'\n  );\n  settingsPanelDiv.append(cometAsteroidLoadingModeSwitchContainerDiv);\n  settingsPanelDiv.append(getHrDiv());\n\n  // Abundance-mode switch\n  const abundanceRepresentationModeSwitchContainerDiv = createTitledSwitch(\n    'Comet-Asteroid Abundance Mode?',\n    'Toy Model',\n    'Real World Proportions',\n    '__sbnViewer__isBeltAbundanceToyModel',\n    (isChecked: boolean) => {\n      // --->>\n\n      const maxObjectsContainerDiv = document.getElementById(\n        maxObjectsContainerDivId\n      );\n      if (!!maxObjectsContainerDiv) {\n        maxObjectsContainerDiv.style.setProperty(\n          'display',\n          isChecked ? 'none' : 'flex'\n        );\n      }\n\n      const thresholdHContainerDiv = document.getElementById(\n        thresholdHContainerDivId\n      );\n      if (!!thresholdHContainerDiv) {\n        thresholdHContainerDiv.style.setProperty(\n          'display',\n          isChecked ? 'none' : 'flex'\n        );\n      }\n    }\n  );\n  settingsPanelDiv.append(abundanceRepresentationModeSwitchContainerDiv);\n\n  const isChecked = getAllOptions()['__sbnViewer__isBeltAbundanceToyModel'];\n\n  // Add max objects field\n  const maxObjectsContainerDiv = createTitledInput(\n    'Max number of objects',\n    '__sbnViewer__beltAbundanceMaxObjects'\n  );\n  maxObjectsContainerDiv.style.setProperty(\n    'display',\n    isChecked ? 'none' : 'flex'\n  );\n  maxObjectsContainerDiv.id = maxObjectsContainerDivId;\n  settingsPanelDiv.append(maxObjectsContainerDiv);\n\n  // Add threshold H field\n  const thresholdHContainerDiv = createTitledInput(\n    'Minimum H Mag',\n    '__sbnViewer__beltAbundanceHThreshold'\n  );\n  thresholdHContainerDiv.id = thresholdHContainerDivId;\n  thresholdHContainerDiv.style.setProperty(\n    'display',\n    isChecked ? 'none' : 'flex'\n  );\n  settingsPanelDiv.append(thresholdHContainerDiv);\n  settingsPanelDiv.append(getHrDiv());\n\n  // Return assets having created them\n  return {\n    toggleSettingsPanelCb,\n    settingsPanelDiv,\n  };\n};\n","import { SceneManager } from './threejs/scene-manager';\n\nlet threejsScene: SceneManager;\nexport let initDate = new Date();\nexport const setInitDate = (date: Date) => (initDate = date);\nexport const getInitDate = () => initDate;\n\n/**\n * Create threeJs canvas and inject into container\n */\nexport function init(containerId = 'threejs-canvas-container') {\n  // --->>>\n\n  // Get div to contain canvas\n  const canvasContainer = document.getElementById(containerId);\n  if (!canvasContainer) throw new Error(\"Can't find div of id \" + containerId);\n\n  threejsScene = new SceneManager(containerId);\n  threejsScene.init();\n}\n\nif (process.env.NODE_ENV === 'development') displayFpsStats();\n/**\n * Loads and runs stats.min.js to display FPS, etc.\n */\nfunction displayFpsStats() {\n  const script = document.createElement('script');\n  script.onload = () => {\n    // @ts-ignore\n    const stats = new Stats();\n    document.body.appendChild(stats.dom);\n    requestAnimationFrame(function loop() {\n      stats.update();\n      requestAnimationFrame(loop);\n    });\n  };\n  script.src =\n    'https://sbn-solar-system-viewer.s3.amazonaws.com/scripts/stats.min.js';\n  document.head.appendChild(script);\n}\n\n/**\n * Destroy\n */\nexport function destroy() {\n  // --->>>\n\n  threejsScene.destroy();\n}\n\n/**\n * React-component wrapper\n */\nexport { SbnSolarSystemViewer } from './react-component';\n","import * as THREE from 'three';\n\nimport { AbstractSceneManager } from './abstract-scene/abstract-scene-manager';\nimport { Sun } from './scene-entities/sun';\nimport { Planet } from './scene-entities/planet';\nimport { StarField } from './scene-entities/star-field';\nimport { auToMeters } from './utils/conversions';\nimport { MiscHelpers } from './scene-entities/misc-helpers';\nimport { SimpleLight } from './scene-entities/simple-light';\nimport { Asteroid } from './scene-entities/asteroid';\nimport { PointLight } from './scene-entities/point-light';\nimport { solarSystemData } from './data/basic-solar-system-data';\nimport { createSearchField } from './html/create-search-field';\nimport { IZoomable } from './models/IZoomable';\nimport { updateTraversalFraction } from './utils/update-traversal-fraction';\nimport { updateCameraPosition } from './utils/update-camera-position';\nimport { updateCameraViewingAngle } from './utils/update-camera-viewing-angle';\nimport { AbstractToyModel } from './abstract-scene/abstract-toy-model';\nimport { IZoomableOrbital } from './models/IZoomableOrbital';\nimport { BirdsEye } from './scene-entities/birds-eye';\nimport { getDestinationLookPosition } from './utils/get-destination-look-position';\nimport { AsteroidBelt } from './scene-entities/asteroid-belt';\nimport { myprint } from './utils/myprint';\nimport { addHtmlButtonRow } from './html/add-html-button-row';\nimport { createDisplayMessageDiv } from './html/create-display-message-div';\nimport { createSettingsButton } from './html/create-settings-button';\nimport { createSettingsPanel } from './html/create-settings-panel';\n\n/**\n * Implement a scene for this app with 'real' scene entities\n */\nexport class SceneManager extends AbstractSceneManager {\n  // --->>>\n\n  // User-changeable settings\n  // private abundanceRepresentationMode: EAbundanceRepresentationMode =\n  // EAbundanceRepresentationMode.TOY_REPRESENTATION;\n  // private loadMode: ELoadMode = ELoadMode.BEFORE_ANIMATION;\n\n  // Toy-scalable bodies\n  private sun = new Sun();\n  private planets: Planet[];\n  private asteroids: Asteroid[];\n  private asteroidBelts: AsteroidBelt[];\n  private birdsEyes: BirdsEye[];\n\n  private starField?: StarField;\n  private isToyScale = true;\n  private isOrbitsVisible = true;\n  private isLogScale = false;\n  private toyScalables: AbstractToyModel[];\n  private logScalables: AbstractToyModel[] = [];\n\n  // Zooming logic\n  private zoomables: IZoomable[] = [];\n  private zoomableOrbitals: IZoomableOrbital[] = [];\n  private zoomTarget: IZoomable = this.sun;\n  private isZoomingPosition = false;\n  private isZoomingAngle = false;\n  private zoomTraversalFraction = 0;\n  private zoomClock = new THREE.Clock(); //Controls movement of camera when touring planets\n  private isScenePaused = false;\n\n  public updateDisplayedMessage: (msg: string) => void = () => {\n    console.log('denied!');\n  };\n\n  constructor(containerId: string) {\n    // --->>>\n\n    super(containerId);\n\n    // Add html\n    // Message Display\n    const { displayMessageDiv, updateMessageCb } = createDisplayMessageDiv();\n    this._container.append(displayMessageDiv);\n    this.updateDisplayedMessage = updateMessageCb;\n    this.updateDisplayedMessage('Loading...');\n    // Search field\n    const searchFieldDiv = createSearchField(this.tryToStartZooming);\n    this._container.append(searchFieldDiv);\n    // Buttons in main display\n    !false &&\n      addHtmlButtonRow(\n        [\n          { label: 'Toggle Toy Scale', cb: this.toggleIsToyScale },\n          { label: 'Toggle helpers', cb: this.toggleHelpersVisibility },\n          { label: 'Toggle Orbits', cb: this.toggleIsOrbitsVisible },\n          { label: 'Toggle Log Scale', cb: this.toggleIsLogScale },\n          { label: 'Toggle Asteroids', cb: this.toggleAsteroids },\n        ],\n        this._container\n      );\n    // Settings panel and button\n    const { settingsPanelDiv, toggleSettingsPanelCb } = createSettingsPanel();\n    this._container.append(settingsPanelDiv);\n    const settingsButton = createSettingsButton(toggleSettingsPanelCb);\n    this._container.append(settingsButton);\n\n    // Entities\n    this.birdsEyes = [new BirdsEye(), new BirdsEye('BIRDSEYELOG', 5)];\n    this.planets = [\n      new Planet('MERCURY'),\n      new Planet('VENUS'),\n      new Planet('EARTH'),\n      new Planet('MARS'),\n      new Planet('CERES'),\n      new Planet('JUPITER'),\n      new Planet('SATURN'),\n      new Planet('URANUS'),\n      new Planet('NEPTUNE'),\n      new Planet('PLUTO'),\n      new Planet('HAUMEA'),\n      new Planet('MAKEMAKE'),\n      new Planet('ERIS'),\n    ];\n    this.asteroids = [\n      //\n      // new Asteroid('65P'),\n    ];\n    this.asteroidBelts = [\n      new AsteroidBelt(['DISTANTOBJECT', 'MBA', 'NEO1KM', 'PHA'], this),\n    ];\n    this.starField = new StarField(auToMeters(999));\n    this.zoomables = [\n      ...this.planets,\n      ...this.asteroids,\n      ...this.birdsEyes,\n      this.sun,\n    ];\n    this.zoomableOrbitals = [...this.planets, ...this.asteroids];\n    this.toyScalables = [\n      ...this.planets,\n      ...this.asteroids,\n      ...this.asteroidBelts,\n      this.sun,\n    ];\n    this.logScalables = [\n      ...this.planets,\n      ...this.asteroids,\n      ...this.asteroidBelts,\n    ];\n\n    myprint('Begin registering entities');\n    this.registerSceneEntities([\n      // this.starField,\n      new MiscHelpers(),\n      new SimpleLight(0.4),\n      new PointLight(5, solarSystemData.SUN.radiusMeters),\n      ...this.planets,\n      ...this.asteroids,\n      ...this.asteroidBelts,\n      /** Sun MUST come last due to its sprite-blending quirks **/\n      this.sun,\n    ]);\n    myprint('Finish registering entities');\n\n    // Logic to run before scene initialization\n    this._preInitHook = () => {\n      const radius = auToMeters(4);\n      // const radius = auToMeters(100); // See all planets\n      this._initialViewingVector = new THREE.Vector3(0, 0, radius);\n    };\n\n    // Logic to run after scene initialization\n    this._postInitHook = () => {\n      // Misc\n      this._controls!.maxDistance = auToMeters(100);\n      this.setHelpersVisibility(!true);\n      //\n      this._camera.position.set(\n        // Earth\n        // -180595912325.3482,\n        // 34587914945.44637,\n        // 3906449321.9052143\n        // Haumea\n        // -4514678652999.103,\n        // -996799575287.2986,\n        // 1431642047889.7205\n        // Over Jupiter's Shoulder\n        // 349450170005.93274,\n        // 1508896562129.965,\n        // 622420704159.6792\n        // 65P\n        35426284497.8745,\n        -725267146538.4939,\n        -111665855099.58893\n      );\n    };\n\n    // Temp\n    // setTimeout(() => this.tryToStartZooming('CERES'), 500);\n    setTimeout(() => {\n      this.setIsToyScale(true);\n      this.tryToStartZooming('BIRDSEYE');\n    }, 3500);\n    this._camera.up.set(1, 1, 1);\n\n    // Clean up on instance destruction\n    this._destroyHook = () => {};\n  }\n\n  setIsToyScale = (isToyScale: boolean) => {\n    this.isToyScale = !!isToyScale;\n    this.toyScalables.forEach(_ => _.setIsZoomToToyScale(this.isToyScale));\n  };\n\n  toggleIsToyScale = () => {\n    this.isToyScale = !this.isToyScale;\n    this.setIsToyScale(this.isToyScale);\n  };\n\n  setIsOrbitsVisible = (isOrbitsVisible: boolean) => {\n    this.isOrbitsVisible = !!isOrbitsVisible;\n    this.zoomableOrbitals.forEach(\n      _ => _ instanceof Asteroid || _.setIsOrbitVisible(this.isOrbitsVisible)\n    );\n  };\n\n  toggleIsOrbitsVisible = () => {\n    this.isOrbitsVisible = !this.isOrbitsVisible;\n    this.setIsOrbitsVisible(this.isOrbitsVisible);\n  };\n\n  toggleAsteroids = () => {\n    this.asteroidBelts.forEach(asteroidBelt =>\n      asteroidBelt.toggleIsBeltVisible()\n    );\n  };\n\n  setIsLogScale = (isLogScale: boolean) => {\n    this.isLogScale = !!isLogScale;\n    this.logScalables.forEach(el => el.toggleIsLogScale());\n    this.tryToStartZooming(this.isLogScale ? 'BIRDSEYELOG' : 'BIRDSEYE');\n  };\n\n  toggleIsLogScale = () => {\n    this.isLogScale = !this.isLogScale;\n    this.setIsLogScale(this.isLogScale);\n  };\n\n  tryToStartZooming = (text: string) => {\n    const TEXT = text.toUpperCase();\n    const foundTarget = this.zoomables.find(el => el.NAME === TEXT);\n    if (foundTarget) {\n      this.isZoomingPosition = true;\n      this.isZoomingAngle = true;\n      this.zoomTarget = foundTarget;\n      this.zoomClock = new THREE.Clock(true);\n      this._controls.enabled = true;\n    }\n  };\n\n  tryToStopZooming = () => {\n    if (!this.isZoomingAngle && !this.isZoomingPosition) {\n      this._controls.target =\n        this.zoomTarget instanceof BirdsEye\n          ? new THREE.Vector3(0, 0, 0)\n          : this.zoomTarget.getPosition();\n      this._controls.enabled = true;\n    }\n  };\n\n  setIsScenePaused(val: boolean) {\n    this.isScenePaused = val;\n    if (this.isScenePaused) {\n      this._clock.stop();\n      this.setIsLoaderDivVisible(true, 0);\n    } else {\n      this._clock.start();\n      this.setIsLoaderDivVisible(false, 0);\n    }\n  }\n\n  updateCamera = () => {\n    //\n\n    const t = this._clock.getElapsedTime();\n\n    // Zooming logic\n    if (this.isZoomingPosition || this.isZoomingAngle) {\n      this.zoomTraversalFraction = updateTraversalFraction(this.zoomClock);\n      if (this.isZoomingPosition) {\n        this.isZoomingPosition = updateCameraPosition(\n          this._camera,\n          this.zoomTarget,\n          this.zoomTraversalFraction\n        );\n      }\n      if (this.isZoomingAngle) {\n        this.isZoomingAngle = updateCameraViewingAngle(\n          this._camera,\n          this.zoomTarget,\n          this.zoomTraversalFraction\n        );\n      } else {\n        // Keep looking at target even if position is still updating\n        const { x, y, z } = getDestinationLookPosition(this.zoomTarget);\n        this._camera.lookAt(x, y, z);\n        // this._camera.up.set(1, 1, 1);\n        // console.log('0 >>>>', this._camera.up, this._camera.position);\n      }\n      this.tryToStopZooming();\n    } else {\n      // Orbit controls only update when NOT zooming\n      this._controls.update();\n      {\n        // const p = this._camera.position;\n        // this._camera.position.multiplyScalar(1 + 0.01 * Math.sin(t));\n      }\n    }\n\n    // Debug\n    if (!true && Math.random() < 0.1 && this._clock.elapsedTime < 50) {\n      console.log(this._camera.position);\n      console.log('>>> ', this._sceneEntities);\n    }\n  };\n}\n","import * as THREE from 'three';\n\nconst alpha = 1 / 100;\nconst beta = 3.0;\n\n/**\n * Function at the heart of the smooth-zoom functionality.\n * It only requires two parameters to enable smooth movement between\n * a vast range of distances. By starting off with really small steps\n * (parameterised by alpha), you ensure that the movement starts off slow.\n * By increasing exponentially, you ensure that no matter how far the object,\n * it will soon start gobbling up the traversal vector. Because that traversal\n * vector decreases in size with each step, it also ensures the arrival is not too\n * abrupt.\n */\nexport const updateTraversalFraction = (clock: THREE.Clock) => {\n  const searchTimeElapsed = clock.getElapsedTime();\n  // let fraction: number = Math.pow(searchTimeElapsed, beta) * alpha;\n  let fraction: number =\n    searchTimeElapsed * searchTimeElapsed * searchTimeElapsed * alpha;\n  if (fraction < 0.0) fraction = 0.0;\n  if (fraction > 1.0) fraction = 1.0;\n  return fraction;\n};\n","import * as THREE from 'three';\n\nfunction vectorBetweenTwoVector3s(v1: THREE.Vector3, v2: THREE.Vector3) {\n  return new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z);\n}\n\nexport function distanceBetweenTwoVector3s(\n  v1: THREE.Vector3,\n  v2: THREE.Vector3\n): number {\n  return vectorBetweenTwoVector3s(v1, v2).length();\n}\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { distanceBetweenTwoVector3s } from './threejs-geometry-functions';\nimport { getDestinationCameraPosition } from './get-destination-camera-position';\nimport { au } from './constants';\n\n/**\n * Function to compute the next position for a camera given a zoomable target\n * (e.g. a planet), the camera, and a 'traversal' fraction that parameterizes\n * how fast to move toward that target\n */\nexport const updateCameraPosition = (\n  camera: THREE.Camera,\n  zoomTarget: IZoomable,\n  zoomTraversalFraction: number\n) => {\n  // Determine where you want to end up\n  const { x, y, z } = getDestinationCameraPosition(zoomTarget);\n\n  // Get vector between present and destination positions\n  // This is the vector \"to-be-fractionally-traversed\"\n  const cp = camera.position;\n  const relativeDestinationCameraVector = new THREE.Vector3(\n    x - cp.x,\n    y - cp.y,\n    z - cp.z\n  );\n\n  // Traverse the camera some fraction along said vector\n  let newCameraPosition: THREE.Vector3 = new THREE.Vector3(\n    cp.x + relativeDestinationCameraVector.x * zoomTraversalFraction,\n    cp.y + relativeDestinationCameraVector.y * zoomTraversalFraction,\n    cp.z + relativeDestinationCameraVector.z * zoomTraversalFraction\n  );\n\n  // Return signal to stop/continue\n  let isZoomingPosition = true;\n\n  // Decide whether to stop searching and instead lock onto destinationCameraPosition\n  const separation = distanceBetweenTwoVector3s(\n    newCameraPosition,\n    new THREE.Vector3(x, y, z)\n  );\n  const smallThresholdSeparation = 0.0001 * au;\n  if (separation < smallThresholdSeparation) {\n    isZoomingPosition = false;\n    newCameraPosition = new THREE.Vector3(x, y, z);\n  }\n\n  //Finally, update computed new camera position\n  camera.position.set(\n    newCameraPosition.x,\n    newCameraPosition.y,\n    newCameraPosition.z\n  );\n\n  return isZoomingPosition;\n};\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { BirdsEye } from '../scene-entities/birds-eye';\n\n/**\n * By providing a zoomable target, this function will compute a 'scenic'\n * position that will be used by other functions to move the camera.\n */\nexport const getDestinationCameraPosition = (zoomTarget: IZoomable) => {\n  const scale = zoomTarget.getScale();\n  const radius = zoomTarget.getRadius();\n\n  if (zoomTarget.NAME === 'SUN') {\n    // Position around sun is arbitrary\n    const { x, y, z } = zoomTarget.getPosition();\n    return new THREE.Vector3(x + 3 * radius * scale, y + 3 * radius * scale, z);\n  }\n\n  if (zoomTarget instanceof BirdsEye) {\n    return zoomTarget.getPosition();\n  }\n\n  // Logic to find 'scenic' destination with sun in view in the distance\n  // to the side of target based on some back-of-envelope high-school geometry\n  const X = zoomTarget.getPosition().clone();\n  const r = 2 * radius * scale;\n  const sinAlpha = r / X.length();\n  const alpha = Math.asin(sinAlpha);\n  X.applyAxisAngle(new THREE.Vector3(0, 0, 1), alpha);\n  const lengthenFactor = (X.length() + 4 * radius * scale) / X.length();\n  X.multiplyScalar(lengthenFactor);\n  return X;\n};\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { BirdsEye } from '../scene-entities/birds-eye';\nimport { getDestinationLookPosition } from './get-destination-look-position';\n\n/**\n * By providing a zoomable target, your camera, and a 'traversal fraction',\n * this function will compute the next modification in viewing direction for\n * the camera in order to pan towards the target\n */\nexport const updateCameraViewingAngle = (\n  camera: THREE.Camera,\n  zoomTarget: IZoomable,\n  zoomTraversalFraction: number\n) => {\n  // Get vector from where you are to where you want to look\n  const camPos = camera.position;\n  const destinationLookPosition = getDestinationLookPosition(zoomTarget);\n  const destinationLookVector = new THREE.Vector3(\n    destinationLookPosition.x - camPos.x,\n    destinationLookPosition.y - camPos.y,\n    destinationLookPosition.z - camPos.z\n  );\n\n  // Get unitary vector of direction camera is presently pointing\n  const presentLookVector = camera.getWorldDirection(new THREE.Vector3());\n\n  // In order for the change in viewing angle to feel like it matches\n  // the change in position, we need to multiply the unitary vector to\n  // be on the same order of size as the destinationLookVector\n  presentLookVector.multiplyScalar(destinationLookVector.length());\n\n  // Use these two vectors to compute the vector \"to-be-fractionally-traversed\"\n  // N.b. you might need to sketch a diagram to understand why this works\n  const relativeDestinationLookVector: THREE.Vector3 = new THREE.Vector3(\n    destinationLookVector.x - presentLookVector.x,\n    destinationLookVector.y - presentLookVector.y,\n    destinationLookVector.z - presentLookVector.z\n  );\n\n  // Fractionally traverse said vector\n  let newLookPosition: THREE.Vector3 = new THREE.Vector3(\n    camera.position.x +\n      presentLookVector.x +\n      relativeDestinationLookVector.x * zoomTraversalFraction,\n    camera.position.y +\n      presentLookVector.y +\n      relativeDestinationLookVector.y * zoomTraversalFraction,\n    camera.position.z +\n      presentLookVector.z +\n      relativeDestinationLookVector.z * zoomTraversalFraction\n  );\n\n  // Signal whether to stop/continue\n  let isZoomingAngle = true;\n\n  // Decide whether to stop searching and visually lock onto destinationLookPosition\n  const smallThresholdAngle = 0.0025;\n  const theta = destinationLookVector.angleTo(presentLookVector);\n  if (theta < smallThresholdAngle) {\n    isZoomingAngle = false;\n    newLookPosition = destinationLookPosition;\n  }\n\n  //Finally, update computed new viewing and camera position\n  camera.lookAt(newLookPosition.x, newLookPosition.y, newLookPosition.z);\n\n  return isZoomingAngle;\n};\n","import { addGlobalStyles } from './add-global-styles';\n\n/**\n * Create div in which messages will be displayed\n */\nexport function createDisplayMessageDiv() {\n  // --->>\n\n  addGlobalStyles();\n\n  const displayMessageDiv = document.createElement('div');\n  displayMessageDiv.id = 'message-field';\n\n  displayMessageDiv.style.setProperty('position', 'absolute');\n  displayMessageDiv.style.setProperty('left', '0%');\n  displayMessageDiv.style.setProperty('right', '0px');\n  displayMessageDiv.style.setProperty('bottom', '0px');\n  displayMessageDiv.style.setProperty('height', '40px');\n  displayMessageDiv.style.setProperty('display', 'flex');\n  displayMessageDiv.style.setProperty('justify-content', 'flex-end');\n  displayMessageDiv.style.setProperty('align-items', 'center');\n  displayMessageDiv.style.setProperty('padding-right', '10px');\n  displayMessageDiv.style.setProperty(\n    'background-color',\n    'rgba(255,255,255,0.1)'\n  );\n  displayMessageDiv.style.setProperty('color', 'white');\n\n  const updateMessageCb = (msg: string) => {\n    displayMessageDiv.innerHTML = msg;\n  };\n\n  return { displayMessageDiv, updateMessageCb };\n}\n","import { buttonFontFamily } from '../utils/constants';\nimport { addGlobalStyles } from './add-global-styles';\n\n/**\n *\n */\nexport const createSearchField = (onEnter: (value: string) => void) => {\n  //\n\n  addGlobalStyles();\n\n  const div = document.createElement('div');\n  const input = document.createElement('input');\n\n  div.style.setProperty('position', 'absolute');\n  div.style.setProperty('top', '10px');\n  div.style.setProperty('left', '10px');\n  div.style.setProperty('width', '120px');\n  div.style.setProperty('height', '40px');\n  div.style.setProperty('background-color', 'green');\n\n  //\n  input.value = 'Earth';\n  input.style.setProperty('width', '100%');\n  input.style.setProperty('height', '100%');\n  input.style.setProperty('font-size', '20px');\n  input.style.setProperty('font-family', buttonFontFamily);\n  input.style.setProperty('font-size', '20px');\n  input.classList.add('sbn-solar-system-viewer-input');\n  input.addEventListener('keypress', e => {\n    if (e.key === 'Enter') {\n      onEnter(input.value);\n    }\n  });\n  div.append(input);\n\n  // Finish\n  return div;\n};\n","import { getReactIconSvg } from '../utils/get-react-icon-svg';\n\n/**\n * Adds settings button to top-right of UI\n */\nexport const createSettingsButton = (toggleSettingsPanelCb: () => void) => {\n  // --->>>\n\n  // Create button container\n  const settingsSizePxls = 70;\n  const settingsButtonDiv = document.createElement('div');\n  settingsButtonDiv.style.setProperty('position', 'absolute');\n  settingsButtonDiv.style.setProperty('top', '0px');\n  settingsButtonDiv.style.setProperty('right', '0px');\n  settingsButtonDiv.style.setProperty('height', `${settingsSizePxls}px`);\n  settingsButtonDiv.style.setProperty('width', `${settingsSizePxls}px`);\n  settingsButtonDiv.style.setProperty('display', 'flex');\n  settingsButtonDiv.style.setProperty('justify-content', 'center');\n  settingsButtonDiv.style.setProperty('align-items', 'center');\n  settingsButtonDiv.style.setProperty('z-index', '2');\n  // svgWrapperDiv.style.setProperty('background-color', 'pink');\n\n  // Inject SVG into div\n  settingsButtonDiv.innerHTML = getReactIconSvg('IoIosSettings', {\n    fillColor: 'white',\n    size: settingsSizePxls,\n  });\n\n  // Add listener\n  settingsButtonDiv.addEventListener('click', toggleSettingsPanelCb);\n\n  // Finish\n  return settingsButtonDiv;\n};\n","import React from 'react';\nimport { init, destroy } from '.';\n\ninterface IProps {\n  width?: number | string;\n  height?: number | string;\n  backgroundColor?: string;\n}\n/**\n *  React wrapper\n */\nexport function SbnSolarSystemViewer(props: IProps) {\n  // --->>>\n\n  const { width, height, backgroundColor } = {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'grey',\n    ...props,\n  };\n  const id = 'this-id-will-never-be-duplicated-says-007';\n\n  React.useEffect(() => {\n    init(id);\n    return () => {\n      destroy();\n      console.log('Widget app removed!!!');\n    };\n  }, []);\n\n  return (\n    <div\n      id={id}\n      style={{\n        width,\n        height,\n        backgroundColor,\n      }}\n    />\n  );\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asciiError","msg","auToMeters","aus","optionKeys","items","addGlobalStyles","globalStyle","document","createElement","innerHTML","head","append","count","simpleUuid","loaderDivId","isInit","myprint","console","log","Date","getInitDate","near","far","AbstractSceneManager","_containerId","THREE","sceneEntities","el","_this","_sceneEntities","isHelpersShown","_isHelpersShown","_scene","traverse","child","userData","isHelper","visible","setHelpersVisibility","_canvas","style","width","height","offsetWidth","offsetHeight","_camera","aspect","updateProjectionMatrix","_renderer","setSize","window","removeEventListener","_updateCameraAspect","_stopRendering","_destroyHook","_isRendering","setTimeout","_requestAnimationFrameId","requestAnimationFrame","_render","_update","_fps","_clock","start","_container","getElementById","setProperty","containerDiv","loaderDiv","animDiv","id","shorterLength","borderWidthPxls","addLoaderDiv","init","_isInit","setInitDate","_preInitHook","addEventListener","DPR","devicePixelRatio","canvas","antialias","alpha","setPixelRatio","sortObjects","shadowMap","enabled","outputEncoding","position","copy","_initialViewingVector","up","lookAt","_controls","OrbitControls","domElement","enableDamping","dampingFactor","target","all","map","sceneEntity","initiatedSceneEntityGroup","children","_","group","_this2","add","_startRendering","_postInitHook","setIsLoaderDivVisible","val","fadeInOutTimeMs","_isLoaderVisible","isVisible","fadeOutTimeMs","setLoaderDivVisibility","setFramesPerSecond","newFps","update","_this3","elapsedTime","updateCamera","render","getTextureFromImageUrl","url","load","texture","encoding","xhr","loaded","total","solarSystemData","SUN","radiusMeters","periodDays","MERCURY","VENUS","EARTH","MARS","CERES","JUPITER","SATURN","URANUS","NEPTUNE","PLUTO","HAUMEA","MAKEMAKE","ERIS","MOON","defaultOptions","__sbnViewer__isPlanetsLoadedBeforeAnimationBegins","__sbnViewer__isBeltLoadedBeforeAnimationBegins","__sbnViewer__isBeltAbundanceToyModel","__sbnViewer__beltAbundanceMaxObjects","__sbnViewer__beltAbundanceHThreshold","localStorage","includes","removeItem","getItem","JSON","parse","setItem","stringify","getAllOptions","optionsFromLocalStorage","parsedVal","AbstractSceneEntity","_isAsyncLoad","_sceneEntityGroup","AbstractToyModel","_toyScale","setIsZoomToToyScale","_isZoomToToyScale","setToyScale","getScale","_realScale","_setToToyScale","_toyGroup","t","scale","set","setIsLogScale","isLogScale","logTransitionClock","toggleIsLogScale","getLogInterpolationParam","getElapsedTime","v","_updateModelScale","sx","x","sy","y","sz","z","ds","Math","abs","assetsBaseUrl","getAssetsBaseUrl","EOrbitalType","au","Sun","blending","transparent","sunRadiusMeters","sprite","multiplyScalar","model","helper","color","rotateX","PI","spriteUrl","onTextureLoad","material","needsUpdate","NAME","gltfLoader","gltfUrl","targetRadius","isCenteredOnBoundingBox","isShadowShown","Loader","gltf","scene","biggestSphereRadius","pow","geometry","computeBoundingSphere","boundingSphere","radius","s","resizeThreejsObject","setFromObject","getCenter","toArray","x2","y2","z2","clone","centerOnBoundingBox","castShadow","receiveShadow","enshadowChildren","message","EPHEM_VALID_ATTRS","Set","ANGLE_UNITS","isDef","SKEphem","initialValues","units","locked","_attrs","_locked","actualUnits","has","GM","fill","get","warn","attr","e","a","q","w","wBar","om","aMeters","n","period","sqrt","newN","ma","L","lock","epoch","EARTH_MOON","PLUTO_CHARON","EphemPresets","rescaleXYZ","X","Y","Z","interpolate","data","xValue","sampleRowMin","sampleRowMax","xIndex","yIndex","Array","isArray","maxColumn","sum","j","prod","k","OrbitType","DEFAULT_COMPARER_METHOD","b","INCREASING_JDATE_SEARCH_METHOD","DEFAULT_UNITS","distance","time","DISTANCE_UNITS","EPHEM_TYPES","INTERPOLATION_TYPES","TIME_UNITS","SKEphemerisTable","ephemerisData","_data","distanceUnits","_units","timeUnits","ephemerisType","_ephemType","interpolationType","_interpolationType","interpolationOrder","_interpolationOrder","distanceMultiplier","calcDistanceMultiplier","timeMultiplier","calcTimeMultiplier","line","getPositionAtTime","jd","last","calcBoundingIndices","startIndex","stopIndex","SpacekitMath","getPositions","startJd","stopJd","stepDays","unitType","halfSampleSize","floor","closestIndex","comparer","left","right","middle","comparisonCalc","Util","Number","sin","cos","cbrt","exp","SKOrbit","_ephem","options","_options","eclipticLineColor","orbitPathSettings","leadDurationYears","trailDurationYears","numberSamplePoints","_orbitType","ephem","TABLE","PARABOLIC","HYPERBOLIC","ELLIPTICAL","getOrbitType","debug","getPositionAtTimeNearParabolic","getPositionAtTimeHyperbolic","getPositionAtTimeElliptical","getPositionAtTimeTable","getPositionAtTimeParabolic","_debug","eph","h","g","atan","vectorToHeliocentric","W","f","C","M","F0","F1","cosh","sinh","lastdiff","F","tanh","r","d","E0","E1","E","tan","point","o","p","needsUpdateForTime","_orbitStart","_orbitStop","getOrbitShape","forceCompute","_orbitShape","dispose","_orbitPoints","_eclipticDropLines","getEllipse","centerDate","julian","toJulianDay","endJd","step","getLine","bind","getTableOrbit","orbitFn","points","pos","pointsGeometry","setFromPoints","generateAndCacheOrbitShape","XYZ","pointGeometry","getEllipseGeometry","ecc","twoPi","pts","getLinesToEcliptic","getHexColor","_this$_orbitShape","getHex","setHexColor","hexVal","_this$_orbitShape2","_this$_orbitShape2$ma","getVisibility","_this$_orbitShape3","setVisibility","getLoggedPosition","oldLengthAus","log10","newPosition","Orbit","orbitalType","skephem","opacity","PLANET","SKEph","SKprojectedOrbitLine","getMorphedOrbitLine","ASTEROID","loadAsteroid","DWARF_PLANET","loadPlanet","orbitLine","morphAttributes","positionAttribute","attributes","loggedPositions","x0","getX","y0","getY","z0","getZ","logpos","morphTargets","getXyzMeters","tCenturiesSinceJ200","xyz","_this$SKOrbit","getPosition","getTail","tailLength","realBodyPosition","loggedBodyPosition","realTargetTime","loggedTargetTime","realDiffLength","loggedDiffLength","isRealSearch","isLoggedSearch","distanceTo","realDt","loggedDt","dSegmentRadius","geometries","lastRealPosition","lastLoggedPosition","nextRealPosition","nextLoggedPosition","lastSegmentRadius","segment","tLogged","nextSegmentRadius","realSegmentHeight","loggedSegmentHeight","realSegmentGeometry","loggedSegmentGeometry","orientation","makeTranslation","translate","applyMatrix4","realGeometry","BufferGeometryUtils","mergeBufferGeometries","loggedGeometry","planetsWithBumpMaps","planetsAsLoadableObjects","dwarfPlanets","Planet","toLowerCase","objUrl","tempMesh","onObjectLoad","imageUrl","bumpUrl","isBumpy","isEarth","pNull","mesh","shininess","onTexturesLoad","promisedMapTexture","promisedBumpTexture","promisedEarthCloudTexture","bumpMap","status","earthClouds","bumpScale","clouds","side","depthWrite","promises","canvasResult","contextResult","getContext","imageMap","Image","crossOrigin","onerror","onload","canvasMap","contextMap","drawImage","dataMap","getImageData","imageTrans","canvasTrans","contextTrans","dataTrans","dataResult","createImageData","offset","putImageData","src","allSettled","orbit","getPlanetRadiusMeters","getPlanetType","getProjectedOrbitLine","loadPlanetAsObject","loadPlanetAsTexturedSphere","getDestinationPosition","_tCenturiesSinceJ200","u","lerp","updateOrbitLine","morphTargetInfluences","rotateZ","rotateY","StarField","isAlphaInverted","img","image","ctx","invertTextureColor","rotation","MiscHelpers","axesHelper","SimpleLight","_defaultIntensity","intensity","_light","isAmbientLight","setIsOn","isOn","createAsteroidGeometry","size","warpFactor","getAttribute","vertices","fromBufferAttribute","join","random","setXYZ","loggedPosition","Asteroid","PointLight","_radius","dxy","BirdsEye","zInAus","token","setZ","getDestinationLookPosition","zoomTarget","asteroidBeltTypes","getAsteroidBeltColor","belt","getWorkerURL","URL","createObjectURL","Blob","getAsteroidBeltMergedGeometries","belts","parentSceneManager","resolve0","baseUrl","worker_url","worker","Worker","onmessage","postMessage","results","updateDisplayedMessage","setIsScenePaused","xxx","asteroidBeltGeometriesStringified","loader","mergedAsteroidGeometry","mergedTailsGeometry","getInitMeshes","reduce","acc","ind","AsteroidBelt","mergedAsteroidsMeshes","mergedTailsMeshes","textureUrl","allAsteroidBeltMergedGeometries","isMeshesLoaded","updateMeshes","setIsBeltVisible","isBeltVisible","_this4","toggleIsBeltVisible","dist","_this5","injectCommonButtonProperties","button","onClickCB","link","mutateButton","rel","href","addHtmlButtonRow","buttonInputs","container","buttonWrapperDiv","buttonInput","buttonDiv","innerText","label","cb","iconsDict","FiPhone","AiOutlineSetting","IoIosSettings","setOptions","newOptions","createThreeColumnContainer","threeColumnContainerDiv","classList","firstColumnDiv","secondColumnDiv","thirdColumnDiv","createTitledSwitch","title","onText","offText","_isChecked","isChecked","switchLabel","switchInput","checked","sliderSpan","createTitledInput","inputField","oninput","numVal","parseInt","alert","getHrDiv","hrDiv","threejsScene","settingsPanelIdX","maxObjectsContainerDivId","thresholdHContainerDivId","isSettingsPanelDisplayed","SceneManager","containerId","sun","isToyScale","toyScalables","setIsToyScale","isOrbitsVisible","zoomableOrbitals","setIsOrbitVisible","setIsOrbitsVisible","asteroidBelts","asteroidBelt","logScalables","tryToStartZooming","text","TEXT","toUpperCase","foundTarget","zoomables","find","isZoomingPosition","isZoomingAngle","zoomClock","searchTimeElapsed","fraction","v1","v2","camera","zoomTraversalFraction","cp","relativeDestinationCameraVector","newCameraPosition","getRadius","sinAlpha","asin","applyAxisAngle","lengthenFactor","getDestinationCameraPosition","camPos","destinationLookPosition","destinationLookVector","presentLookVector","getWorldDirection","relativeDestinationLookVector","newLookPosition","angleTo","updateCameraViewingAngle","tryToStopZooming","displayMessageDiv","updateMessageCb","createDisplayMessageDiv","searchFieldDiv","onEnter","div","input","createSearchField","toggleIsToyScale","toggleHelpersVisibility","toggleIsOrbitsVisible","toggleAsteroids","settingsPanelDiv","planetLoadingModeSwitchContainerDiv","cometAsteroidLoadingModeSwitchContainerDiv","abundanceRepresentationModeSwitchContainerDiv","maxObjectsContainerDiv","thresholdHContainerDiv","toggleSettingsPanelCb","createSettingsPanel","settingsButton","settingsButtonDiv","settingsSizePxls","icon","reactIcon","SIZE","strokeColor","fillColor","strokeWidth","props","viewBox","getReactIconSvg","createSettingsButton","birdsEyes","planets","asteroids","starField","registerSceneEntities","maxDistance","isScenePaused","initDate","date","destroy","backgroundColor","React","useEffect"],"mappings":"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"}