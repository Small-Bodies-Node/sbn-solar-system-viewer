{"version":3,"file":"sbnsolarsystemviewer.cjs.production.min.js","sources":["../src/options.ts","../node_modules/regenerator-runtime/runtime.js","../src/threejs/utils/ascii-error.ts","../src/threejs/utils/conversions.ts","../src/threejs/html/add-global-styles.ts","../src/threejs/html/get-loader-div.ts","../src/threejs/html/remove-loader-div.ts","../src/threejs/abstract-scene/abstract-scene-manager.ts","../src/threejs/utils/constants.ts","../src/threejs/html/inject-common-button-properties.ts","../src/threejs/utils/get-texture-from-image-url.ts","../src/threejs/data/basic-solar-system-data.ts","../src/threejs/abstract-scene/abstract-scene-entity.ts","../src/threejs/models/EOrbitalType.ts","../src/threejs/abstract-scene/abstract-toy-model.ts","../src/threejs/scene-entities/sun.ts","../src/threejs/utils/get-planet-radius-meters.ts","../src/threejs/utils/gltf-loader.ts","../src/threejs/utils/resize-threejs-object.ts","../src/threejs/utils/center-on-bounding-box.ts","../src/threejs/utils/enshadow-children.ts","../src/threejs/utils/sk-ephem.ts","../src/threejs/data/ephem-presets.ts","../src/threejs/utils/sk-scale.ts","../src/threejs/utils/sk-math.ts","../src/threejs/utils/sk-util.ts","../src/threejs/utils/sk-orbit.ts","../src/threejs/utils/sk-ephemeris-table.ts","../src/threejs/utils/sk-units.ts","../src/threejs/utils/orbit.ts","../src/threejs/scene-entities/planet.ts","../src/threejs/utils/create-earth-cloud-mesh.ts","../src/threejs/scene-entities/star-field.ts","../src/threejs/utils/invert-texture-color.ts","../src/threejs/scene-entities/misc-helpers.ts","../src/threejs/scene-entities/simple-light.ts","../src/threejs/utils/create-asteroid-geometry.ts","../src/threejs/scene-entities/asteroid.ts","../src/threejs/scene-entities/point-light.ts","../src/threejs/scene-entities/asteroid-belt.ts","../src/threejs/html/button-toggle-orbits.ts","../src/index.tsx","../src/threejs/scene-manager.ts","../src/threejs/utils/j2000.ts","../src/threejs/data/time-units.ts","../src/threejs/utils/update-traversal-fraction.ts","../src/threejs/utils/update-camera-position.ts","../src/threejs/utils/update-desination-camera-position.ts","../src/threejs/utils/threejs-geometry-functions.ts","../src/threejs/utils/update-camera-viewing-angle.ts","../src/threejs/html/search-field.ts","../src/threejs/html/button-toggle-toy-scale.ts","../src/threejs/html/button-toggle-helpers.ts","../src/react-component.tsx"],"sourcesContent":["/**\n * This module is the SSOT for global \"initial\" settings for the app\n * that get set before the threejs scene begins\n */\n\nexport type TOptions = typeof options;\n\nlet options = {\n  isAsyncLoad: true,\n};\n\nexport const getOptions = () => options;\n\nexport const setOptions = (newOptions: Partial<typeof options>) =>\n  (options = { ...options, ...newOptions });\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * A simple ascii-art wrapper for error messaging in order to convey\n * just how tragic your errors are\n */\nexport function asciiError(msg: string) {\n  // console.clear();\n  return `\n\n   ______________________________    . \\\\  | / .\n  /                            / \\\\     \\\\ \\\\ / /\n |                            | ==========  - -\n  \\\\____________________________\\\\_/     / / \\\\ \\\\\n  ______________________________      \\\\  | / | \\\\\n /                            / \\\\     \\\\ \\\\ / /.   .\n|                            | ==========  - -\n \\\\____________________________\\\\_/     / / \\\\ \\\\    /\n   ______________________________   / |\\\\  | /  .\n  /                            / \\\\     \\\\ \\\\ / /\n |                            | ==========  -  - -\n  \\\\____________________________\\\\_/     / / \\\\ \\\\\n                                     .  / | \\\\  .\n\n  Are you trying to wreak havoc on the Universe!?!\n\n  ${msg}\n\n  Idiot.\n\n  `;\n}\n","export function mToAu(meters: number) {\n  // Source: https://en.wikipedia.org/wiki/Astronomical_unit\n  return meters / 149597870700;\n}\n\nexport function auToMeters(aus: number) {\n  return 149597870700 * aus;\n}\n\nexport function dateToCenturiesSinceJ2000(date: Date) {\n  if (true) {\n    //\n    const xxx = date.toLocaleDateString('en-ZA');\n    // const julianDate = JulianUtils.getJulianDate(xxx);\n    // const yyy = JulianUtils.getCenturiesSinceJ2000(julianDate);\n\n    // console.log('julianDate', xxx, yyy);\n\n    // return yyy;\n  } else {\n    //\n    return 0;\n  }\n}\n","/**\n * Function to inject global styles into the document head\n * Make sure to prefix all of your global class names, etc. with\n * something unique to this widget to avoid clashes\n * E.g. sbn-solar-system-viewer-\n */\n\nlet isGlobalStylesSet = false;\n\nexport const addGlobalStyles = () => {\n  // --->>>\n\n  // Only set once\n  if (isGlobalStylesSet) return;\n\n  // Create style element\n  const globalStyle = document.createElement('style');\n  globalStyle.innerHTML = `\n    @keyframes sbn-solar-system-viewer-fade-in {\n      from { opacity: 0; }\n      to   { opacity: 1; }\n    }\n\n    @keyframes sbn-solar-system-viewer-loader-spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    .sbn-solar-system-viewer-input:focus{\n        outline-width: 0;\n    }\n  `;\n\n  document.head.append(globalStyle);\n};\n","import { addGlobalStyles } from './add-global-styles';\n\nexport const loaderDivId = 'sbn-solar-system-loader-div-id';\n\nconst borderWidthPxls = 5;\nconst spinSpeedMs = 2000;\n\n/**\n * Simple loader div; removed by `remove-loader-div`\n * It consists of two divs; the outer 'loaderDiv' that is just a shell\n * for centering the div with the actual animation, and the 'animDiv'\n * that does the spinning, etc.\n */\nexport const appendLoaderDiv = (containerDiv: HTMLElement) => {\n  // --->>>\n\n  // Injects key frames for spin animation\n  addGlobalStyles();\n\n  // Create divs\n  const loaderDiv = document.createElement('div');\n  const animDiv = document.createElement('div');\n  containerDiv.append(loaderDiv);\n  loaderDiv.append(animDiv);\n  // Style loaderDiv\n  loaderDiv.id = loaderDivId;\n  loaderDiv.style.setProperty('position', 'absolute');\n  loaderDiv.style.setProperty('top', '0px');\n  loaderDiv.style.setProperty('left', '0px');\n  loaderDiv.style.setProperty('bottom', '0px');\n  loaderDiv.style.setProperty('right', '0px');\n  loaderDiv.style.setProperty('display', 'flex');\n  loaderDiv.style.setProperty('align-items', 'center');\n  loaderDiv.style.setProperty('justify-content', 'center');\n  // Calc size of radius based on size of container\n  const width = loaderDiv.offsetWidth;\n  const height = loaderDiv.offsetHeight;\n  const shorterLength = width < height ? width : height;\n  // Style animation div\n  animDiv.style.setProperty('width', shorterLength * 0.25 + 'px');\n  animDiv.style.setProperty('height', shorterLength * 0.25 + 'px');\n  animDiv.style.setProperty('border', `${borderWidthPxls}px solid #f3f3f3`);\n  animDiv.style.setProperty('border-top', `${borderWidthPxls}px solid #3498db`);\n  animDiv.style.setProperty('border-radius', '100px');\n  animDiv.style.setProperty(\n    'animation',\n    `sbn-solar-system-viewer-loader-spin ${spinSpeedMs}ms linear infinite`\n  );\n  return loaderDiv;\n};\n","import { loaderDivId } from './get-loader-div';\n\nconst fadeOutTimeMs = 3000;\n\nexport const removeLoaderDiv = () => {\n  // --->>>\n\n  const loaderDiv = document.getElementById(loaderDivId);\n  loaderDiv?.style.setProperty(\n    'transition',\n    `opacity ${fadeOutTimeMs}ms ease-in-out`\n  );\n  loaderDiv?.style.setProperty('opacity', '0');\n  setTimeout(() => {\n    loaderDiv?.style.setProperty('display', 'none');\n  }, fadeOutTimeMs);\n};\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { asciiError } from '../utils/ascii-error';\nimport { auToMeters } from '../utils/conversions';\nimport { getInitDate, initDate, setInitDate } from '../../index';\nimport { appendLoaderDiv } from '../html/get-loader-div';\nimport { removeLoaderDiv } from '../html/remove-loader-div';\nimport { daysPerCentury } from '../data/time-units';\n\n// Initial Camera Params\nconst ar = 2; // Aspect Ratio\nconst fov = 60; // Field of View\nconst near = auToMeters(0.00001); // Near Plane\nconst far = auToMeters(3000); // Far Plane\n\n/**\n * This abstract class is to be inherited by the SceneManager instance.\n * The idea is to place all the usual/boilerplate code for setting up\n * a threeJs scene and running it here, so that the only place you\n * need to implement the specifics of your scene is in your\n * SceneManager instance.\n *\n * By convention, properties/methods that are not intended/expected to be used\n * outside this class are prefixed with '_'\n *\n */\nexport abstract class AbstractSceneManager {\n  // ~~~>>>\n\n  /* Do NOT init OR re-init _controls till scene is set up or they will be erratic */\n  protected _controls!: OrbitControls;\n  protected _scene = new THREE.Scene();\n  protected _renderer?: THREE.WebGLRenderer;\n  protected _canvas = document.createElement('canvas');\n  protected _requestAnimationFrameId: undefined | number;\n  protected _clock = new THREE.Clock(false);\n  protected _initialViewingVector = new THREE.Vector3();\n  protected _isSceneReady = false;\n  protected _isRendering = false;\n  protected _isHelpersShown = false;\n  protected _isInit = false;\n  protected _container!: HTMLElement;\n  protected _fps = 60;\n  protected _camera = new THREE.PerspectiveCamera(fov, ar, near, far);\n  protected _sceneEntities: ISceneEntity[] = [];\n  protected _preInitHook: () => void = () => {};\n  protected _postInitHook: () => void = () => {};\n  protected _destroyHook: () => void = () => {};\n  protected updateCamera: () => void = () => {};\n\n  constructor(protected _containerId: string) {}\n\n  public async init() {\n    // ------>>>\n\n    // Init only once\n    if (!!this._isInit) return;\n    this._isInit = true;\n\n    // Time initialization\n    setInitDate(new Date());\n\n    // Enable superclass constructor to adjust settings prior to initialization sequence\n    this._preInitHook();\n\n    // Get container and add fitting canvas to it\n    this._container = document.getElementById(this._containerId)!;\n    if (!this._container) {\n      throw new Error('No container found with id: ' + this._containerId);\n    }\n\n    this._canvas.style.width = '100%';\n    this._canvas.style.height = '100%';\n    this._container.append(this._canvas);\n    this._container.style.setProperty('position', 'relative');\n    this._container.style.setProperty('background-color', 'black');\n    appendLoaderDiv(this._container);\n\n    // React to resize events on window\n    window.addEventListener('resize', this._updateCameraAspect);\n\n    // Build Renderer\n    const DPR: number = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this._canvas,\n      antialias: true,\n      alpha: true,\n    });\n    this._renderer.setPixelRatio(DPR);\n    this._renderer.sortObjects = false; // This prevents pesky rendering-disruption effect\n    this._renderer.shadowMap.enabled = true;\n    this._renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this._renderer.outputEncoding = THREE.GammaEncoding;\n\n    // Init camera position and orientation\n    this._camera.position.copy(this._initialViewingVector);\n    this._camera.up = new THREE.Vector3(0, 0, 1); // Vector defining up direction of camera\n    this._camera.lookAt(0, 0, 0);\n\n    // Configure orbitControls\n    // ! Don't move this code to earlier position or controls will be screwy\n    // ! Note sure why; treat as brute fact supervening on inscrutable metaphysical states of affair\n    this._controls = new OrbitControls(this._camera, this._renderer.domElement);\n    this._controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n    this._controls.dampingFactor = 0.25;\n    this._controls.target = new THREE.Vector3();\n\n    // Initiate Scene Entities\n    if (!this._sceneEntities.length) {\n      throw new Error(asciiError('You have no scene entities!'));\n    }\n    const initiatedSceneEntityGroups = await Promise.all(\n      this._sceneEntities.map(async sceneEntity => {\n        const initiatedSceneEntityGroup: THREE.Group = await sceneEntity.init();\n        if (\n          !initiatedSceneEntityGroup ||\n          !initiatedSceneEntityGroup.children.length\n        )\n          throw new Error(\n            asciiError(`\n            -----------------------------------------------------------------------------\n            The scene entity \"${sceneEntity.constructor.name}\" has empty sceneEntityGroup\n            after initialization!!!\n            -----------------------------------------------------------------------------\n            `)\n          );\n        return initiatedSceneEntityGroup;\n      })\n    )\n      .then(\n        _ =>\n          new Promise<THREE.Group[]>(resolve =>\n            setTimeout(() => resolve(_), 100)\n          )\n      )\n      .then(_ => _);\n    initiatedSceneEntityGroups.forEach(group => this._scene.add(group));\n\n    // Run updater methods\n    this.setHelpersVisibility(false);\n    this._updateCameraAspect();\n\n    // Begin Animation\n    this._startRendering();\n\n    // Enable superclass constructor to adjust settings after to initialization sequence\n    this._postInitHook();\n\n    // Remove loader div\n    removeLoaderDiv();\n\n    //\n    const dt = +new Date() - +getInitDate();\n    console.log('Finished initiating', dt);\n  }\n\n  protected registerSceneEntities = (sceneEntities: ISceneEntity[]) => {\n    sceneEntities.forEach(el => this._sceneEntities.push(el));\n  };\n\n  /**\n   * This method lets you show/hide the objects within in your scene\n   * designated as 'helpers'. It relies on the practice of setting the property `userData.isHelper = true`\n   * on any object you want to be classified as a helper\n   */\n  public setHelpersVisibility = (isHelpersShown: boolean) => {\n    this._isHelpersShown = !!isHelpersShown;\n    this._scene.traverse(child => {\n      return child.userData.isHelper && (child.visible = this._isHelpersShown);\n    });\n  };\n\n  public toggleHelpersVisibility = () => {\n    this._isHelpersShown = !this._isHelpersShown;\n    this.setHelpersVisibility(this._isHelpersShown);\n  };\n\n  public setFramesPerSecond(newFps: number) {\n    if (newFps <= 0 || newFps > 100) return;\n    this._fps = newFps;\n  }\n\n  private _updateCameraAspect = () => {\n    // Not sure where/how, but canvas' style width/height\n    // gets altered and needs to be reset to 100%\n    this._canvas.style.width = '100%';\n    this._canvas.style.height = '100%';\n    const width = this._canvas.offsetWidth || 1;\n    const height = this._canvas.offsetHeight || 1;\n    this._camera.aspect = width / height;\n    this._camera.updateProjectionMatrix();\n    this._renderer!.setSize(width, height);\n  };\n\n  public destroy: () => void = () => {\n    window.removeEventListener('resize', this._updateCameraAspect);\n    this._stopRendering();\n    this._destroyHook();\n  };\n\n  private _update() {\n    // Loop through scene entities and trigger their update methods\n    // If they need 'universal' time, they can access this._clock, etc.\n    this._sceneEntities.forEach(el =>\n      el.update(this._camera, this._clock.elapsedTime)\n    );\n\n    // Update camera\n    this.updateCamera();\n\n    // Finish loop\n    if (!this._camera || !this._renderer) throw new Error('Poor Logic');\n    if (!!this._requestAnimationFrameId) {\n      this._renderer.render(this._scene, this._camera);\n    }\n  }\n\n  private _render = () => {\n    if (!this._isRendering) return;\n    setTimeout(() => {\n      this._requestAnimationFrameId = requestAnimationFrame(this._render);\n      this._update();\n    }, 1000 / this._fps);\n  };\n\n  private _startRendering = () => {\n    console.log('Starting animation...');\n    this._isRendering = true;\n    this._clock.start();\n    this._render();\n  };\n\n  private _stopRendering = () => {\n    console.log('Stopping animation...');\n    this._isRendering = false;\n    this._clock.stop();\n  };\n}\n","/**\n * Constants for widget\n */\n\n/**\n * Properties common to all html buttons\n */\nexport const buttonBackgroundColor = 'rgba(255,255,255,0.2)';\nexport const buttonClickedBackgroundColor = 'rgba(255,255,255,0.4)';\nexport const buttonTextColor = 'rgba(255,255,255,0.8)';\nexport const buttonCursorType = 'pointer';\nexport const buttonPadding = '10px';\nexport const buttonFadeInSpecs = '1s ease-in-out';\n\n// These two properties must be coordinated together using e.g. google.fonts\nexport const buttonFontFamily = \"'Odibee Sans', cursive\";\nexport const buttonCssUrl =\n  'https://fonts.googleapis.com/css2?family=Odibee+Sans';\n\n/**\n * Root url of file server with copy of /images\n */\nexport const imageBaseUrl = `https://sbn-solar-system-viewer.s3.amazonaws.com`;\n","import {\n  buttonBackgroundColor,\n  buttonClickedBackgroundColor,\n  buttonFontFamily,\n  buttonTextColor,\n  buttonPadding,\n  buttonCursorType,\n  buttonCssUrl,\n  buttonFadeInSpecs,\n} from '../utils/constants';\nimport { addGlobalStyles } from './add-global-styles';\n\n/**\n * Function to mutate buttons by injecting them with properties\n * common to all html buttons; append to container when ready\n */\nexport const injectCommonButtonProperties = (\n  button: HTMLElement,\n  container: HTMLElement,\n  onClickCB: () => void\n) => {\n  // --->>>\n\n  // Add to global styles\n  addGlobalStyles();\n\n  // Start loading the remote fonts style sheet; mutate button on completion\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.onload = () => {\n    // console.log('Loaded css url for fonts');\n    mutateButton();\n  };\n  link.onerror = () => {\n    console.log('Failed to load css url for fonts; continuing anyway...');\n    mutateButton();\n  };\n  link.href = buttonCssUrl;\n  document.head.append(link);\n\n  // Callback to mutate button\n  function mutateButton() {\n    // Positioning\n    button.style.position = 'absolute';\n    button.style.setProperty('padding', buttonPadding);\n\n    // Colors\n    button.style.setProperty('color', buttonTextColor);\n    button.style.setProperty('background-color', buttonBackgroundColor);\n\n    // Font stuff\n    button.style.setProperty('font-family', buttonFontFamily);\n    button.style.setProperty('font-size', '20px');\n\n    // Setup fade-in effect\n    button.style.setProperty(\n      'animation',\n      `sbn-solar-system-viewer-fade-in ${buttonFadeInSpecs}`\n    );\n\n    // Cursor behavior\n    // Prevent text in button from being selectable\n    // See here: https://stackoverflow.com/a/4407335/8620332\n    button.style.setProperty('cursor', buttonCursorType);\n    button.style.setProperty('-webkit-touch-callout', 'none');\n    button.style.setProperty('-webkit-user-select', 'none');\n    button.style.setProperty('-khtml-user-select', 'none');\n    button.style.setProperty('-moz-user-select', 'none');\n    button.style.setProperty('-ms-user-select', 'none');\n    button.style.setProperty('user-select', 'none');\n\n    // Properties related to click effect\n    button.style.setProperty('transition', 'background-color 50ms ease-in-out');\n    button.addEventListener('click', function() {\n      button.style.setProperty(\n        'background-color',\n        buttonClickedBackgroundColor\n      );\n      setTimeout(() => {\n        button.style.setProperty('background-color', buttonBackgroundColor);\n        onClickCB();\n      }, 200);\n    });\n\n    // Make visible\n    container.append(button);\n  }\n};\n","import * as THREE from 'three';\n\n// Artificial delay to simulate poor networks, etc.\n// Can also be used to buffer planet load\nexport const delayMs = 5;\n\nexport const getTextureFromImageUrl = (\n  url: string,\n  name?: string\n): Promise<THREE.Texture> => {\n  return new Promise((resolve, reject) => {\n    new THREE.TextureLoader().load(\n      url,\n      texture => {\n        texture.encoding = THREE.GammaEncoding;\n        setTimeout(() => resolve(texture), delayMs);\n      },\n      xhr => console.log(`${name} ${(xhr.loaded / xhr.total) * 100}%`),\n      () => {\n        console.log('Failed to load: ', url);\n        reject(new Error('Failed to load: ' + url));\n      }\n    );\n  });\n};\n","export const solarSystemData = {\n  SUN: {\n    radiusMeters: 696342000,\n    periodDays: undefined,\n  },\n  MERCURY: {\n    radiusMeters: 2439700,\n    periodDays: 87.9691,\n  },\n  VENUS: {\n    radiusMeters: 6051800,\n    periodDays: 224.701,\n  },\n  EARTH: {\n    radiusMeters: 6378000,\n    periodDays: 365.256,\n  },\n  MARS: {\n    radiusMeters: 3389500,\n    periodDays: 686.971,\n  },\n  CERES: {\n    radiusMeters: 470000,\n    periodDays: 1683.14570801,\n  },\n  JUPITER: {\n    radiusMeters: 71492000,\n    periodDays: 4332.59,\n  },\n  SATURN: {\n    radiusMeters: 60268000,\n    periodDays: 10759.22,\n  },\n  URANUS: {\n    radiusMeters: 25362000,\n    periodDays: 30688.5,\n  },\n  NEPTUNE: {\n    radiusMeters: 24764000,\n    periodDays: 60182,\n  },\n  PLUTO: {\n    radiusMeters: 1188300,\n    periodDays: 90560,\n  },\n  HAUMEA: {\n    radiusMeters: 620_000,\n    periodDays: 103_410,\n  },\n  MAKEMAKE: {\n    radiusMeters: 720_000,\n    periodDays: 111_845,\n  },\n  ERIS: {\n    radiusMeters: 1_163_000,\n    periodDays: 204_199,\n  },\n  // Moons\n  MOON: {\n    radiusMeters: 350000,\n    periodDays: 29.5,\n  },\n};\n","import * as THREE from 'three';\nimport { getOptions } from '../../options';\n\n/**\n * Base class that any entity must extend in order that its threeJs group\n * might get added to the threeJs scene owned by the manager\n */\nexport abstract class AbstractSceneEntity {\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>>>\n\n  private static _isAsyncLoad = getOptions().isAsyncLoad;\n  protected _isAsyncLoad = () => AbstractSceneEntity._isAsyncLoad;\n\n  protected _sceneEntityGroup: THREE.Group = new THREE.Group();\n  public getSceneEntityGroup = () => this._sceneEntityGroup;\n}\n","export enum EOrbitalType {\n  PLANET = 'PLANET',\n  DWARF_PLANET = 'DWARF_PLANET',\n  SUN = 'SUN',\n  ASTEROID = 'ASTEROID',\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from './abstract-scene-entity';\n\n/**\n * Base class for space object that can be toggled between\n * 'real' and 'toy' scales\n */\nexport abstract class AbstractToyModel extends AbstractSceneEntity {\n  // ~~~>>>\n\n  // Setup\n  protected _toyModel?: THREE.Object3D;\n  protected _realScale = 1;\n  protected _isZoomToToyScale = false;\n\n  constructor(protected _toyScale: number) {\n    super();\n  }\n\n  public setIsZoomToToyScale(value: boolean) {\n    // Note: once set, an animated transition to the new scale will take place within the update loop\n    this._isZoomToToyScale = value;\n  }\n\n  public getScale() {\n    return this._isZoomToToyScale ? this._toyScale : this._realScale;\n  }\n\n  protected _setToToyScale() {\n    if (!this._toyModel) return;\n    // Update scale instantly (rather than depending on animated transition)\n    this._isZoomToToyScale = true;\n    const t = this._toyScale; // 't' for 'target'\n    this._toyModel.scale.set(t, t, t);\n  }\n\n  protected _updateModelScale() {\n    if (!this._toyModel) return;\n    // Test if planet is already at target scale\n    const t = this._isZoomToToyScale ? this._toyScale : this._realScale; // 't' for 'target'\n    const { x: sx, y: sy, z: sz } = this._toyModel.scale;\n    if (sx === t) return;\n\n    // Update-mesh-scale logic\n    const ds = this._toyScale / 100;\n    if (sx < t) {\n      // Increase deficient scale\n      this._toyModel.scale.set(sx + ds, sy + ds, sz + ds);\n    }\n    if (sx > t) {\n      // Decrease excessive scale\n      this._toyModel.scale.set(sx - ds, sy - ds, sz - ds);\n    }\n    if (Math.abs(sx - t) < ds) {\n      // Snap scale to target\n      this._toyModel.scale.set(t, t, t);\n    }\n  }\n}\n","import * as THREE from 'three';\n\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { solarSystemData } from '../data/basic-solar-system-data';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { imageBaseUrl } from '../utils/constants';\nimport { getInitDate } from '../..';\nimport { IZoomable } from '../models/IZoomable';\n\n/**\n * When a sprite is loaded it is given a size of '1'\n * So it needs to be scaled, in this case, to the size of the Sun\n * Further, the Sun only takes up a fraction of this image, so we need this factor\n * to scale the image further\n */\nconst realToToyRatio = 30;\nconst imageToSunRatio = 20;\n\nexport class Sun extends AbstractToyModel implements IZoomable {\n  // ~~~>>>\n\n  public readonly NAME = 'SUN';\n  private readonly position = new THREE.Vector3(0, 0, 0);\n  private readonly sunRadiusMeters = solarSystemData.SUN.radiusMeters;\n  private model = new THREE.Group();\n  private helper: THREE.LineSegments;\n  private sprite = new THREE.Sprite(\n    new THREE.SpriteMaterial({\n      blending: THREE.AdditiveBlending,\n      transparent: true,\n      visible: false,\n    })\n  );\n\n  constructor() {\n    super(realToToyRatio);\n\n    // Set up sun sprite size\n    this.sprite.scale.multiplyScalar(this.sunRadiusMeters * imageToSunRatio);\n    this.model.add(this.sprite);\n\n    // Set up helper\n    this.helper = new THREE.LineSegments(\n      new THREE.EdgesGeometry(\n        new THREE.SphereGeometry(this.sunRadiusMeters, 32)\n      ),\n      new THREE.LineBasicMaterial({ color: new THREE.Color('cyan') })\n    );\n    this.helper.userData.isHelper = true;\n    this.helper.rotateX(Math.PI / 2);\n    this.model.add(this.helper);\n  }\n\n  getRadius = () => this.sunRadiusMeters;\n\n  getPosition = () => this.position;\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      const spriteUrl = `${imageBaseUrl}/stars/sun3-sprite-512.png`;\n      const onTextureLoad = (texture: THREE.Texture | null) => {\n        this.sprite.material.map = texture;\n        this.sprite.material.needsUpdate = true;\n        this.sprite.material.visible = true;\n      };\n\n      if (this._isAsyncLoad()) {\n        getTextureFromImageUrl(spriteUrl, 'SUN SPRITE IMAGE')\n          .then(onTextureLoad)\n          .catch(_ => null);\n      } else {\n        onTextureLoad(await getTextureFromImageUrl(spriteUrl).catch(_ => null));\n      }\n\n      this._toyModel = this.model;\n      this._sceneEntityGroup.name = this.NAME;\n      this._sceneEntityGroup.add(this.model);\n      console.log('Sun resolved', +new Date() - +getInitDate());\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  update() {\n    this._updateModelScale();\n  }\n}\n","import { solarSystemData } from '../data/basic-solar-system-data';\nimport { TPlanets } from '../models/TPlanets';\n\nexport function getPlanetRadiusMeters(name: TPlanets): number {\n  // --->>>\n\n  return solarSystemData[name].radiusMeters;\n}\n","import * as THREE from 'three';\nimport { GLTFLoader as Loader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport { centerOnBoundingBox } from './center-on-bounding-box';\nimport { enshadowChildren } from './enshadow-children';\nimport { delayMs } from './get-texture-from-image-url';\nimport { resizeThreejsObject } from './resize-threejs-object';\n\nexport function gltfLoader(\n  gltfUrl: string,\n  targetRadius?: number,\n  isCenteredOnBoundingBox?: boolean,\n  isShadowShown?: boolean\n) {\n  // ----------------->>>\n\n  return new Promise<THREE.Group>((resolve, reject) => {\n    new Loader().load(\n      gltfUrl,\n      gltf => {\n        const object = gltf.scene;\n        if (!!targetRadius) resizeThreejsObject(object, targetRadius);\n        if (!!isCenteredOnBoundingBox) centerOnBoundingBox(object);\n        if (!!isShadowShown) enshadowChildren(object);\n        setTimeout(() => resolve(object), delayMs);\n      },\n      xhr => !true && console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n      error => {\n        console.log('Loading error occurred:', error.message);\n        reject();\n      }\n    );\n  });\n}\n","import * as THREE from 'three';\n\n/**\n * Function to scale an object so that the child with the largest bounding-sphere radius\n * will end up with a bounding sphere radius equal to the supplied targetRadius\n */\nexport function resizeThreejsObject(\n  object: THREE.Object3D,\n  targetRadius: number\n) {\n  // --------------------------------------------------------------------------->>>\n\n  let biggestSphereRadius: number = Math.pow(10, -10);\n  object.traverse(child => {\n    if (child instanceof THREE.Mesh) {\n      child.geometry.computeBoundingSphere(); // Need to run this, else `child.geometry.boundingSphere.radius` will be undefined\n      if (\n        !!child.geometry &&\n        !!child.geometry.boundingSphere &&\n        child.geometry.boundingSphere.radius > biggestSphereRadius\n      ) {\n        biggestSphereRadius = child.geometry.boundingSphere.radius;\n      }\n    }\n  });\n  const s = targetRadius / biggestSphereRadius;\n  object.scale.set(s, s, s);\n}\n","import * as THREE from 'three';\n\n/**\n * Function to center object on its bounding box\n *\n * An object created in blender may not have its origin at the object's\n * physical center, and this can be annoying when, say, you want to rotate\n * that object. This function will shift the object relative to its parent\n * coordinate system so that its center is at the parent's origin; that means\n * you can then e.g. rotate the parent to get a realistic/useful rotation effect\n * on this object\n */\nexport function centerOnBoundingBox(object: THREE.Object3D) {\n  // ----------------------------------------------------->>>\n\n  // Get center of boundingBox\n  const boundingBox = new THREE.Box3().setFromObject(object);\n  const [x2, y2, z2] = boundingBox.getCenter(new THREE.Vector3()).toArray();\n\n  // Move object to where center was\n  const [x1, y1, z1] = object.position.clone().toArray();\n  object.position.set(x1 - x2, y1 - y2, z1 - z2);\n}\n","/**\n * Simple function to ensure all children receive and cast shadows\n */\nexport function enshadowChildren(object: THREE.Object3D) {\n  object.traverse(child => {\n    if (child.type === 'Mesh') {\n      child.castShadow = true;\n      child.receiveShadow = true;\n    }\n  });\n}\n","const METERS_IN_AU = 149597870700;\nconst SECONDS_IN_DAY = 86400;\n\nconst EPHEM_VALID_ATTRS_ARR = [\n  'a', // Semi-major axis\n  'e', // Eccentricity\n  'i', // Inclination\n  'q', // Perihelion distance\n\n  'epoch',\n  'period', // in days\n  'tp', // time of perihelion\n\n  'ma', // Mean anomaly\n  'n', // Mean motion\n  'L', // Mean longitude\n\n  'om', // Longitude of Ascending Node\n  'w', // Argument of Perihelion = Longitude of Perihelion - Longitude of Ascending Node\n  'wBar', // Longitude of Perihelion = Longitude of Ascending Node + Argument of Perihelion\n\n  'GM', // Gravitational constant of more massive body\n] as const;\n\ntype TEphemValidAttrs = typeof EPHEM_VALID_ATTRS_ARR[number];\n\nconst EPHEM_VALID_ATTRS = new Set(EPHEM_VALID_ATTRS_ARR);\n\n// Which of these are angular measurements.\nconst ANGLE_UNITS = new Set(['i', 'ma', 'n', 'L', 'om', 'w', 'wBar']);\n\n// Returns true if object is defined.\nfunction isDef(obj: any) {\n  return typeof obj !== 'undefined';\n}\n\ntype TInitialValues = { [k in TEphemValidAttrs]: number };\n\n/**\n * A class representing Kepler ephemerides.\n * @example\n * const NEPTUNE = new Ephem({\n *   epoch: 2458426.500000000,\n *   a: 3.009622263428050E+01,\n *   e: 7.362571187193770E-03,\n *   i: 1.774569249829094E+00,\n *   om: 1.318695882492132E+02,\n *   w: 2.586226409499831E+02,\n *   ma: 3.152804988924479E+02,\n * }, 'deg'),\n */\nexport class SKEphem {\n  // ~~~>>>\n\n  /**\n   * Defaults to GM.SUN.  @see {GM}\n   * @param {'deg'|'rad'} units The unit of angles in the list of initial values.\n   */\n\n  _attrs: Partial<TInitialValues>;\n  _locked = false;\n  actualUnits?: string;\n\n  // a?: number; // Semimajor axis\n  // e?: number; // Eccentricity\n  // i?: number; // Inclination\n  // epoch?: number; // Epoch in JD\n  // period?: number; // Period in days\n  // ma?: number; // Mean anomaly\n  // n?: number; // Mean motion\n  // L?: number; // Mean longitude\n  // om?: number; // Longitude of Ascending Node\n  // w?: number; // Argument of Perihelion\n  // wBar?: number; // Longitude of Perihelion\n  // GM?: number; // Standard gravitational parameter in km^3/s^2.\n\n  constructor(\n    initialValues: Partial<TInitialValues>,\n    units = 'rad',\n    locked = false\n  ) {\n    this._attrs = { ...initialValues };\n    this._locked = false;\n\n    // let attr: keyof TInitialValues;\n    // for (attr in initialValues) {\n    //   if (!!initialValues[attr]) {\n    //     const actualUnits = ANGLE_UNITS.has(attr) ? units : undefined;\n    //     const x = initialValues[attr];\n    //     if (x) this.set(attr, x, actualUnits);\n    //   }\n    // }\n\n    if (!!initialValues) {\n      Object.keys(initialValues).forEach((key: any) => {\n        const actualUnits = ANGLE_UNITS.has(key) ? units : undefined;\n        const val = (initialValues as any)[key];\n        if (val) this.set(key, val, actualUnits);\n      });\n    }\n\n    if (typeof this._attrs.GM === 'undefined') {\n      this._attrs.GM = GM.SUN;\n    }\n    this.fill();\n\n    if (this.get('e') > 0.9 && typeof this.get('tp') === 'undefined') {\n      console.warn(\n        'You must specify \"tp\" (time of perihelion) for highly eccentric orbits'\n      );\n    }\n\n    this._locked = locked;\n  }\n\n  /**\n   * Sets an ephemerides attribute.\n   * @param {String} attr The name of the attribute (e.g. 'a')\n   * @param {Number} val The value of the attribute (e.g. 0.5)\n   * @param {'deg'|'rad'} units The unit of angle provided, if applicable.\n   */\n  set(attr: TEphemValidAttrs, val: number, units = 'rad') {\n    if (this._locked) {\n      throw new Error('Attempted to modify locked (immutable) Ephem object');\n    }\n\n    if (!EPHEM_VALID_ATTRS.has(attr)) {\n      console.warn(`Invalid ephem attr: ${attr}`);\n      return false;\n    }\n\n    // Store everything in radians.\n    if (units === 'deg') {\n      this._attrs[attr] = (val * Math.PI) / 180;\n    } else {\n      this._attrs[attr] = val;\n    }\n    return true;\n  }\n\n  /**\n   * Gets an ephemerides attribute.\n   * @param {String} attr The name of the attribute (e.g. 'a')\n   * @param {'deg'|'rad'} units The unit of angle desired, if applicable. This\n   * input is ignored for values that are not angle measurements.\n   */\n  get(attr: TEphemValidAttrs, units = 'rad') {\n    // --->>>\n\n    const val = this._attrs[attr]!;\n    // if (!val && units !== 'deg') throw new Error('Poor logic to allow non angle attr here');\n\n    return units === 'deg' ? (val * 180) / Math.PI : val;\n  }\n\n  /**\n   * @private\n   * Infers values of some ephemerides attributes if the required information\n   * is available.\n   */\n  fill() {\n    // Perihelion distance and semimajor axis\n    const e = this.get('e');\n    if (!isDef(e)) {\n      throw new Error('Must define eccentricity \"e\" in an orbit');\n    }\n\n    // Semimajor axis and perihelion distance\n    let a = this.get('a');\n    let q = this.get('q');\n    if (isDef(a)) {\n      if (!isDef(q)) {\n        if (e >= 1.0) {\n          throw new Error(\n            'Must provide perihelion distance \"q\" if eccentricity \"e\" is greater than 1'\n          );\n        }\n        q = a * (1.0 - e);\n        this.set('q', q);\n      }\n    } else if (isDef(q)) {\n      a = q / (1.0 - e);\n      this.set('a', a);\n    } else {\n      throw new Error(\n        'Must define semimajor axis \"a\" or perihelion distance \"q\" in an orbit'\n      );\n    }\n\n    // Longitude/Argument of Perihelion and Long. of Ascending Node\n    let w = this.get('w');\n    let wBar = this.get('wBar');\n    let om = this.get('om');\n    if (isDef(w) && isDef(om) && !isDef(wBar)) {\n      wBar = w + om;\n      this.set('wBar', wBar);\n    } else if (isDef(wBar) && isDef(om) && !isDef(w)) {\n      w = wBar - om;\n      this.set('w', w);\n    } else if (isDef(w) && isDef(wBar) && !isDef(om)) {\n      om = wBar - w;\n      this.set('om', om);\n    }\n\n    // Mean motion and period\n    const aMeters = a * METERS_IN_AU;\n    const n = this.get('n');\n    const GM = this.get('GM');\n    let period = this.get('period');\n\n    if (!isDef(period) && isDef(a)) {\n      period =\n        (2 * Math.PI * Math.sqrt((aMeters * aMeters * aMeters) / GM)) /\n        SECONDS_IN_DAY;\n      this.set('period', period);\n    }\n\n    if (e < 1.0) {\n      // Only work with mean motion for elliptical orbits.\n      if (isDef(period) && !isDef(n)) {\n        // Set radians\n        const newN = (2.0 * Math.PI) / period;\n        this.set('n', newN);\n      } else if (isDef(n) && !isDef(period)) {\n        this.set('period', (2.0 * Math.PI) / n);\n      }\n    }\n\n    // Mean longitude\n    const ma = this.get('ma');\n    let L = this.get('L');\n    if (!isDef(L) && isDef(om) && isDef(w) && isDef(ma)) {\n      L = om + w + ma;\n      this.set('L', L);\n    }\n\n    // Mean anomaly\n    if (!isDef(ma)) {\n      // MA = Mean longitude - Longitude of perihelion\n      this.set('ma', L - wBar);\n    }\n\n    //  TODO(ian): Handle no om\n  }\n\n  /**\n   * Make this ephem object immutable.\n   */\n  lock() {\n    this._locked = true;\n  }\n\n  copy() {\n    return new SKEphem(\n      {\n        GM: this.get('GM'),\n        epoch: this.get('epoch'),\n        a: this.get('a'),\n        e: this.get('e'),\n        i: this.get('i'),\n        om: this.get('om'),\n        ma: this.get('ma'),\n        w: this.get('w'),\n      },\n      'rad'\n    );\n  }\n}\n\n/**\n * Standard gravitational parameter for objects orbiting these bodies.\n * Units in m^3/s^2\n */\nexport const GM = {\n  // See https://space.stackexchange.com/questions/22948/where-to-find-the-best-values-for-standard-gravitational-parameters-of-solar-sys and https://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/gm_de431.tpc\n  SUN: 1.3271244004193938e20,\n  MERCURY: 2.2031780000000021e13,\n  VENUS: 3.2485859200000006e14,\n  EARTH_MOON: 4.0350323550225981e14,\n  MARS: 4.2828375214000022e13,\n  JUPITER: 1.2671276480000021e17,\n  SATURN: 3.7940585200000003e16,\n  URANUS: 5.794548600000008e15,\n  NEPTUNE: 6.8365271005800236e15,\n  PLUTO_CHARON: 9.7700000000000068e11,\n};\n","import { SKEphem } from '../utils/sk-ephem';\n\n/**\n * A dictionary containing ephemerides of planets and other well-known objects.\n * @example\n * const planet1 = viz.createObject('planet1', {\n *   ephem: EphemPresets.MERCURY,\n * });\n */\nexport const EphemPresets = {\n  // See https://ssd.jpl.nasa.gov/?planet_pos and https://ssd.jpl.nasa.gov/txt/p_elem_t1.txt\n  MERCURY: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 3.870968969437096e-1,\n      e: 2.056515875393916e-1,\n      i: 7.003891682749818,\n      om: 4.830774804443502e1,\n      w: 2.917940253442659e1,\n      ma: 2.56190975209273e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  VENUS: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 7.233458663591554e-1,\n      e: 6.762510759617694e-3,\n      i: 3.394567787211735,\n      om: 7.662534150657346e1,\n      w: 5.474567447560867e1,\n      ma: 2.756687596099721e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  EARTH: new SKEphem(\n    {\n      // Taken from https://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html\n      /*\n    epoch: 2451545.0,\n    a: 1.00000011,\n    e: 0.01671022,\n    i: 0.00005,\n    om: -11.26064,\n    wBar: 102.94719,\n    L: 100.46435,\n    */\n\n      // https://ssd.jpl.nasa.gov/txt/p_elem_t1.txt\n      epoch: 2451545.0,\n      a: 1.00000261,\n      e: 0.01671123,\n      i: -0.00001531,\n      om: 0.0,\n      wBar: 102.93768193,\n      L: 100.46457166,\n\n      /*\n      epoch: 2458426.500000000,\n      a: 1.000618919441359E+00,\n      e: 1.676780871638673E-02,\n      i: 0,\n      om: 1.888900932218542E+02,\n      w: 2.718307282052625E+02,\n      ma: 3.021792498388233E+02,\n     */\n    },\n    'deg',\n    true /* locked */\n  ),\n  MOON: new SKEphem(\n    {\n      // https://nssdc.gsfc.nasa.gov/planetary/factsheet/moonfact.html\n      GM: 0.3986e6,\n\n      // Geocentric\n      // https://ssd.jpl.nasa.gov/horizons.cgi#results\n      epoch: 2458621.5,\n      a: 2.582517063772124e-3,\n      e: 4.582543645168888e-2,\n      i: 5.102060246928811,\n      om: 1.085916732144811e2,\n      w: 6.180561793729225e1,\n      ma: 5.053270083636792e1,\n      /*\n     * heliocentric\n    epoch: 2458621.500000000,\n    a: 1.078855621785179E+00,\n    e: 6.333300212090676E-02,\n    i: 7.211217382317713E-02,\n    om: 6.722057157026397E+01,\n    w: 1.503642883585293E+02,\n    ma: 1.666758688084831E+01,\n   */\n    },\n    'deg',\n    true /* locked */\n  ),\n  MARS: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 1.52371401537107,\n      e: 9.336741335309606e-2,\n      i: 1.848141099825311,\n      om: 4.950420572080223e1,\n      w: 2.866965847685386e2,\n      ma: 2.538237617924876e1,\n    },\n    'deg',\n    true /* locked */\n  ),\n  ///\n  CERES: new SKEphem(\n    {\n      // Sources:\n      // https://www.princeton.edu/~willman/planetary_systems/Sol/Ceres/\n      // https://en.wikipedia.org/wiki/Ceres_(dwarf_planet)\n      epoch: 2458600.5,\n      a: 2.7658,\n      e: 0.078,\n      i: 10.607,\n      om: 80.7,\n      w: 73.1,\n      ma: 77.37209589,\n    },\n    'deg',\n    true /* locked */\n  ),\n  ///\n  JUPITER: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 5.20180355911023,\n      e: 4.89912558249006e-2,\n      i: 1.303560894624275,\n      om: 1.005203828847816e2,\n      w: 2.73736301845404e2,\n      ma: 2.31939544389401e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  SATURN: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 9.577177295536776,\n      e: 5.101889921719987e-2,\n      i: 2.482782449972317,\n      om: 1.136154964073247e2,\n      w: 3.394422648650336e2,\n      ma: 1.870970898012944e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  URANUS: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 1.914496966635462e1,\n      e: 4.832662948112808e-2,\n      i: 7.697511134483724e-1,\n      om: 7.414239045667875e1,\n      w: 9.942704504702185e1,\n      ma: 2.202603033874267e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  NEPTUNE: new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 3.00962226342805e1,\n      e: 7.36257118719377e-3,\n      i: 1.774569249829094,\n      om: 1.318695882492132e2,\n      w: 2.586226409499831e2,\n      ma: 3.152804988924479e2,\n    },\n    'deg',\n    true /* locked */\n  ),\n  PLUTO: new SKEphem(\n    {\n      epoch: 2454000.5,\n      a: 39.4450697257,\n      e: 0.250248713478,\n      i: 17.0890009196,\n      om: 110.376957955,\n      w: 112.597141677,\n      ma: 25.2471897122,\n    },\n    'deg',\n    true /* locked */\n  ),\n  HAUMEA: new SKEphem(\n    {\n      epoch: 2459200.5,\n      a: 43.116,\n      e: 0.19642,\n      i: 28.2137,\n      om: 122.167,\n      w: 239.041,\n      ma: 218.205,\n    },\n    'deg',\n    true /* locked */\n  ),\n  MAKEMAKE: new SKEphem(\n    {\n      epoch: 2458900.5,\n      a: 45.43,\n      e: 0.16126,\n      i: 28.9835,\n      om: 79.62,\n      w: 294.834,\n      ma: 165.514,\n    },\n    'deg',\n    true /* locked */\n  ),\n  ERIS: new SKEphem(\n    {\n      epoch: 2459000.5,\n      a: 67.864,\n      e: 0.43607,\n      i: 44.04,\n      om: 35.951,\n      w: 151.639,\n      ma: 205.989,\n    },\n    'deg',\n    true /* locked */\n  ),\n};\n\n// a?: number; // Semimajor axis\n// e?: number; // Eccentricity\n// i?: number; // Inclination\n// epoch?: number; // Epoch in JD\n// period?: number; // Period in days\n// ma?: number; // Mean anomaly\n// n?: number; // Mean motion\n// L?: number; // Mean longitude\n// om?: number; // Longitude of Ascending Node ===> \"Node\" in MPC asteroids\n// w?: number; // Argument of Perihelion ===> \"Peri\" in MPC asteroids\n// wBar?: number; // Longitude of Perihelion\n// GM?: number; // Standard gravitational parameter in km^3/s^2.\n","let scaleFactor = 1.0;\n\n/**\n * Set the number of units per AU.\n */\nexport function setScaleFactor(val: number) {\n  scaleFactor = val;\n}\n\n/**\n * Get the number of units per AU.\n */\nexport function getScaleFactor() {\n  return scaleFactor;\n}\n\nexport function rescalePos(pos: { x: number; y: number; z: number }) {\n  pos.x *= scaleFactor;\n  pos.y *= scaleFactor;\n  pos.z *= scaleFactor;\n  return pos;\n}\n\nexport function rescaleArray(XYZ: number[]) {\n  return [XYZ[0] * scaleFactor, XYZ[1] * scaleFactor, XYZ[2] * scaleFactor];\n}\n\nexport function rescaleXYZ(X: number, Y: number, Z: number) {\n  return [X * scaleFactor, Y * scaleFactor, Z * scaleFactor];\n}\n\nexport function rescaleVector(vec: THREE.Vector3) {\n  return vec.multiplyScalar(scaleFactor);\n}\n\nexport function rescaleNumber(x: number) {\n  return scaleFactor * x;\n}\n\nexport function rescale(...args: any[]) {\n  if (Array.isArray(args[0])) {\n    return rescaleArray(args[0]);\n  }\n  if (typeof args[0] === 'number') {\n    if (args.length === 3) {\n      // @ts-ignore\n      return rescaleXYZ(...args);\n    }\n    return rescaleNumber(args[0]);\n  }\n  return rescalePos(args[0]);\n}\n","/**\n * Interpolates the given 2D array of data using a Lagrange Polynomial interpolation. User specifies first/last row\n * versus giving a number of sample points and a starting index. For best performance number of points generally would\n * be between 1 (linear) and 7\n *\n * @param {Array} data array\n * @param {Number} xValue value of x to evaluate for function y = f(x) represented by the data\n * @param {Number} sampleRowMin first row of data to use for the interpolation\n * @param {Number} sampleRowMax last row of data to use for the interpolation\n * @param {Number} xIndex the column of data which represents the 'x' variable of y = f(x)\n * @param {Number} yIndex the column of data which represents the 'y' curve data of y = f(x)\n * @returns {Number} the interpolated value of the function f(x) from the data\n */\nexport function interpolate(\n  data: any[],\n  xValue: number,\n  sampleRowMin: number,\n  sampleRowMax: number,\n  xIndex: number,\n  yIndex: number\n) {\n  if (data === undefined) {\n    throw 'data object is undefined';\n  }\n\n  if (!Array.isArray(data)) {\n    throw 'data object must be an array';\n  }\n\n  if (sampleRowMin >= sampleRowMax) {\n    throw 'first row must be greater than last row';\n  }\n\n  if (sampleRowMin < 0) {\n    throw 'first row must be greater than zero';\n  }\n\n  if (sampleRowMax > data.length - 1) {\n    throw 'last row must be ';\n  }\n\n  if (!Array.isArray(data[sampleRowMin])) {\n    throw 'data in rows must be array data';\n  }\n\n  const maxColumn = data[0].length - 1;\n  if (xIndex < 0 || xIndex > maxColumn) {\n    throw `xIndex has to be between 0 and ${maxColumn}: ${xIndex}`;\n  }\n\n  if (yIndex < 0 || yIndex > maxColumn) {\n    throw `yIndex has to be between 0 and ${maxColumn}: ${yIndex}`;\n  }\n\n  let sum = 0;\n  for (let j = sampleRowMin; j <= sampleRowMax; j++) {\n    let prod = 1;\n    for (let k = sampleRowMin; k <= sampleRowMax; k++) {\n      if (k === j) {\n        continue;\n      }\n      prod *= (xValue - data[k][xIndex]) / (data[j][xIndex] - data[k][xIndex]);\n    }\n\n    sum += prod * data[j][yIndex];\n  }\n\n  return sum;\n}\n","import * as THREE from 'three';\n\nconst DEFAULT_COMPARER_METHOD = (a: any, b: any) => {\n  return a - b;\n};\n/**\n * @ignore\n */\nexport const DEFAULT_TEXTURE_URL = '{{assets}}/sprites/fuzzyparticle.png';\n\n/**\n * Returns the complete URL to a texture given a basepath and a template url.\n * @param {String} template URL containing optional template parameters\n * @param {String} basePath Base path\n * @example\n * getFullUrl('{{assets}}/images/mysprite.png', '/path/to/assets')\n * => '/path/to/assets/images/mysprite.png'\n */\nexport function getFullUrl(template: string, basePath: string) {\n  return template\n    .replace('{{assets}}', `${basePath}/assets`)\n    .replace('{{data}}', `${basePath}/data`);\n}\n\n/**\n * Returns the complete URL to a texture given a basepath and a template url.\n * @param {String} template URL containing optional template parameters\n * @param {String} basePath Base path for simulation data and assets.\n * @example\n * getFullTextureUrl('{{assets}}/images/mysprite.png', '/path/to/assets')\n * => '/path/to/assets/images/mysprite.png'\n */\nexport function getFullTextureUrl(template: string, basePath: string) {\n  return getFullUrl(template || DEFAULT_TEXTURE_URL, basePath);\n}\n\n/*\n * Returns a THREE.js texture given a basepath and a template url.\n * @param {String} template URL containing optional template parameters\n * @param {String} basePath Base path for simulation data and assets.\n */\nexport function getThreeJsTexture(template: string, basePath: string) {\n  const fullTextureUrl = getFullTextureUrl(template, basePath);\n  return new THREE.TextureLoader().load(fullTextureUrl);\n}\n\nexport function getDefaultBasePath() {\n  return window.location.href.indexOf('localhost') > -1\n    ? '/src/'\n    : 'https://typpo.github.io/spacekit/src';\n}\n\n/**\n * Performs a standard binary search on an array of values returning the index of the found item or the twos complement\n * negative of the closest value if the exact value isn't found. For example for array: [10, 20, 30]\n *   * Searching for a value of 20 would return an index of 1\n *   * Searching for a value of 12 would return a value of -2 (taking the two's complement back '~' give you 1)\n * @param {Array} data an array of values of the type consistent with the comparer method\n * @param value the value to be searched for in the data array\n * @param {Function} [comparer] a function which takes two arguments: first of same type as data row and second as same\n * time as value to compare. Default method is a numerical comparison\n * @returns {number}\n */\nexport function binarySearch(\n  data: any[],\n  value: any,\n  comparer = DEFAULT_COMPARER_METHOD\n) {\n  if (data === undefined) {\n    throw 'data object is undefined';\n  }\n\n  if (!Array.isArray(data)) {\n    throw 'data object must be an array';\n  }\n\n  if (value === undefined) {\n    throw 'value object must be defined';\n  }\n\n  if (comparer === undefined) {\n    throw 'comparer must be defined';\n  }\n\n  let left = 0;\n  let right = data.length;\n\n  while (left <= right) {\n    let middle = Math.floor((left + right) / 2);\n    if (middle === data.length) {\n      return middle;\n    }\n    let comparisonCalc = comparer(data[middle], value);\n    if (comparisonCalc < 0) {\n      left = middle + 1;\n    } else if (comparisonCalc > 0) {\n      right = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  return ~left;\n}\n","import * as THREE from 'three';\nimport julian from 'julian';\n\nimport { rescaleArray, rescaleXYZ } from './sk-scale';\nimport { SKEphemerisTable } from './sk-ephemeris-table';\nimport { SKEphem } from './sk-ephem';\nimport { auToMeters } from './conversions';\n\nconst sin = Math.sin;\nconst cos = Math.cos;\nconst sqrt = Math.sqrt;\n\nconst DEFAULT_LEAD_TRAIL_YEARS = 10;\nconst DEFAULT_SAMPLE_POINTS = 360;\n// const DEFAULT_ORBIT_PATH_SETTINGS = {\n//   leadDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n//   trailDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n//   numberSamplePoints: DEFAULT_SAMPLE_POINTS,\n// };\n// const MAX_NUM_ECLIPTIC_DROPLINES = 90;\n\n/**\n * Special cube root function that assumes input is always positive.\n */\nfunction cbrt(x: number) {\n  return Math.exp(Math.log(x) / 3.0);\n}\n\n/**\n * Enum of orbital types.\n */\n// export const OrbitType = Object.freeze({\n//   UNKNOWN: 0,\n//   PARABOLIC: 1,\n//   HYPERBOLIC: 2,\n//   ELLIPTICAL: 3,\n//   TABLE: 4,\n// });\n\nenum OrbitType {\n  UNKNOWN,\n  PARABOLIC,\n  HYPERBOLIC,\n  ELLIPTICAL,\n  TABLE,\n}\n\n/**\n * Get the type of orbit. Returns one of OrbitType.PARABOLIC, HYPERBOLIC,\n * ELLIPTICAL, or UNKNOWN.\n * @return {OrbitType} Name of orbit type\n */\nexport function getOrbitType(ephem: SKEphem | SKEphemerisTable) {\n  if (ephem instanceof SKEphemerisTable) {\n    return OrbitType.TABLE;\n  }\n\n  let e = ephem.get('e');\n  if (e > 0.9 && e < 1.2) {\n    return OrbitType.PARABOLIC;\n  } else if (e > 1.2) {\n    return OrbitType.HYPERBOLIC;\n  } else {\n    return OrbitType.ELLIPTICAL;\n  }\n}\n\ninterface IOptions {\n  color: string;\n  eclipticLineColor: string;\n  orbitPathSettings: {\n    leadDurationYears: number;\n    trailDurationYears: number;\n    numberSamplePoints: number;\n  };\n}\n\n/**\n * A class that builds a visual representation of a Kepler orbit.\n * @example\n * const orbit = new Spacekit.Orbit({\n *   ephem: new Spacekit.Ephem({...}),\n *   options: {\n *     color: 0xFFFFFF,\n *     eclipticLineColor: 0xCCCCCC,\n *   },\n * });\n */\nexport class SKOrbit {\n  // ~~~>>>\n\n  private _options: IOptions;\n  private _orbitPoints?: THREE.BufferGeometry;\n  private _eclipticDropLines?: THREE.LineSegments<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private _orbitShape?: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private _orbitStart = 0;\n  private _orbitStop = 0;\n  private _orbitType: OrbitType;\n\n  /**\n   * @param {(SKEphem | SKEphemerisTable)} ephem The ephemerides that define this orbit.\n   * @param {Object} options\n   * @param {Object} options.color The color of the orbital ellipse.\n   * @param {Object} options.orbitPathSettings settings for the path\n   * @param {Object} options.orbitPathSettings.leadDurationYears orbit path lead time in years\n   * @param {Object} options.orbitPathSettings.trailDurationYears orbit path trail time in years\n   * @param {Object} options.orbitPathSettings.numberSamplePoints number of\n   * points to use when drawing the orbit line. Only applicable for\n   * non-elliptical and ephemeris table orbits.\n   * @param {Object} options.eclipticLineColor The color of lines drawn\n   * perpendicular to the ecliptic in order to illustrate depth (defaults to\n   * 0x333333).\n   */\n  constructor(\n    private _ephem: SKEphem | SKEphemerisTable,\n    options: Partial<IOptions>\n  ) {\n    /**\n     * Ephem object\n     * @type {SKEphem}\n     */\n    // this._ephem = ephem;\n\n    /**\n     * Options (see class definition for details)\n     */\n    this._options = {\n      color: 'white',\n      eclipticLineColor: 'cyan',\n      ...options,\n      orbitPathSettings: {\n        leadDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n        trailDurationYears: DEFAULT_LEAD_TRAIL_YEARS,\n        numberSamplePoints: DEFAULT_SAMPLE_POINTS,\n        ...options.orbitPathSettings,\n      },\n    };\n\n    // /**\n    //  * configuring orbit path lead/trail data\n    //  */\n    // if (!this._options.orbitPathSettings) {\n    //   this._options.orbitPathSettings = JSON.parse(\n    //     JSON.stringify(DEFAULT_ORBIT_PATH_SETTINGS)\n    //   );\n    // }\n\n    // if (!this._options.orbitPathSettings.leadDurationYears) {\n    //   this._options.orbitPathSettings.leadDurationYears = DEFAULT_LEAD_TRAIL_YEARS;\n    // }\n\n    // if (!this._options.orbitPathSettings.trailDurationYears) {\n    //   this._options.orbitPathSettings.trailDurationYears = DEFAULT_LEAD_TRAIL_YEARS;\n    // }\n\n    // if (!this._options.orbitPathSettings.numberSamplePoints) {\n    //   this._options.orbitPathSettings.numberSamplePoints = DEFAULT_SAMPLE_POINTS;\n    // }\n\n    /**\n     * Cached orbital points.\n     * @type {Array.<THREE.Vector3>}\n     */\n    // this._orbitPoints = null;\n\n    /**\n     * Cached ecliptic drop lines.\n     * @type {Array.<THREE.Vector3>}\n     */\n    // this._eclipticDropLines = null;\n\n    /**\n     * Cached orbit shape.\n     * @type {THREE.Line}\n     */\n    // this._orbitShape = null;\n\n    /**\n     * Time span of the drawn orbit line\n     */\n    // this._orbitStart = 0;\n    // this._orbitStop = 0;\n\n    /**\n     * Orbit type\n     * @type {OrbitType}\n     */\n    // this._orbitType = getOrbitType(this._ephem);\n\n    this._orbitType = getOrbitType(this._ephem);\n  }\n\n  /**\n   * Get heliocentric position of object at a given JD.\n   * @param {Number} jd Date value in JD.\n   * @param {boolean} debug Set true for debug output.\n   * @return {Array.<Number>} [X, Y, Z] coordinates\n   */\n  getPositionAtTime(jd: number, debug = false) {\n    // Note: logic below must match the vertex shader.\n\n    // This position calculation is used to create orbital ellipses.\n    switch (this._orbitType) {\n      case OrbitType.PARABOLIC:\n        return this.getPositionAtTimeNearParabolic(jd, debug);\n      case OrbitType.HYPERBOLIC:\n        return this.getPositionAtTimeHyperbolic(jd, debug);\n      case OrbitType.ELLIPTICAL:\n        return this.getPositionAtTimeElliptical(jd, debug);\n      case OrbitType.TABLE:\n        return this.getPositionAtTimeTable(jd, debug);\n    }\n    throw new Error('No handler for this type of orbit');\n  }\n\n  getPositionAtTimeParabolic(jd: number, _debug = false) {\n    // See https://stjarnhimlen.se/comp/ppcomp.html#17\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // The Guassian gravitational constant\n    const k = 0.01720209895;\n\n    // Perihelion distance\n    const q = eph.get('q');\n\n    // Compute time since perihelion\n    const d = jd - eph.get('tp');\n\n    const H = (d * (k / sqrt(2))) / sqrt(q * q * q);\n    const h = 1.5 * H;\n    const g = sqrt(1.0 + h * h);\n    const s = cbrt(g + h) - cbrt(g - h);\n\n    // True anomaly\n    const v = 2.0 * Math.atan(s);\n    // Heliocentric distance\n    const r = q * (1.0 + s * s);\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeNearParabolic(jd: number, _debug = false) {\n    // See https://stjarnhimlen.se/comp/ppcomp.html#17\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // The Guassian gravitational constant\n    const k = 0.01720209895;\n\n    // Eccentricity\n    const e = eph.get('e');\n\n    // Perihelion distance\n    const q = eph.get('q');\n\n    // Compute time since perihelion\n    const d = jd - eph.get('tp');\n\n    const a = 0.75 * d * k * sqrt((1 + e) / (q * q * q));\n    const b = sqrt(1 + a * a);\n    const W = cbrt(b + a) - cbrt(b - a);\n    const f = (1 - e) / (1 + e);\n\n    const a1 = 2 / 3 + (2 / 5) * W * W;\n    const a2 = 7 / 5 + (33 / 35) * W * W + (37 / 175) * W ** 4;\n    const a3 =\n      W * W * (432 / 175 + (956 / 1125) * W * W + (84 / 1575) * W ** 4);\n\n    const C = (W * W) / (1 + W * W);\n    const g = f * C * C;\n    const w = W * (1 + f * C * (a1 + a2 * g + a3 * g * g));\n\n    // True anomaly\n    const v = 2 * Math.atan(w);\n    // Heliocentric distance\n    const r = (q * (1 + w * w)) / (1 + w * w * f);\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeHyperbolic(jd: number, _debug = false) {\n    // See https://stjarnhimlen.se/comp/ppcomp.html#17\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // Eccentricity\n    const e = eph.get('e');\n\n    // Perihelion distance\n    // const q = eph.get('q');\n\n    // Semimajor axis\n    const a = eph.get('a');\n\n    // Mean anomaly\n    const ma = eph.get('ma');\n\n    // Calculate mean anomaly at jd\n    const n = eph.get('n', 'rad');\n    const epoch = eph.get('epoch');\n    const d = jd - epoch;\n\n    const M = ma + n * d;\n\n    let F0 = M;\n    for (let count = 0; count < 100; count++) {\n      const F1 =\n        (M + e * (F0 * Math.cosh(F0) - Math.sinh(F0))) /\n        (e * Math.cosh(F0) - 1);\n      const lastdiff = Math.abs(F1 - F0);\n      F0 = F1;\n\n      if (lastdiff < 0.0000001) {\n        break;\n      }\n    }\n    const F = F0;\n\n    const v = 2 * Math.atan(sqrt((e + 1) / (e - 1))) * Math.tanh(F / 2);\n    const r = (a * (1 - e * e)) / (1 + e * cos(v));\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeElliptical(jd: number, _debug = false) {\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // Eccentricity\n    const e = eph.get('e');\n\n    // Mean anomaly\n    const ma = eph.get('ma', 'rad');\n\n    // Calculate mean anomaly at jd\n    const n = eph.get('n', 'rad');\n    const epoch = eph.get('epoch');\n    const d = jd - epoch;\n\n    const M = ma + n * d;\n    if (_debug) {\n      console.info('period=', eph.get('period'));\n      console.info('n=', n);\n      console.info('ma=', ma);\n      console.info('d=', d);\n      console.info('M=', M);\n    }\n\n    // Estimate eccentric and true anom using iterative approx\n    let E0 = M;\n    for (let count = 0; count < 100; count++) {\n      const E1 = M + e * sin(E0);\n      const lastdiff = Math.abs(E1 - E0);\n      E0 = E1;\n\n      if (lastdiff < 0.0000001) {\n        break;\n      }\n    }\n    const E = E0;\n    const v = 2 * Math.atan(sqrt((1 + e) / (1 - e)) * Math.tan(E / 2));\n\n    // Radius vector, in AU\n    const a = eph.get('a');\n    const r = (a * (1 - e * e)) / (1 + e * cos(v));\n\n    return this.vectorToHeliocentric(v, r);\n  }\n\n  getPositionAtTimeTable(jd: number, _debug = false) {\n    if (this._ephem instanceof SKEphem)\n      throw new Error('Poor logic allowing non-table type here');\n\n    const point = this._ephem.getPositionAtTime(jd);\n    return rescaleXYZ(point[0], point[1], point[2]);\n  }\n\n  /**\n   * Given true anomaly and heliocentric distance, returns the scaled heliocentric coordinates (X, Y, Z)\n   * @param {Number} v True anomaly\n   * @param {Number} r Heliocentric distance\n   * @return {Array.<Number>} Heliocentric coordinates\n   */\n  vectorToHeliocentric(v: number, r: number) {\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    // Inclination, Longitude of ascending node, Longitude of perihelion\n    const i = eph.get('i', 'rad');\n    const o = eph.get('om', 'rad');\n    const p = eph.get('wBar', 'rad');\n\n    // Heliocentric coords\n    const X = r * (cos(o) * cos(v + p - o) - sin(o) * sin(v + p - o) * cos(i));\n    const Y = r * (sin(o) * cos(v + p - o) + cos(o) * sin(v + p - o) * cos(i));\n    const Z = r * (sin(v + p - o) * sin(i));\n\n    return rescaleXYZ(X, Y, Z);\n  }\n\n  /**\n   * Returns whether the requested epoch is within the current orbit's\n   * definition. Used only for ephemeris tables.\n   * @param {Number} jd\n   * @return {boolean} true if it is within the orbit span, false if not\n   */\n  needsUpdateForTime(jd: number) {\n    if (this._orbitType === OrbitType.TABLE) {\n      return jd < this._orbitStart || jd > this._orbitStop;\n    }\n    // Renderings for other types are static.\n    return false;\n  }\n\n  /**\n   * Calculates, caches, and returns the orbit state for this orbit around this time\n   * @param {Number} jd center time of the orbit (only used for ephemeris table ephemeris)\n   * @param {boolean} forceCompute forces the recomputing of the orbit on this call\n   * @return {THREE.Line}\n   */\n  getOrbitShape(\n    jd?: number,\n    forceCompute = false\n  ): THREE.Line<THREE.BufferGeometry, THREE.LineBasicMaterial> {\n    if (forceCompute) {\n      if (this._orbitShape) {\n        this._orbitShape.geometry.dispose();\n        this._orbitShape.material.dispose();\n      }\n      this._orbitShape = undefined;\n\n      if (this._orbitPoints) {\n        this._orbitPoints.dispose();\n      }\n      this._orbitPoints = undefined;\n\n      if (this._eclipticDropLines) {\n        this._eclipticDropLines.geometry.dispose();\n        this._eclipticDropLines.material.dispose();\n      }\n      this._eclipticDropLines = undefined;\n    }\n\n    if (this._orbitShape) {\n      return this._orbitShape;\n    }\n\n    if (this._orbitType === OrbitType.ELLIPTICAL) {\n      return this.getEllipse();\n    }\n\n    // For hyperbolic and parabolic orbits, decide on a time range to draw\n    // them.\n    // TODO(ian): Should we compute around current position, not time of perihelion?\n    // @ts-ignore\n    const tp = this._orbitType === OrbitType.TABLE ? jd : this._ephem.get('tp');\n    // Use current date as a fallback if time of perihelion is not available.\n    const centerDate = tp ? tp : julian.toJulianDay(new Date());\n    const startJd =\n      centerDate - this._options.orbitPathSettings.trailDurationYears * 365.25;\n    const endJd =\n      centerDate + this._options.orbitPathSettings.leadDurationYears * 365.25;\n    const step =\n      (endJd - startJd) / this._options.orbitPathSettings.numberSamplePoints;\n\n    this._orbitStart = startJd;\n    this._orbitStop = endJd;\n\n    switch (this._orbitType) {\n      case OrbitType.HYPERBOLIC:\n        return this.getLine(\n          this.getPositionAtTimeHyperbolic.bind(this),\n          startJd,\n          endJd,\n          step\n        );\n      case OrbitType.PARABOLIC:\n        return this.getLine(\n          this.getPositionAtTimeNearParabolic.bind(this),\n          startJd,\n          endJd,\n          step\n        );\n      case OrbitType.TABLE:\n        return this.getTableOrbit(startJd, endJd, step);\n    }\n    throw new Error('Unknown orbit shape');\n  }\n\n  /**\n   * Compute a line between a given date range.\n   * @private\n   */\n  getLine(\n    orbitFn: (_: number) => number[],\n    startJd: number,\n    endJd: number,\n    step: number\n  ) {\n    const points = [];\n    for (let jd = startJd; jd <= endJd; jd += step) {\n      const pos = orbitFn(jd);\n\n      // DWD\n      pos[0] = auToMeters(pos[0]);\n      pos[1] = auToMeters(pos[1]);\n      pos[2] = auToMeters(pos[2]);\n      //\n\n      points.push(new THREE.Vector3(pos[0], pos[1], pos[2]));\n    }\n\n    // const pointsGeometry = new THREE.Geometry();\n    // pointsGeometry.vertices = points;\n    const pointsGeometry = new THREE.BufferGeometry();\n    pointsGeometry.setFromPoints(points);\n\n    return this.generateAndCacheOrbitShape(pointsGeometry);\n  }\n\n  /**\n   * Returns the orbit for a table lookup orbit definition\n   * @private\n   * @param {Number} startJd start of orbit in JDate format\n   * @param {Number} stopJd end of orbit in JDate format\n   * @param {Number} step step size in days\n   * @return {THREE.Line}\n   */\n  getTableOrbit(startJd: number, stopJd: number, step: number) {\n    // --->>>\n\n    if (this._ephem instanceof SKEphem)\n      throw new Error('Poor logic allowing non-table type here');\n\n    const rawPoints = this._ephem.getPositions(startJd, stopJd, step);\n    const points = rawPoints\n      .map(values => rescaleArray(values))\n      .map(values => new THREE.Vector3(values[0], values[1], values[2]));\n\n    // const pointGeometry = new THREE.Geometry();\n    // pointGeometry.vertices = points;\n\n    const pointGeometry = new THREE.BufferGeometry();\n    pointGeometry.setFromPoints(points);\n\n    return this.generateAndCacheOrbitShape(pointGeometry);\n  }\n\n  /**\n   * @private\n   * @return {THREE.Line} The ellipse object that represents this orbit.\n   */\n  getEllipse() {\n    const pointGeometry = this.getEllipseGeometry();\n    return this.generateAndCacheOrbitShape(pointGeometry);\n  }\n\n  /**\n   * @private\n   * @return {THREE.Geometry} A THREE.js geometry\n   */\n  getEllipseGeometry() {\n    const eph = this._ephem;\n\n    if (eph instanceof SKEphemerisTable)\n      throw new Error('Poor logic allowing table type here');\n\n    const _period = eph.get('period');\n    const a = eph.get('a');\n    const ecc = eph.get('e');\n\n    const twoPi = Math.PI * 2;\n    const step = twoPi / 90;\n    const pts = [];\n    for (let E = 0; E < twoPi; E += step) {\n      const v = 2 * Math.atan(sqrt((1 + ecc) / (1 - ecc)) * Math.tan(E / 2));\n      const r = (a * (1 - ecc * ecc)) / (1 + ecc * cos(v));\n      const pos = this.vectorToHeliocentric(v, r);\n\n      if (isNaN(pos[0]) || isNaN(pos[1]) || isNaN(pos[2])) {\n        console.error(\n          'NaN position value - you may have bad or incomplete data in the following ephemeris:'\n        );\n        console.error(eph);\n      }\n      // pts.push(new THREE.Vector3(pos[0], pos[1], pos[2]));\n      // DWD\n      pts.push(\n        new THREE.Vector3(\n          auToMeters(pos[0]),\n          auToMeters(pos[1]),\n          auToMeters(pos[2])\n        )\n      );\n      //\n    }\n    pts.push(pts[0]);\n\n    // const pointGeometry = new THREE.Geometry();\n    // pointGeometry.vertices = pts;\n\n    const pointGeometry = new THREE.BufferGeometry();\n    pointGeometry.setFromPoints(pts);\n\n    return pointGeometry;\n  }\n\n  /**\n   * @private\n   */\n  generateAndCacheOrbitShape(\n    pointGeometry: THREE.BufferGeometry\n  ): THREE.Line<THREE.BufferGeometry, THREE.LineBasicMaterial> {\n    // --->>>\n\n    this._orbitPoints = pointGeometry;\n    this._orbitShape = new THREE.Line(\n      pointGeometry,\n      new THREE.LineBasicMaterial({\n        color: new THREE.Color(this._options.color || 0x444444),\n      })\n    );\n    return this._orbitShape;\n  }\n\n  /**\n   * A geometry containing line segments that run between the orbit ellipse and\n   * the ecliptic plane of the solar system. This is a useful visual effect\n   * that makes it easy to tell when an orbit goes below or above the ecliptic\n   * plane.\n   * @return {THREE.Geometry} A geometry with many line segments.\n   */\n  getLinesToEcliptic() {\n    if (this._eclipticDropLines) {\n      return this._eclipticDropLines;\n    }\n\n    if (!this._orbitPoints) {\n      // Generate the orbitPoints cache.\n      this.getOrbitShape();\n    }\n    const points = this._orbitPoints;\n    // const geometry = new THREE.Geometry();\n    const geometry = new THREE.BufferGeometry();\n\n    if (!points) throw new Error('Poor logic letting point be undefined here');\n\n    // Place a cap on visible lines, for large or highly inclined orbits.\n    // points.vertices.forEach((vertex, idx) => {\n    //   // Drop last point because it's a repeat of the first point.\n    //   if (\n    //     idx === points.vertices.length - 1 &&\n    //     this._orbitType === OrbitType.ELLIPTICAL\n    //   ) {\n    //     return;\n    //   }\n    //   geometry.vertices.push(vertex);\n    //   geometry.vertices.push(new THREE.Vector3(vertex.x, vertex.y, 0));\n    // });\n\n    this._eclipticDropLines = new THREE.LineSegments(\n      geometry,\n      new THREE.LineBasicMaterial({\n        color: this._options.eclipticLineColor || 0x333333,\n        blending: THREE.AdditiveBlending,\n      })\n      // THREE.LineStrip\n    );\n\n    return this._eclipticDropLines;\n  }\n\n  /**\n   * Get the color of this orbit.\n   * @return {Number} The hexadecimal color of the orbital ellipse.\n   */\n  getHexColor() {\n    return this._orbitShape?.material.color.getHex();\n  }\n\n  /**\n   * @param {Number} hexVal The hexadecimal color of the orbital ellipse.\n   */\n  setHexColor(hexVal: string) {\n    if (this._orbitShape?.material?.color)\n      this._orbitShape.material.color = new THREE.Color(hexVal);\n  }\n\n  /**\n   * Get the visibility of this orbit.\n   * @return {boolean} Whether the orbital ellipse is visible. Note that\n   * although the ellipse may not be visible, it is still present in the\n   * underlying Scene and Simultation.\n   */\n  getVisibility() {\n    return this._orbitShape?.visible;\n  }\n\n  /**\n   * Change the visibility of this orbit.\n   * @param {boolean} val Whether to show the orbital ellipse.\n   */\n  setVisibility(val: boolean) {\n    if (this._orbitShape) this._orbitShape.visible = val;\n  }\n}\n","import * as SpacekitMath from './sk-math';\nimport * as Units from './sk-units';\nimport * as Util from './sk-util';\n\n/**\n * A class representing an ephemeris look-up table for defining a space object.\n * @example\n */\n\n// Constants\nconst MAX_INTERPOLATION_ORDER = 20;\nconst INCREASING_JDATE_SEARCH_METHOD = (a: any, b: any) => {\n  return a[0] - b;\n};\n\ninterface IUnits {\n  distance: 'au';\n  time: 'day';\n}\n\n//Default Values\nconst DEFAULT_UNITS: IUnits = {\n  distance: 'au',\n  time: 'day',\n};\n\nconst DEFAULT_EPHEM_TYPE = 'cartesianposvel';\nconst DEFAULT_INTERPOLATION_TYPE = 'lagrange';\nconst DEFAULT_INTERPOLATION_ORDER = 5;\n\n//Allowable unit types\nconst DISTANCE_UNITS = new Set(['km', 'au']);\nconst EPHEM_TYPES = new Set(['cartesianposvel']);\nconst INTERPOLATION_TYPES = new Set(['lagrange']);\nconst TIME_UNITS = new Set(['day', 'sec']);\n\ninterface IEphemerisData {\n  data: number[][];\n  ephemerisType: string;\n  distanceUnits: 'au';\n  timeUnits: 'day';\n  interpolationType: string;\n  interpolationOrder: number;\n}\n\n/**\n * This class encapsulates the data and necessary methods for operating with look up ephemeris data.\n * Users of the class pass in their ephemeris data as a data structure with the data and the settings for the ephemeris.\n * The settings include things like the units, and the ephemeris representation. The ephemeris data itself is an array\n * of arrays where each line constitute the necessary components of the line.\n *\n * For 'cartesianposvel' style ephemeris each line of data looks like: [Julian Date, X, Y, Z, Vx, Vy, Vz]\n */\nexport class SKEphemerisTable {\n  // ~~~>>>\n\n  private _units = { ...DEFAULT_UNITS };\n  private _ephemType = DEFAULT_EPHEM_TYPE;\n  private _interpolationType = DEFAULT_INTERPOLATION_TYPE;\n  private _interpolationOrder = DEFAULT_INTERPOLATION_ORDER;\n  private _data: number[][];\n\n  /**\n   * @param {Object} ephemerisData Look up ephemeris data to initialize the table with and the properties of it\n   * @param {Array.<Array.<Number>>} ephemerisData.data the ephemeris data appropriate for the specified ephemeris type\n   * @param {String} ephemerisData.ephemerisType the type of ephemeres data here (defaults to 'cartesianposvel')\n   * @param {String} ephemerisData.distanceUnits the distance units for this data (defaults to AU\n   * @param {String} ephemerisData.timeUnits the distance units for this data (defaults to day)\n   * @param {String} ephemerisData.interpolationType the type of interpolater to use (defaults to 'lagrange')\n   * @param {Number} ephemerisData.interpolationOrder the order of the interpolator to use (defaults to 5)\n   */\n  constructor(ephemerisData: IEphemerisData) {\n    // this._units = JSON.parse(JSON.stringify(DEFAULT_UNITS));\n    // this._ephemType = DEFAULT_EPHEM_TYPE;\n    // this._ephemType = DEFAULT_EPHEM_TYPE;\n    // this._interpolationType = DEFAULT_INTERPOLATION_TYPE;\n    // this._interpolationOrder = DEFAULT_INTERPOLATION_ORDER;\n\n    if (!ephemerisData) {\n      throw 'EphemerisTable must be initialized with an ephemeris data structure';\n    }\n\n    if (\n      !ephemerisData.data ||\n      !Array.isArray(ephemerisData.data) ||\n      ephemerisData.data.length === 0 ||\n      !Array.isArray(ephemerisData.data[0])\n    ) {\n      throw 'EphemerisTable must be initialized with a structure containing an array of arrays of ephemeris data';\n    }\n    // this._data = JSON.parse(JSON.stringify(ephemerisData.data));\n    this._data = [...ephemerisData.data];\n\n    if (ephemerisData.distanceUnits) {\n      if (!DISTANCE_UNITS.has(ephemerisData.distanceUnits)) {\n        throw `Unknown distance units: ${ephemerisData.distanceUnits}`;\n      }\n      this._units.distance = ephemerisData.distanceUnits;\n    }\n\n    if (ephemerisData.timeUnits) {\n      if (!TIME_UNITS.has(ephemerisData.timeUnits)) {\n        throw `Unknown time units: ${ephemerisData.timeUnits}`;\n      }\n      this._units.time = ephemerisData.timeUnits;\n    }\n\n    if (ephemerisData.ephemerisType) {\n      if (!EPHEM_TYPES.has(ephemerisData.ephemerisType)) {\n        throw `Unknown ephemeris type: ${ephemerisData.ephemerisType}`;\n      }\n      this._ephemType = ephemerisData.ephemerisType;\n    }\n\n    if (ephemerisData.interpolationType) {\n      if (!INTERPOLATION_TYPES.has(ephemerisData.interpolationType)) {\n        throw `Unknown interpolation type: ${ephemerisData.interpolationType}`;\n      }\n      this._interpolationType = ephemerisData.interpolationType;\n    }\n\n    if (ephemerisData.interpolationOrder !== undefined) {\n      if (\n        ephemerisData.interpolationOrder < 1 ||\n        ephemerisData.interpolationOrder > MAX_INTERPOLATION_ORDER\n      ) {\n        throw `Interpolation order must be >0 and <${MAX_INTERPOLATION_ORDER}: ${ephemerisData.interpolationOrder}`;\n      }\n      this._interpolationOrder = ephemerisData.interpolationOrder;\n    }\n\n    if (\n      this._units.distance !== DEFAULT_UNITS.distance ||\n      this._units.time !== DEFAULT_UNITS.time\n    ) {\n      const distanceMultiplier = this.calcDistanceMultiplier(\n        this._units.distance\n      );\n      const timeMultiplier = this.calcTimeMultiplier(this._units.time);\n      this._data.forEach(line => {\n        line[1] *= distanceMultiplier;\n        line[2] *= distanceMultiplier;\n        line[3] *= distanceMultiplier;\n        line[4] *= distanceMultiplier * timeMultiplier;\n        line[5] *= distanceMultiplier * timeMultiplier;\n        line[6] *= distanceMultiplier * timeMultiplier;\n      });\n    }\n  }\n\n  /**\n   * Calculates the interpolated position for the given requested date. If the requested date is before the first\n   * point it returns the first point. If the requested date is after the last point it returns the last point.\n   * @param {Number} jd of the requested time\n   * @returns {Number[]|*[]} x, y, z position in the ephemeris table's reference frame\n   */\n  getPositionAtTime(jd: number) {\n    if (jd <= this._data[0][0]) {\n      return [this._data[0][1], this._data[0][2], this._data[0][3]];\n    }\n\n    const last = this._data[this._data.length - 1];\n    if (jd >= last[0]) {\n      return [last[1], last[2], last[3]];\n    }\n\n    const { startIndex, stopIndex } = this.calcBoundingIndices(jd);\n    const x = SpacekitMath.interpolate(\n      this._data,\n      jd,\n      startIndex,\n      stopIndex,\n      0,\n      1\n    );\n    const y = SpacekitMath.interpolate(\n      this._data,\n      jd,\n      startIndex,\n      stopIndex,\n      0,\n      2\n    );\n    const z = SpacekitMath.interpolate(\n      this._data,\n      jd,\n      startIndex,\n      stopIndex,\n      0,\n      3\n    );\n\n    return [x, y, z];\n  }\n\n  /**\n   * Given the start and stop time returns a uniform ephemeris history.\n   * @param {Number} startJd the requested start date\n   * @param {Number} stopJd the requested stop date\n   * @param {Number} stepDays the step size of the data requested in days (can be fractional days)\n   * @returns {number[][]}\n   */\n  getPositions(startJd: number, stopJd: number, stepDays: number) {\n    if (startJd > stopJd) {\n      throw `Requested start needs to be after requested stop`;\n    }\n\n    if (stepDays <= 0.0) {\n      throw 'Step days needs to be greater than zero';\n    }\n\n    let result = [];\n    for (let t = startJd; t <= stopJd; t += stepDays) {\n      result.push(this.getPositionAtTime(t));\n    }\n\n    return result;\n  }\n\n  /**\n   * @private\n   */\n  calcDistanceMultiplier(unitType: 'au' | 'km') {\n    switch (unitType) {\n      case 'au':\n        return 1.0;\n      case 'km':\n        return Units.kmToAu(1);\n      default:\n        throw new Error('Unknown distance unit type: ' + unitType);\n    }\n  }\n\n  /**\n   * @private\n   */\n  calcTimeMultiplier(unitType: 'day' | 'sec') {\n    switch (unitType) {\n      case 'day':\n        return 1.0;\n      case 'sec':\n        return 1 / 86400.0;\n      default:\n        throw new Error('Unknown time unit type: ' + unitType);\n    }\n  }\n\n  /**\n   * @private\n   */\n  calcBoundingIndices(jd: number) {\n    const halfSampleSize = Math.floor(this._interpolationOrder / 2);\n    let closestIndex = Util.binarySearch(\n      this._data,\n      jd,\n      INCREASING_JDATE_SEARCH_METHOD\n    );\n    if (closestIndex < 0) {\n      closestIndex = ~closestIndex - 1;\n    }\n    let startIndex = closestIndex - halfSampleSize;\n    if (startIndex < 0) {\n      startIndex = 0;\n    }\n\n    let stopIndex = startIndex + Number(this._interpolationOrder);\n    if (stopIndex >= this._data.length) {\n      stopIndex = this._data.length - 1;\n      if (this._data.length > halfSampleSize) {\n        startIndex = stopIndex - halfSampleSize;\n      }\n    }\n\n    return { startIndex: startIndex, stopIndex: stopIndex };\n  }\n}\n","export function rad(val: number) {\n  return (val * Math.PI) / 180;\n}\n\nexport function deg(val: number) {\n  return (val * 180) / Math.PI;\n}\n\nexport function hoursToDeg(val: number) {\n  return val * 15.0;\n}\n\nexport function sexagesimalToDecimalRa(\n  raHour: number,\n  raMin: number,\n  raSec: number\n) {\n  // https://astronomy.stackexchange.com/questions/24518/convert-a-decimal-into-ra-or-dec\n  return raHour * 15.0 + raMin / 4.0 + raSec / 240.0;\n}\n\nexport function sexagesimalToDecimalDec(\n  decDeg: number,\n  decMin: number,\n  decSec: number,\n  isObserverBelowEquator = false\n) {\n  const posneg = isObserverBelowEquator ? -1 : 1;\n  return decDeg + decMin / 60.0 + (posneg * decSec) / 3600.0;\n}\n\nexport function decimalToSexagesimalRa(decimal: string) {\n  const val = parseFloat(decimal);\n  const raHour = Math.trunc(val / 15.0);\n  const raMin = Math.trunc((val - raHour * 15.0) * 4.0);\n  const raSec = (val - raHour * 15.0 - raMin / 4.0) * 240.0;\n  return [raHour, raMin, raSec];\n}\n\nexport function decimalToSexagesimalDec(\n  decimal: string,\n  isObserverBelowEquator = false\n) {\n  const val = parseFloat(decimal);\n  const posneg = isObserverBelowEquator ? -1 : 1;\n\n  const decDeg = Math.trunc(val);\n  const decMin = Math.trunc((val - posneg * decDeg) * 60.0 * posneg);\n  const decSec =\n    (val - posneg * decDeg - (posneg * decMin) / 60.0) * 3600.0 * posneg;\n  return [decDeg, decMin, decSec];\n}\n\nexport function kmToAu(km: number) {\n  return km / 149597870.7;\n}\n\nexport function auToKm(au: number) {\n  return au * 149597870.7;\n}\n","import * as THREE from 'three';\n\nimport { EphemPresets } from '../data/ephem-presets';\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { IXYZ } from '../models/IXYZ';\nimport { TPlanets } from '../models/TPlanets';\nimport { auToMeters } from './conversions';\nimport { SKEphem } from './sk-ephem';\nimport { SKOrbit } from './sk-orbit';\n\nexport class Orbit {\n  // ~~~>>>\n\n  private SKprojectedOrbitLine!: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private SKEph?: SKEphem;\n  private SKOrbit?: SKOrbit;\n\n  constructor(\n    //\n    private name: string,\n    private orbitalType = EOrbitalType.PLANET,\n    private skephem?: SKEphem,\n    private color?: string,\n    private opacity?: number\n  ) {\n    // --->>>\n\n    switch (this.orbitalType) {\n      case EOrbitalType.ASTEROID: {\n        this.loadAsteroid();\n        break;\n      }\n      case EOrbitalType.PLANET: {\n        this.loadPlanet();\n        break;\n      }\n      case EOrbitalType.DWARF_PLANET: {\n        this.loadPlanet();\n        break;\n      }\n      default: {\n        this.loadPlanet();\n        break;\n      }\n    }\n  }\n\n  loadPlanet = () => {\n    this.SKEph = EphemPresets[this.name as TPlanets];\n    this.SKOrbit = new SKOrbit(this.SKEph, {\n      color: this.orbitalType === EOrbitalType.PLANET ? 'white' : 'pink',\n      eclipticLineColor: undefined,\n      orbitPathSettings: undefined,\n    });\n    this.SKprojectedOrbitLine = this.SKOrbit.getOrbitShape();\n    this.SKprojectedOrbitLine.material.transparent = true;\n    this.SKprojectedOrbitLine.material.opacity = this.opacity || 1;\n    this.SKprojectedOrbitLine.material.needsUpdate = true;\n  };\n\n  loadAsteroid = () => {\n    this.SKEph =\n      this.skephem ||\n      new SKEphem(\n        {\n          epoch: 2458600.5,\n          a: 5.38533,\n          e: 0.19893,\n          i: 22.11137,\n          om: 294.42992,\n          w: 314.2889,\n          ma: 229.14238,\n        },\n        'deg'\n      );\n    this.SKOrbit = new SKOrbit(this.SKEph, {\n      color: this.color || 'cyan',\n      eclipticLineColor: undefined,\n      orbitPathSettings: undefined,\n    });\n    this.SKprojectedOrbitLine = this.SKOrbit.getOrbitShape();\n    this.SKprojectedOrbitLine.material.transparent = true;\n    this.SKprojectedOrbitLine.material.opacity = this.opacity || 1;\n    this.SKprojectedOrbitLine.material.needsUpdate = true;\n  };\n\n  getProjectedOrbitLine = () => this.SKprojectedOrbitLine;\n\n  getXyzMeters(tCenturiesSinceJ200: number = 0): IXYZ {\n    // --->>>\n\n    const xyz = this.SKOrbit?.getPositionAtTime(tCenturiesSinceJ200);\n    if (!xyz) return { x: 0, y: 0, z: 0 };\n    const x = auToMeters(xyz[0]);\n    const y = auToMeters(xyz[1]);\n    const z = auToMeters(xyz[2]);\n    return { x, y, z };\n  }\n}\n","import * as THREE from 'three';\n\nimport { createEarthCloudMesh } from '../utils/create-earth-cloud-mesh';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { getPlanetRadiusMeters } from '../utils/get-planet-radius-meters';\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { gltfLoader } from '../utils/gltf-loader';\nimport { TPlanets } from '../models/TPlanets';\nimport { imageBaseUrl } from '../utils/constants';\nimport { getInitDate } from '../..';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { Orbit } from '../utils/orbit';\nimport { IZoomableOrbital } from '../models/IZoomableOrbital';\n\nconst planetsWithBumpMaps: Partial<TPlanets>[] = [\n  'MERCURY',\n  'VENUS',\n  'EARTH',\n  'MARS',\n  'CERES',\n  'PLUTO',\n];\n\nconst planetsAsLoadableObjects: Partial<TPlanets>[] = [\n  //\n  'HAUMEA',\n  'MAKEMAKE',\n  'ERIS',\n];\n\nconst dwarfPlanets: Partial<TPlanets>[] = [\n  'CERES',\n  'PLUTO',\n  'HAUMEA',\n  'MAKEMAKE',\n  'ERIS',\n];\n\nconst getPlanetType = (name: TPlanets) => {\n  return dwarfPlanets.includes(name)\n    ? EOrbitalType.DWARF_PLANET\n    : EOrbitalType.PLANET;\n};\n\n/**\n * \"Cloud Radius Factor\": ratio of cloud radius to planet radius\n */\nconst crf = 1.05;\n\n/**\n * \"Helper Radius Factor\": ratio of helper radius to clouded-planet radius\n */\nconst hrf = 1.2;\n\n/**\n * Get the toy scale for different planets\n */\nconst getPlanetToyScale = (name: TPlanets) => {\n  if (name === 'PLUTO') return 10000;\n  if (name === 'CERES') return 10000;\n  if (name === 'HAUMEA') return 15000;\n  if (name === 'MAKEMAKE') return 15000;\n  if (name === 'ERIS') return 15000;\n  return 3000;\n};\n\nexport class Planet extends AbstractToyModel implements IZoomableOrbital {\n  // ~~~>>>\n\n  private helper: THREE.LineSegments;\n  private model = new THREE.Group();\n  private clouds?: THREE.Mesh;\n  private orbit: Orbit;\n  private SKprojectedOrbitLine: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n  private radius: number;\n\n  constructor(public readonly NAME: TPlanets) {\n    // --->>>\n\n    super(getPlanetToyScale(NAME));\n\n    this.radius = getPlanetRadiusMeters(NAME);\n    this.orbit = new Orbit(this.NAME, getPlanetType(NAME));\n    this.SKprojectedOrbitLine = this.orbit.getProjectedOrbitLine();\n    this._sceneEntityGroup.add(this.SKprojectedOrbitLine);\n\n    // Make the model toy-scalable\n    this._toyModel = this.model;\n\n    // Set up helper\n    this.helper = new THREE.LineSegments(\n      new THREE.EdgesGeometry(new THREE.SphereGeometry(this.radius * hrf, 32)),\n      new THREE.LineBasicMaterial({ color: new THREE.Color('cyan') })\n    );\n    this.helper.userData.isHelper = true;\n    this.helper.rotateX(Math.PI / 2);\n    this.model.add(this.helper);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      // Choose between planet as sphere or loadable object\n      if (planetsAsLoadableObjects.includes(this.NAME)) {\n        await this.loadPlanetAsObject();\n      } else {\n        await this.loadPlanetAsTexturedSphere();\n      }\n\n      console.log(this.NAME, ' RESOLVED', +new Date() - +getInitDate());\n      this._sceneEntityGroup.add(this.model);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  loadPlanetAsObject = async () => {\n    const name = this.NAME.toLowerCase();\n    const objUrl = `${imageBaseUrl}/planets/${name}/${name}.glb`;\n\n    // Add temporary sphere till object is loaded\n    const tempMesh = new THREE.Mesh(\n      new THREE.SphereGeometry(this.radius, 32, 32),\n      new THREE.MeshPhongMaterial()\n    );\n    tempMesh.rotateX(Math.PI / 2);\n    this.model.add(tempMesh);\n\n    const onObjectLoad = (obj: THREE.Group | null) => {\n      tempMesh.visible = false;\n      if (!!obj) this.model.add(obj);\n    };\n\n    if (this._isAsyncLoad()) {\n      gltfLoader(objUrl, this.radius)\n        .then(onObjectLoad)\n        .catch(_ => onObjectLoad(null));\n    } else {\n      onObjectLoad(await gltfLoader(objUrl, this.radius).catch(_ => null));\n    }\n  };\n\n  loadPlanetAsTexturedSphere = async () => {\n    const name = this.NAME.toLowerCase();\n    const imageUrl = `${imageBaseUrl}/planets/${name}/${name}-map-1024.jpg`;\n    const bumpUrl = `${imageBaseUrl}/planets/${name}/${name}-bump-1024.png`;\n    const isBumpy = planetsWithBumpMaps.includes(this.NAME);\n    const isEarth = this.NAME === 'EARTH';\n    const pNull = Promise.resolve(null);\n    const mesh = new THREE.Mesh(\n      new THREE.SphereGeometry(this.radius, 32, 32),\n      new THREE.MeshPhongMaterial({ shininess: isEarth ? 25 : 2 })\n    );\n    mesh.rotateX(Math.PI / 2);\n    this.model.add(mesh);\n\n    const onTexturesLoad = ([\n      promisedMapTexture,\n      promisedBumpTexture,\n      promisedEarthCloudTexture,\n    ]: PromiseSettledResult<THREE.Texture | null>[]) => {\n      // Unpack PromiseSettledResults:\n      const map =\n        promisedMapTexture.status === 'fulfilled'\n          ? promisedMapTexture.value\n          : null;\n      const bumpMap =\n        promisedBumpTexture.status === 'fulfilled'\n          ? promisedBumpTexture.value\n          : null;\n      const earthClouds =\n        promisedEarthCloudTexture.status === 'fulfilled'\n          ? promisedEarthCloudTexture.value\n          : null;\n\n      mesh.material.map = map;\n      mesh.material.bumpMap = bumpMap;\n      mesh.material.bumpScale = this.radius * 50;\n      mesh.material.needsUpdate = true;\n\n      if (earthClouds) {\n        this.clouds = new THREE.Mesh<THREE.SphereGeometry>(\n          new THREE.SphereGeometry(this.radius * crf, 32, 32),\n          new THREE.MeshPhongMaterial({\n            map: earthClouds,\n            side: THREE.DoubleSide,\n            transparent: true,\n            opacity: 0.6,\n          })\n        );\n        this.model.add(this.clouds);\n      }\n    };\n\n    // Create promises\n    const promises = [\n      getTextureFromImageUrl(imageUrl, name).catch(_ => null),\n      isBumpy ? getTextureFromImageUrl(bumpUrl, name).catch(_ => null) : pNull,\n      isEarth ? createEarthCloudMesh().catch(_ => null) : pNull,\n    ];\n\n    // Wait for promises or load async\n    if (this._isAsyncLoad()) {\n      Promise.allSettled(promises).then(onTexturesLoad);\n    } else {\n      onTexturesLoad(await Promise.allSettled(promises));\n    }\n  };\n\n  public getPosition = () => {\n    // const { x, y, z } = this.orbit.getXyzMeters();\n    // return new THREE.Vector3(x, y, z);\n    return this.model.position;\n  };\n\n  public getRadius = () => this.radius;\n\n  public getOrbit = () => this.orbit;\n\n  public setIsOrbitVisible = (val: boolean) => {\n    this.SKprojectedOrbitLine.visible = val;\n  };\n\n  update() {\n    // Update planet position\n    const { x, y, z } = this.orbit.getXyzMeters();\n    this.model.position.set(x, y, z);\n\n    // Toy Model Scale\n    this._updateModelScale();\n\n    // Spin planet\n    this.model.rotateZ(0.0015);\n    if (!!this.clouds) {\n      // Spin clouds relative to planet\n      this.clouds.rotateY(-0.0001);\n      this.clouds.rotateZ(-0.0004);\n    }\n  }\n}\n","import * as THREE from 'three';\nimport { imageBaseUrl } from './constants';\n\n/**\n * This function is adapted from `https://github.com/jeromeetienne/threex.planets/blob/master/threex.planets.js`, based on instructions from `http://learningthreejs.com/blog/2013/09/16/how-to-make-the-earth-in-webgl/`\n * Jpegs don't have an alpha channel, so the idea is to load cloud image from jpg and remove pixels manually to create an alpha-channel effect\n */\nexport function createEarthCloudMesh(): Promise<THREE.Texture> {\n  // --->>>\n\n  return new Promise((resolve, reject) => {\n    // --->>>\n\n    // create destination canvas\n    const canvasResult = document.createElement('canvas');\n    canvasResult.width = 1024;\n    canvasResult.height = 512;\n    const contextResult = canvasResult.getContext('2d');\n\n    // load earthcloudmap\n    const imageMap = new Image();\n    imageMap.crossOrigin = 'Anonymous';\n\n    // const material = new THREE.MeshPhongMaterial({\n    //   map: new THREE.Texture(canvasResult),\n    //   side: THREE.DoubleSide,\n    //   transparent: true,\n    //   opacity: 0.6,\n    // });\n    // const mesh = new THREE.Mesh<THREE.SphereGeometry>(geometry, material);\n\n    imageMap.onerror = error => {\n      console.log('Error: ', error);\n      reject();\n    };\n    imageMap.onload = function() {\n      // --->>>\n\n      // create dataMap ImageData for earthcloudmap\n      const canvasMap = document.createElement('canvas');\n      canvasMap.width = imageMap.width;\n      canvasMap.height = imageMap.height;\n      const contextMap = canvasMap.getContext('2d');\n      contextMap!.drawImage(imageMap, 0, 0);\n      const dataMap = contextMap!.getImageData(\n        0,\n        0,\n        canvasMap.width,\n        canvasMap.height\n      );\n\n      // load earthcloudmaptrans\n      const imageTrans = new Image();\n      imageTrans.crossOrigin = 'Anonymous';\n      imageTrans.addEventListener('load', function() {\n        // --->>>\n\n        // create dataTrans ImageData for earthcloudmaptrans\n        const canvasTrans = document.createElement('canvas');\n        canvasTrans.width = imageTrans.width;\n        canvasTrans.height = imageTrans.height;\n        const contextTrans = canvasTrans.getContext('2d');\n        contextTrans!.drawImage(imageTrans, 0, 0);\n        try {\n          const dataTrans = contextTrans!.getImageData(\n            0,\n            0,\n            canvasTrans.width,\n            canvasTrans.height\n          );\n          // merge dataMap + dataTrans into dataResult\n          let dataResult = contextMap!.createImageData(\n            canvasMap.width,\n            canvasMap.height\n          );\n          for (let y = 0, offset = 0; y < imageMap.height; y++) {\n            for (let x = 0; x < imageMap.width; x++, offset += 4) {\n              dataResult.data[offset + 0] = dataMap.data[offset + 0];\n              dataResult.data[offset + 1] = dataMap.data[offset + 1];\n              dataResult.data[offset + 2] = dataMap.data[offset + 2];\n              dataResult.data[offset + 3] = 255 - dataTrans.data[offset + 0];\n            }\n          }\n\n          // update texture with result\n          contextResult!.putImageData(dataResult, 0, 0);\n          // if (!!material && !!material.map) material.map.needsUpdate = true;\n        } catch (error) {\n          console.log('Error: ', error);\n          reject();\n        }\n        resolve(new THREE.CanvasTexture(canvasResult));\n      });\n      imageTrans.src = `${imageBaseUrl}/planets/earth/earth-clouds-trans-1024.png`;\n    };\n    imageMap.src = `${imageBaseUrl}/planets/earth/earth-clouds-color-1024.png`;\n  });\n}\n","import * as THREE from 'three';\n\nimport { getInitDate } from '../..';\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { imageBaseUrl } from '../utils/constants';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { invertTextureColor } from '../utils/invert-texture-color';\n\nexport class StarField extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'STARFIELD';\n  private mesh: THREE.Mesh<THREE.SphereGeometry, THREE.MeshPhongMaterial>;\n  private material: THREE.MeshPhongMaterial;\n  private texture: THREE.Texture | null = null;\n\n  constructor(radius: number) {\n    super();\n\n    this.material = new THREE.MeshPhongMaterial({\n      side: THREE.DoubleSide,\n      transparent: true,\n      color: 'black',\n      opacity: 0,\n      shininess: 0,\n    });\n\n    this.mesh = new THREE.Mesh(\n      new THREE.SphereGeometry(radius, 32, 32),\n      this.material\n    );\n\n    this.mesh.rotation.y = Math.PI / 2;\n    this._sceneEntityGroup.name = 'STARFIELD';\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      if (this._isAsyncLoad()) {\n        getTextureFromImageUrl(\n          `${imageBaseUrl}/stars/galaxy_starfield6.png`,\n          // `${imageBaseUrl}/stars/galaxy-starfield-4096.jpg`,\n          // galaxy-starfield-4096.jpg\n          'star-field'\n        ).then(texture => {\n          this.texture = texture;\n          texture.encoding = THREE.GammaEncoding;\n          // this.material.map = texture;\n          // this.material.color = new THREE.Color();\n          this.material.needsUpdate = true;\n        });\n      } else {\n        this.texture = await getTextureFromImageUrl(\n          `${imageBaseUrl}/stars/galaxy_starfield6.png`,\n          'star-field'\n        );\n        this.material.map = this.texture;\n        this.material.color = new THREE.Color();\n        this.material.needsUpdate = true;\n      }\n\n      this._sceneEntityGroup.add(this.mesh);\n\n      console.log('Starfield resolved', +new Date() - +getInitDate());\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  invertColor = () => {\n    if (!this.texture) return;\n    this.texture = invertTextureColor(this.texture);\n    this.material.map = this.texture;\n    this.material.needsUpdate = true;\n  };\n\n  update() {}\n}\n","import * as THREE from 'three';\n\n/**\n * Returns texture with inverted colors\n */\nexport function invertTextureColor(\n  texture: THREE.Texture,\n  isAlphaInverted = false\n) {\n  // --->>>\n\n  // texture -> canvas -> context -> data arrays\n  const img: HTMLImageElement = texture.image;\n  const canvas = document.createElement('canvas');\n  const width = img.width;\n  const height = img.height;\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx!.drawImage(img, 0, 0);\n\n  // Get copy of old data\n  const data = ctx!.getImageData(0, 0, width, height);\n\n  // Modify copy of data\n  for (let y = 0, offset = 0; y < height; y++) {\n    for (let x = 0; x < width; x++, offset += 4) {\n      data.data[offset + 0] = 255 - data.data[offset + 0];\n      data.data[offset + 1] = 255 - data.data[offset + 1];\n      data.data[offset + 2] = 255 - data.data[offset + 2];\n      if (isAlphaInverted) data.data[offset + 3] = 255 - data.data[offset + 3];\n    }\n  }\n\n  // Overwrite old data with new\n  ctx!.putImageData(data, 0, 0);\n\n  // MUST return CanvasTexture or it won't update properly\n  return new THREE.CanvasTexture(canvas);\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\nimport { auToMeters } from '../utils/conversions';\n\nexport class MiscHelpers extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Misc Helpers';\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      const axesHelper = new THREE.AxesHelper(auToMeters(100));\n      // Mark this as helper in order to be toggle-able\n      axesHelper.userData.isHelper = true;\n      this._sceneEntityGroup.add(axesHelper);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\n\nexport class SimpleLight extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Simple Light';\n  private _light?: THREE.AmbientLight;\n\n  constructor(private _defaultIntensity = 0.3) {\n    super();\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      this._light = new THREE.AmbientLight(0x333333, this._defaultIntensity);\n      this._light.userData.isAmbientLight = true;\n      this._sceneEntityGroup.add(this._light);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  setPower = (intensity?: number) => {\n    const newIntensity = intensity || this._defaultIntensity;\n    this._light!.intensity = newIntensity;\n  };\n\n  setIsOn(isOn: boolean) {\n    this._light!.visible = isOn;\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\ninterface IVertices {\n  [index: string]: {\n    x: number;\n    y: number;\n    z: number;\n  };\n}\n\n/**\n * Function to take a dodecahedron and warp the points to createa jagged\n * asteroid shape\n */\nexport const createAsteroidGeometry = (size: number, warpFactor = 0.25) => {\n  // --->>>\n\n  const geometry = new THREE.DodecahedronGeometry(size, 1);\n  const positionAttribute = geometry.getAttribute('position');\n  const point = new THREE.Vector3();\n  const vertices: IVertices = {};\n\n  // Collect all repeated points into a hashmap of unique vertices\n  for (let i = 0; i < positionAttribute.count; i++) {\n    point.fromBufferAttribute(positionAttribute, i); // read vertex\n    let key = [point.x, point.y, point.z].join(',');\n    if (!vertices[key])\n      vertices[key] = {\n        x: point.x += Math.random() * size * warpFactor,\n        y: point.y += Math.random() * size * warpFactor,\n        z: point.z += Math.random() * size * warpFactor,\n      };\n  }\n\n  for (let i = 0; i < positionAttribute.count; i++) {\n    point.fromBufferAttribute(positionAttribute, i); // read vertex\n    let key = [point.x, point.y, point.z].join(',');\n    let { x, y, z } = vertices[key];\n    positionAttribute.setXYZ(i, x, y, z);\n  }\n\n  // Stretch/flatten asteroid randomly\n  const sx = 0.5 + Math.random();\n  const sy = 0.5 + Math.random();\n  const sz = 0.5 + Math.random();\n  geometry.scale(sx, sy, sz);\n\n  return geometry;\n};\n","import * as THREE from 'three';\n\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { Orbit } from '../utils/orbit';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { createAsteroidGeometry } from '../utils/create-asteroid-geometry';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { imageBaseUrl } from '../utils/constants';\nimport { IZoomableOrbital } from '../models/IZoomableOrbital';\n\nconst defaultRadiusMeters = 10000;\n\nexport class Asteroid extends AbstractToyModel implements IZoomableOrbital {\n  // ~~~>>>\n\n  private model = new THREE.Group();\n  private orbit: Orbit;\n  private SKprojectedOrbitLine: THREE.Line<\n    THREE.BufferGeometry,\n    THREE.LineBasicMaterial\n  >;\n\n  constructor(\n    public readonly NAME: string,\n    private radius = defaultRadiusMeters\n  ) {\n    super(30000 * 100);\n    this.orbit = new Orbit(NAME, EOrbitalType.ASTEROID);\n    this.SKprojectedOrbitLine = this.orbit.getProjectedOrbitLine();\n    this._sceneEntityGroup.add(this.SKprojectedOrbitLine);\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>>\n\n      const url = `${imageBaseUrl}/misc/asteroid-texture-1024.jpg`;\n\n      const geometry = createAsteroidGeometry(this.radius);\n      const mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshPhongMaterial({\n          // color: new THREE.Color('red'),\n          map: await getTextureFromImageUrl(url),\n          shininess: 0,\n        })\n      );\n      this.model.add(mesh);\n      this._toyModel = this.model;\n      this._sceneEntityGroup.add(this.model);\n\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => {\n    const { x, y, z } = this.orbit.getXyzMeters();\n    return new THREE.Vector3(x, y, z);\n  };\n\n  public getRadius = () => this.radius;\n\n  public getOrbit = () => this.orbit;\n\n  public setIsOrbitVisible = (val: boolean) => {\n    this.SKprojectedOrbitLine.visible = val;\n  };\n\n  update() {\n    // Update planet position\n    const { x, y, z } = this.orbit.getXyzMeters();\n    this.model.position.set(x, y, z);\n\n    // Toy Model Scale\n    this._updateModelScale();\n  }\n}\n","import * as THREE from 'three';\n\nimport { AbstractSceneEntity } from '../abstract-scene/abstract-scene-entity';\nimport { ISceneEntity } from '../models/ISceneEntity';\n\nexport class PointLight extends AbstractSceneEntity implements ISceneEntity {\n  // ~~~>>>\n\n  public readonly NAME = 'Point Light';\n  private _light?: THREE.PointLight;\n\n  constructor(private _defaultIntensity = 0.3, private _radius = 1) {\n    super();\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(resolve => {\n      this._light = new THREE.PointLight(0x333333, this._defaultIntensity);\n      const helper = new THREE.PointLightHelper(\n        this._light,\n        this._radius,\n        new THREE.Color('red')\n      );\n      helper.userData.isHelper = true;\n      this._sceneEntityGroup.add(this._light);\n      this._sceneEntityGroup.add(helper);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  setPower = (intensity?: number) => {\n    const newIntensity = intensity || this._defaultIntensity;\n    this._light!.intensity = newIntensity;\n  };\n\n  setIsOn(isOn: boolean) {\n    this._light!.visible = isOn;\n  }\n\n  update = () => {};\n}\n","import * as THREE from 'three';\n\nimport { EOrbitalType } from '../models/EOrbitalType';\nimport { Orbit } from '../utils/orbit';\nimport { AbstractToyModel } from '../abstract-scene/abstract-toy-model';\nimport { IZoomable } from '../models/IZoomable';\nimport { createAsteroidGeometry } from '../utils/create-asteroid-geometry';\nimport { getTextureFromImageUrl } from '../utils/get-texture-from-image-url';\nimport { imageBaseUrl } from '../utils/constants';\nimport { SKEphem } from '../utils/sk-ephem';\nimport { auToMeters } from '../utils/conversions';\nimport { getPlanetRadiusMeters } from '../utils/get-planet-radius-meters';\nimport asteroidData from '../data/json/asteroids/asteroids-MBA-h-11.json';\nimport { IAsteroidDatum } from '../models/IAsteroidDatum';\n// import asteroidData from '../data/json/asteroids/asteroids-MBA-h-14.json';\n\nconst au = auToMeters(1);\n\nexport class AsteroidBelt extends AbstractToyModel implements IZoomable {\n  // --->>>\n\n  private orbits: Orbit[] = [];\n  private model = new THREE.Group();\n  private radius = getPlanetRadiusMeters('CERES') * 500;\n\n  constructor(public readonly NAME: string) {\n    super(3000);\n    this._toyModel = this.model;\n  }\n\n  async init() {\n    return new Promise<THREE.Group>(async resolve => {\n      // --->>\n\n      const url = `${imageBaseUrl}/misc/asteroid-texture-1024.jpg`;\n      const texture = await getTextureFromImageUrl(url).catch(_ => null);\n      const meshes = [];\n\n      const data = asteroidData as IAsteroidDatum[];\n      const promises = data.map(async (datum, ind) => {\n        // --->>\n\n        const orbit = getOrbit(datum, 'red', 0.01);\n        this.orbits.push(orbit);\n\n        // const geometry = getSphereGeometry();\n        const geometry = createAsteroidGeometry(\n          this.radius * (0.1 + 5 * Math.random()),\n          0.25 * (1.5 - Math.random())\n        );\n        const mesh = new THREE.Mesh(\n          geometry,\n          new THREE.MeshPhongMaterial({\n            color: new THREE.Color('grey'),\n            map: texture,\n            shininess: 0,\n            transparent: true,\n          })\n        );\n        const { x, y, z } = orbit.getXyzMeters();\n        mesh.position.set(x, y, z);\n        meshes.push(mesh);\n        this.model.add(mesh);\n\n        // const orbitLine = orbit.getProjectedOrbitLine();\n        // this._sceneEntityGroup.add(orbitLine);\n      });\n\n      this._sceneEntityGroup.add(this.model);\n      resolve(this._sceneEntityGroup);\n    });\n  }\n\n  public getPosition = () => {\n    return new THREE.Vector3();\n  };\n\n  public getRadius = () => this.radius;\n\n  update(_camera?: THREE.Camera) {\n    // Toy Model Scale\n    // this._updateModelScale();\n\n    if (!_camera) return;\n    const dist = _camera.position.distanceTo(new THREE.Vector3());\n    if (!false)\n      this.model.traverse(child => {\n        if (child instanceof THREE.Mesh) {\n          // --->\n\n          // Scaling size linearly with dist <=> belt visibility ~constant\n          // const mu = 1;\n          // const s = dist ** mu / au;\n          const s = dist / au;\n          child.scale.set(s, s, s);\n\n          // Scale opacity to peak when camera is in belt, and then\n          // tend toward zero when moving away; takes a bit of tuning\n          // in the exponential if you change asteroid size\n          const p = 2.8 * au; // 'Peak' distance to belt based on Ceres\n          const opacity = 1 / Math.abs((dist - p) / p) ** 1.1;\n          child.material.opacity = opacity;\n          child.material.needsUpdate = true;\n          // if (Math.random() < 0.00001) console.log('dist', dist / au, s, opacity);\n        }\n      });\n  }\n}\n\nfunction getSKEphem(datum: any) {\n  const { epoch, a, e, i, om, w, ma } = datum;\n  return new SKEphem({ epoch, a, e, i, om, w, ma }, 'deg', true);\n}\n\nfunction getOrbit(datum: IAsteroidDatum, color: string, opacity: number) {\n  return new Orbit(\n    datum.desig,\n    EOrbitalType.ASTEROID,\n    getSKEphem(datum),\n    color,\n    opacity\n  );\n}\n","import { injectCommonButtonProperties } from './inject-common-button-properties';\n\n/**\n *\n * @param container\n */\nexport const buttonToggleOrbits = (\n  container: HTMLElement,\n  onClickCB: () => void\n): HTMLElement => {\n  // --->>>\n\n  // Warning\n  if (!container) throw new Error('Canvas Container is Falsy!');\n\n  // Set properties unique to this button\n  const button = document.createElement('div');\n  button.innerText = 'Toggle Orbits';\n  button.style.setProperty('bottom', '10px');\n  button.style.setProperty('right', '10px');\n\n  // Set properties common to all buttons; append to container when ready\n  injectCommonButtonProperties(button, container, onClickCB);\n\n  // Finish him\n  return button;\n};\n","import { TOptions, setOptions } from './options';\nimport { SceneManager } from './threejs/scene-manager';\nimport { SKEphem } from './threejs/utils/sk-ephem';\n\nlet threejsScene: SceneManager;\nexport let initDate = new Date();\nexport const setInitDate = (date: Date) => (initDate = date);\nexport const getInitDate = () => initDate;\n\n/**\n * Create threeJs canvas and inject into container\n */\nexport function init(\n  containerId = 'threejs-canvas-container',\n  options?: TOptions\n) {\n  // --->>>\n\n  if (!!options) setOptions(options);\n\n  // Get div to contain canvas\n  const canvasContainer = document.getElementById(containerId);\n  if (!canvasContainer) throw new Error(\"Can't find div of id \" + containerId);\n\n  threejsScene = new SceneManager(containerId);\n  threejsScene.init();\n\n  //@ts-ignore\n  const eph = new SKEphem(\n    {\n      epoch: 2458426.5,\n      a: 3.870968969437096e-1,\n      e: 2.056515875393916e-1,\n      i: 7.003891682749818,\n      om: 4.830774804443502e1,\n      w: 2.917940253442659e1,\n      ma: 2.56190975209273e2,\n    },\n    'deg',\n    true /* locked */\n  );\n}\n\n/**\n * Destroy\n */\nexport function destroy() {\n  // --->>>\n\n  threejsScene.destroy();\n}\n\n/**\n * React-component wrapper\n */\nexport { SbnSolarSystemViewer } from './react-component';\n","import * as THREE from 'three';\n\nimport { AbstractSceneManager } from './abstract-scene/abstract-scene-manager';\nimport { buttonToggleHelpers } from './html/button-toggle-helpers';\nimport { buttonToggleToyScale } from './html/button-toggle-toy-scale';\nimport { Sun } from './scene-entities/sun';\nimport { Planet } from './scene-entities/planet';\nimport { StarField } from './scene-entities/star-field';\nimport { auToMeters } from './utils/conversions';\nimport { dateToJ2000, jsDateToCenturiesSinceJ2000 } from './utils/j2000';\nimport { MiscHelpers } from './scene-entities/misc-helpers';\nimport { SimpleLight } from './scene-entities/simple-light';\nimport { DirectionalLight } from './scene-entities/directional-light';\nimport { Asteroid } from './scene-entities/asteroid';\nimport { PointLight } from './scene-entities/point-light';\nimport { solarSystemData } from './data/basic-solar-system-data';\nimport { searchField } from './html/search-field';\nimport { IZoomable } from './models/IZoomable';\nimport { updateTraversalFraction } from './utils/update-traversal-fraction';\nimport { updateCameraPosition } from './utils/update-camera-position';\nimport { updateCameraViewingAngle } from './utils/update-camera-viewing-angle';\nimport { AsteroidBelt } from './scene-entities/asteroid-belt';\nimport julian from 'julian';\nimport { AbstractToyModel } from './abstract-scene/abstract-toy-model';\nimport { buttonToggleOrbits } from './html/button-toggle-orbits';\nimport { IZoomableOrbital } from './models/IZoomableOrbital';\n\n/**\n * Implement a scene for this app with 'real' scene entities\n */\nexport class SceneManager extends AbstractSceneManager {\n  // ~~~>>>\n\n  // Toy-scalable bodies\n  private sun = new Sun();\n  private planets: Planet[];\n  private asteroids: Asteroid[];\n  private asteroidBelts: AsteroidBelt[];\n\n  private starField?: StarField;\n  private isToyScale = true;\n  private isOrbitsVisible = true;\n  private tCenturiesSinceJ2000 = jsDateToCenturiesSinceJ2000(new Date());\n  private toyScalables: AbstractToyModel[];\n\n  // Zooming logic\n  private zoomables: IZoomable[] = [];\n  private zoomableOrbitals: IZoomableOrbital[] = [];\n  private zoomTarget: IZoomable = this.sun;\n  private isZoomingPosition = false;\n  private isZoomingAngle = false;\n  private zoomTraversalFraction = 0;\n  private destinationCameraPosition = new THREE.Vector3();\n  private zoomClock = new THREE.Clock(); //Controls movement of camera when touring planets\n  private lookDirection = new THREE.Vector3();\n\n  constructor(containerId: string) {\n    // --->>>\n\n    super(containerId);\n\n    this._camera.getWorldDirection(this.lookDirection);\n\n    this.planets = [\n      new Planet('MERCURY'),\n      new Planet('VENUS'),\n      new Planet('EARTH'),\n      new Planet('MARS'),\n      new Planet('CERES'),\n      new Planet('JUPITER'),\n      new Planet('SATURN'),\n      new Planet('URANUS'),\n      new Planet('NEPTUNE'),\n      new Planet('PLUTO'),\n      new Planet('HAUMEA'),\n      new Planet('MAKEMAKE'),\n      new Planet('ERIS'),\n    ];\n    this.asteroidBelts = [new AsteroidBelt('MBA')];\n    this.asteroids = [new Asteroid('65P')];\n    this.starField = new StarField(auToMeters(999));\n    this.zoomables = [...this.planets, ...this.asteroids, this.sun];\n    this.zoomableOrbitals = [...this.planets, ...this.asteroids];\n    this.toyScalables = [\n      ...this.planets,\n      ...this.asteroids,\n      // ...this.asteroidBelts,\n      this.sun,\n    ];\n\n    this.registerSceneEntities([\n      // this.starField,\n      // new DirectionalLight(),\n      new MiscHelpers(),\n      new SimpleLight(0.4),\n      new PointLight(5, solarSystemData.SUN.radiusMeters),\n      ...this.planets,\n      ...this.asteroids,\n      ...this.asteroidBelts,\n      /** Sun MUST come last due to its sprite-blending settings **/\n      this.sun,\n    ]);\n\n    // Logic to run before scene initialization\n    this._preInitHook = () => {\n      const radius = auToMeters(4);\n      // const radius = auToMeters(100); // See all planets\n      this._initialViewingVector = new THREE.Vector3(0, 0, radius);\n    };\n\n    // Logic to run after scene initialization\n    this._postInitHook = () => {\n      // Add html\n      searchField(this._container, this.tryToStartZooming);\n      buttonToggleToyScale(this._container, this.toggleIsToyScale);\n      buttonToggleHelpers(this._container, this.toggleHelpersVisibility);\n      buttonToggleOrbits(this._container, this.toggleIsOrbitsVisible);\n      // Misc\n      this._controls!.maxDistance = auToMeters(100);\n      this.setIsToyScale(true);\n      // this.setHelpersVisibility(!true);\n      //\n      this._camera.position.set(\n        // Earth\n        // -180595912325.3482,\n        // 34587914945.44637,\n        // 3906449321.9052143\n        // Haumea\n        // -4514678652999.103,\n        // -996799575287.2986,\n        // 1431642047889.7205\n        // Over Jupiter's Shoulder\n        // 349450170005.93274,\n        // 1508896562129.965,\n        // 622420704159.6792\n        // 65P\n        35426284497.8745,\n        -725267146538.4939,\n        -111665855099.58893\n      );\n    };\n\n    // Clean up on instance destruction\n    this._destroyHook = () => {};\n  }\n\n  setIsToyScale = (isToyScale: boolean) => {\n    this.isToyScale = !!isToyScale;\n    this.toyScalables.forEach(_ => _.setIsZoomToToyScale(this.isToyScale));\n  };\n\n  toggleIsToyScale = () => {\n    this.isToyScale = !this.isToyScale;\n    this.setIsToyScale(this.isToyScale);\n  };\n\n  setIsOrbitsVisible = (isOrbitsVisible: boolean) => {\n    this.isOrbitsVisible = !!isOrbitsVisible;\n    this.zoomableOrbitals.forEach(_ =>\n      _.setIsOrbitVisible(this.isOrbitsVisible)\n    );\n  };\n\n  toggleIsOrbitsVisible = () => {\n    this.isOrbitsVisible = !this.isOrbitsVisible;\n    this.setIsOrbitsVisible(this.isOrbitsVisible);\n  };\n\n  tryToStartZooming = (text: string) => {\n    const TEXT = text.toUpperCase();\n    const foundTarget = this.zoomables.find(el => el.NAME === TEXT);\n    if (foundTarget) {\n      this.isZoomingPosition = true;\n      this.isZoomingAngle = true;\n      this.zoomTarget = foundTarget;\n      this.zoomClock = new THREE.Clock(true);\n      this._controls.enabled = true;\n    }\n  };\n\n  tryToStopZooming = () => {\n    if (!this.isZoomingAngle && !this.isZoomingPosition) {\n      this._controls.target = this.zoomTarget.getPosition();\n      this._controls.enabled = true;\n    }\n  };\n\n  updateCamera = () => {\n    // Zooming logic\n    if (this.isZoomingPosition || this.isZoomingAngle) {\n      this.zoomTraversalFraction = updateTraversalFraction(this.zoomClock);\n      if (this.isZoomingPosition) {\n        this.isZoomingPosition = updateCameraPosition(\n          this._camera,\n          this.zoomTarget,\n          this.zoomTraversalFraction\n        );\n      }\n      if (this.isZoomingAngle) {\n        this.isZoomingAngle = updateCameraViewingAngle(\n          this._camera,\n          this.zoomTarget,\n          this.zoomTraversalFraction\n        );\n      } else {\n        // Keep looking at target even if position is still updating\n        const { x, y, z } = this.zoomTarget.getPosition();\n        this._camera.lookAt(x, y, z);\n      }\n      this.tryToStopZooming();\n    } else {\n      // Orbit controls only update when NOT zooming\n      this._controls.update();\n    }\n\n    // Debug\n    // if (this._clock.elapsedTime < 5) console.log(this._scene);\n    if (Math.random() < 0.1 && this._clock.elapsedTime < 50) {\n      // console.log(this._camera.position);\n      // console.log('>>> ', this._sceneEntities);\n    }\n  };\n}\n","// ------------------------------------------------------------- \\\\\n// These functions are basically copy/pasted straight from here:\n// https://github.com/typpo/j2000/blob/master/index.js\n// ------------------------------------------------------------- \\\\\n\nimport { secondsPerCentury } from '../data/time-units';\n\n// Last updated: 1 Jan 2017\nconst LEAP_SEC_SINCE_J2000 = 5;\n\n// Unix time at 12:00:00 TT Jan 1 2000\nconst UNIX_J2000_TT_EPOCH_SEC = 946727935.816;\n\nexport function unixToJ2000(unix_time: number) {\n  return unix_time - UNIX_J2000_TT_EPOCH_SEC + LEAP_SEC_SINCE_J2000;\n}\n\nexport function j2000ToUnix(j2000_time: number) {\n  return j2000_time + UNIX_J2000_TT_EPOCH_SEC - LEAP_SEC_SINCE_J2000;\n}\n\nexport function dateToJ2000(date: Date) {\n  return unixToJ2000(date.getTime() / 1000);\n}\n\nexport function j2000ToDate(j2000: number) {\n  return new Date(j2000ToUnix(j2000) * 1000);\n}\n\n// ------------------------------------------------------------- \\\\\n// ------------------------------------------------------------- \\\\\n// ------------------------------------------------------------- \\\\\n\nexport function jsDateToCenturiesSinceJ2000(date: Date) {\n  // --------------------------------------->>>\n  const J2000Secs = dateToJ2000(date);\n  const tCenturiesSinceJ2000 = J2000Secs / secondsPerCentury;\n  return tCenturiesSinceJ2000;\n}\n","// Source: https://www.scienceforums.com/topic/360-exactly-how-many-seconds-are-there-in-a-year/\nexport const secondsPerCentury = 3155692597.474;\nexport const minutesPerCentury = secondsPerCentury / 60;\nexport const hoursPerCentury = minutesPerCentury / 60;\nexport const daysPerCentury = hoursPerCentury / 24;\n","import * as THREE from 'three';\n\nconst alpha = 1 / 100;\nconst beta = 3.0;\n\n/**\n * Function at the heart of the smooth-zoom functionality.\n * It only requires two parameters to enable smooth movement between\n * a vast range of distances. By starting off with really small steps\n * (parameterised by alpha), you ensure that the movement starts off slow.\n * By increasing exponentially, you ensure that no matter how far the object,\n * it will soon start gobbling up the traversal vector. Because that traversal\n * vector decreases in size with each step, it also ensures the arrival is not too\n * abrupt.\n */\nexport const updateTraversalFraction = (clock: THREE.Clock) => {\n  const searchTimeElapsed = clock.getElapsedTime();\n  // let fraction: number = Math.pow(searchTimeElapsed, beta) * alpha;\n  let fraction: number =\n    searchTimeElapsed * searchTimeElapsed * searchTimeElapsed * alpha;\n  if (fraction < 0.0) fraction = 0.0;\n  if (fraction > 1.0) fraction = 1.0;\n  return fraction;\n};\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\nimport { distanceBetweenTwoVector3s } from './threejs-geometry-functions';\nimport { updateDestinationCameraPosition } from './update-desination-camera-position';\n\n/**\n * Function to compute the next position for a camera given a zoomable target\n * (e.g. a planet), the camera, and a 'traversal' fraction that parameterizes\n * how fast to move toward that target\n */\nexport const updateCameraPosition = (\n  camera: THREE.Camera,\n  zoomTarget: IZoomable,\n  zoomTraversalFraction: number\n) => {\n  // Determine where you want to end up\n  const { x, y, z } = updateDestinationCameraPosition(zoomTarget);\n\n  // Get vector between present and destination positions\n  // This is the vector \"to-be-fractionally-traversed\"\n  const cp = camera.position;\n  const relativeDestinationCameraVector = new THREE.Vector3(\n    x - cp.x,\n    y - cp.y,\n    z - cp.z\n  );\n\n  // Traverse the camera some fraction along said vector\n  let newCameraPosition: THREE.Vector3 = new THREE.Vector3(\n    cp.x + relativeDestinationCameraVector.x * zoomTraversalFraction,\n    cp.y + relativeDestinationCameraVector.y * zoomTraversalFraction,\n    cp.z + relativeDestinationCameraVector.z * zoomTraversalFraction\n  );\n\n  // Return signal to stop/continue\n  let isZoomingPosition = true;\n\n  // Decide whether to stop searching and instead lock onto destinationCameraPosition\n  const separation = distanceBetweenTwoVector3s(\n    newCameraPosition,\n    new THREE.Vector3(x, y, z)\n  );\n  const smallThresholdSeparation = 0.001;\n  if (separation < smallThresholdSeparation) {\n    isZoomingPosition = false;\n    newCameraPosition = new THREE.Vector3(x, y, z);\n  }\n\n  //Finally, update computed new camera position\n  camera.position.set(\n    newCameraPosition.x,\n    newCameraPosition.y,\n    newCameraPosition.z\n  );\n\n  return isZoomingPosition;\n};\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\n\n/**\n * By providing a zoomable target, this function will compute a 'scenic'\n * position that will be used by other functions to move the camera.\n */\nexport const updateDestinationCameraPosition = (zoomTarget: IZoomable) => {\n  const scale = zoomTarget.getScale();\n  const radius = zoomTarget.getRadius();\n\n  if (zoomTarget.NAME === 'SUN') {\n    // Position around sun is arbitrary\n    const { x, y, z } = zoomTarget.getPosition();\n    return new THREE.Vector3(x + 3 * radius * scale, y + 3 * radius * scale, z);\n  }\n\n  // Logic to find 'scenic' destination with sun in view in the distance\n  // to the side of target based on some back-of-envelope high-school geometry\n  const X = zoomTarget.getPosition().clone();\n  const r = 2 * radius * scale;\n  const sinAlpha = r / X.length();\n  const alpha = Math.asin(sinAlpha);\n  X.applyAxisAngle(new THREE.Vector3(0, 0, 1), alpha);\n  const lengthenFactor = (X.length() + 4 * radius * scale) / X.length();\n  X.multiplyScalar(lengthenFactor);\n  return X;\n};\n","import * as THREE from 'three';\n\nfunction vectorBetweenTwoVector3s(v1: THREE.Vector3, v2: THREE.Vector3) {\n  return new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z);\n}\n\nexport function distanceBetweenTwoVector3s(\n  v1: THREE.Vector3,\n  v2: THREE.Vector3\n): number {\n  return vectorBetweenTwoVector3s(v1, v2).length();\n}\n","import * as THREE from 'three';\nimport { IZoomable } from '../models/IZoomable';\n\n/**\n * By providing a zoomable target, your camera, and a 'traversal fraction',\n * this function will compute the next modification in viewing direction for\n * the camera in order to pan towards the target\n */\nexport const updateCameraViewingAngle = (\n  camera: THREE.Camera,\n  zoomTarget: IZoomable,\n  zoomTraversalFraction: number\n) => {\n  // Get vector from where you are to where you want to look\n  const camPos = camera.position;\n  const destinationLookPosition = zoomTarget.getPosition();\n  const destinationLookVector = new THREE.Vector3(\n    destinationLookPosition.x - camPos.x,\n    destinationLookPosition.y - camPos.y,\n    destinationLookPosition.z - camPos.z\n  );\n\n  // Get unitary vector of direction camera is presently pointing\n  const presentLookVector = camera.getWorldDirection(new THREE.Vector3());\n\n  // In order for the change in viewing angle to feel like it matches\n  // the change in position, we need to multiply the unitary vector to\n  // be on the same order of size as the destinationLookVector\n  presentLookVector.multiplyScalar(destinationLookVector.length());\n\n  // Use these two vectors to compute the vector \"to-be-fractionally-traversed\"\n  // N.b. you might need to sketch a diagram to understand why this works\n  const relativeDestinationLookVector: THREE.Vector3 = new THREE.Vector3(\n    destinationLookVector.x - presentLookVector.x,\n    destinationLookVector.y - presentLookVector.y,\n    destinationLookVector.z - presentLookVector.z\n  );\n\n  // Fractionally traverse said vector\n  let newLookPosition: THREE.Vector3 = new THREE.Vector3(\n    camera.position.x +\n      presentLookVector.x +\n      relativeDestinationLookVector.x * zoomTraversalFraction,\n    camera.position.y +\n      presentLookVector.y +\n      relativeDestinationLookVector.y * zoomTraversalFraction,\n    camera.position.z +\n      presentLookVector.z +\n      relativeDestinationLookVector.z * zoomTraversalFraction\n  );\n\n  // Signal whether to stop/continue\n  let isZoomingAngle = true;\n\n  // Decide whether to stop searching and visually lock onto destinationLookPosition\n  const smallThresholdAngle = 0.0025;\n  const theta = destinationLookVector.angleTo(presentLookVector);\n  if (theta < smallThresholdAngle) {\n    isZoomingAngle = false;\n    newLookPosition = destinationLookPosition;\n  }\n\n  //Finally, update computed new viewing and camera position\n  camera.lookAt(newLookPosition.x, newLookPosition.y, newLookPosition.z);\n\n  return isZoomingAngle;\n};\n","import { buttonFontFamily } from '../utils/constants';\nimport { addGlobalStyles } from './add-global-styles';\n\n/**\n *\n */\nexport const searchField = (\n  container: HTMLElement,\n  onEnter: (value: string) => void\n) => {\n  //\n\n  addGlobalStyles();\n\n  const div = document.createElement('div');\n  const input = document.createElement('input');\n\n  div.style.setProperty('position', 'absolute');\n  div.style.setProperty('top', '10px');\n  div.style.setProperty('left', '10px');\n  div.style.setProperty('width', '250px');\n  div.style.setProperty('height', '40px');\n  div.style.setProperty('background-color', 'green');\n  //\n  input.value = 'Earth';\n  input.style.setProperty('width', '100%');\n  input.style.setProperty('height', '100%');\n  input.style.setProperty('font-size', '20px');\n  input.style.setProperty('font-family', buttonFontFamily);\n  input.style.setProperty('font-size', '20px');\n  input.classList.add('sbn-solar-system-viewer-input');\n  input.addEventListener('keypress', e => {\n    // console.log('e', e, input.value);\n    if (e.key === 'Enter') {\n      onEnter(input.value);\n    }\n  });\n  div.append(input);\n  container.append(div);\n};\n","import { injectCommonButtonProperties } from './inject-common-button-properties';\n\n/**\n *\n * @param container\n */\nexport const buttonToggleToyScale = (\n  container: HTMLElement,\n  onClickCB: () => void\n): HTMLElement => {\n  // --->>>\n\n  // Warning\n  if (!container) throw new Error('Canvas Container is Falsy!');\n\n  // Set properties unique to this button\n  const button = document.createElement('div');\n  button.innerText = 'Toggle Toy Scale';\n  button.style.setProperty('top', '10px');\n  button.style.setProperty('left', '50%');\n  button.style.setProperty('transform', 'translateX(-50%)');\n\n  // Set properties common to all buttons; append to container when ready\n  injectCommonButtonProperties(button, container, onClickCB);\n\n  // Finish him\n  return button;\n};\n","import { injectCommonButtonProperties } from './inject-common-button-properties';\n\n/**\n *\n * @param container\n */\nexport const buttonToggleHelpers = (\n  container: HTMLElement,\n  onClickCB: () => void\n): HTMLElement => {\n  // --->>>\n\n  // Warning\n  if (!container) throw new Error('Canvas Container is Falsy!');\n\n  // Set properties unique to this button\n  const button = document.createElement('div');\n  button.innerText = 'Toggle Helpers';\n  button.style.setProperty('top', '10px');\n  button.style.setProperty('right', '10px');\n\n  // Set properties common to all buttons; append to container when ready\n  injectCommonButtonProperties(button, container, onClickCB);\n\n  // Finish him\n  return button;\n};\n","import React from 'react';\nimport { init, destroy } from '.';\n\ninterface IProps {\n  width?: number | string;\n  height?: number | string;\n  backgroundColor?: string;\n}\n/**\n *  React wrapper\n */\nexport function SbnSolarSystemViewer(props: IProps) {\n  // --->>>\n\n  const { width, height, backgroundColor } = {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'grey',\n    ...props,\n  };\n  const id = 'this-id-will-never-be-duplicated-says-007';\n\n  React.useEffect(() => {\n    init(id);\n    return () => {\n      destroy();\n      console.log('Widget app removed!!!');\n    };\n  }, []);\n\n  return (\n    <div\n      id={id}\n      style={{\n        width,\n        height,\n        backgroundColor,\n      }}\n    />\n  );\n}\n"],"names":["options","isAsyncLoad","getOptions","setOptions","newOptions","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asciiError","msg","auToMeters","aus","addGlobalStyles","globalStyle","document","createElement","innerHTML","head","append","appendLoaderDiv","containerDiv","loaderDiv","animDiv","id","style","setProperty","width","offsetWidth","height","offsetHeight","shorterLength","borderWidthPxls","removeLoaderDiv","getElementById","setTimeout","near","far","AbstractSceneManager","_containerId","THREE","sceneEntities","el","_this","_sceneEntities","isHelpersShown","_isHelpersShown","_scene","traverse","child","userData","isHelper","visible","setHelpersVisibility","_canvas","_camera","aspect","updateProjectionMatrix","_renderer","setSize","window","removeEventListener","_updateCameraAspect","_stopRendering","_destroyHook","_isRendering","_requestAnimationFrameId","requestAnimationFrame","_render","_update","_fps","console","log","_clock","start","init","_isInit","setInitDate","Date","_preInitHook","_container","addEventListener","DPR","devicePixelRatio","canvas","antialias","alpha","setPixelRatio","sortObjects","shadowMap","enabled","outputEncoding","position","copy","_initialViewingVector","up","lookAt","_controls","OrbitControls","domElement","enableDamping","dampingFactor","target","all","map","sceneEntity","initiatedSceneEntityGroup","children","_","group","_this2","add","_startRendering","_postInitHook","dt","getInitDate","setFramesPerSecond","newFps","update","_this3","elapsedTime","updateCamera","render","imageBaseUrl","injectCommonButtonProperties","button","container","onClickCB","link","mutateButton","rel","onload","onerror","href","getTextureFromImageUrl","url","load","texture","encoding","xhr","loaded","total","solarSystemData","SUN","radiusMeters","periodDays","MERCURY","VENUS","EARTH","MARS","CERES","JUPITER","SATURN","URANUS","NEPTUNE","PLUTO","HAUMEA","MAKEMAKE","ERIS","MOON","AbstractSceneEntity","_isAsyncLoad","_sceneEntityGroup","EOrbitalType","AbstractToyModel","_toyScale","setIsZoomToToyScale","_isZoomToToyScale","getScale","_realScale","_setToToyScale","_toyModel","t","scale","set","_updateModelScale","sx","x","sy","y","sz","z","ds","Math","abs","Sun","blending","transparent","sunRadiusMeters","sprite","multiplyScalar","model","helper","color","rotateX","PI","spriteUrl","onTextureLoad","material","needsUpdate","NAME","getPlanetRadiusMeters","gltfLoader","gltfUrl","targetRadius","isCenteredOnBoundingBox","isShadowShown","Loader","gltf","scene","biggestSphereRadius","pow","geometry","computeBoundingSphere","boundingSphere","radius","s","resizeThreejsObject","setFromObject","getCenter","toArray","x2","y2","z2","clone","centerOnBoundingBox","castShadow","receiveShadow","enshadowChildren","message","EPHEM_VALID_ATTRS","Set","ANGLE_UNITS","isDef","SKEphem","initialValues","units","locked","_attrs","_locked","actualUnits","has","val","GM","fill","get","warn","attr","e","a","q","w","wBar","om","aMeters","n","period","sqrt","newN","ma","L","lock","epoch","EARTH_MOON","PLUTO_CHARON","EphemPresets","rescaleXYZ","X","Y","Z","interpolate","data","xValue","sampleRowMin","sampleRowMax","xIndex","yIndex","Array","isArray","maxColumn","sum","j","prod","k","OrbitType","DEFAULT_COMPARER_METHOD","b","INCREASING_JDATE_SEARCH_METHOD","DEFAULT_UNITS","distance","time","DISTANCE_UNITS","EPHEM_TYPES","INTERPOLATION_TYPES","TIME_UNITS","SKEphemerisTable","ephemerisData","_data","distanceUnits","_units","timeUnits","ephemerisType","_ephemType","interpolationType","_interpolationType","interpolationOrder","_interpolationOrder","distanceMultiplier","calcDistanceMultiplier","timeMultiplier","calcTimeMultiplier","line","getPositionAtTime","jd","last","calcBoundingIndices","startIndex","stopIndex","SpacekitMath","getPositions","startJd","stopJd","stepDays","unitType","halfSampleSize","floor","closestIndex","comparer","left","right","middle","comparisonCalc","Util","Number","sin","cos","cbrt","exp","SKOrbit","_ephem","_options","eclipticLineColor","orbitPathSettings","leadDurationYears","trailDurationYears","numberSamplePoints","_orbitType","ephem","TABLE","PARABOLIC","HYPERBOLIC","ELLIPTICAL","getOrbitType","debug","getPositionAtTimeNearParabolic","getPositionAtTimeHyperbolic","getPositionAtTimeElliptical","getPositionAtTimeTable","getPositionAtTimeParabolic","_debug","eph","h","g","v","atan","vectorToHeliocentric","W","f","C","M","F0","count","F1","cosh","sinh","lastdiff","F","tanh","r","d","E0","E1","E","tan","point","o","p","needsUpdateForTime","_orbitStart","_orbitStop","getOrbitShape","forceCompute","_orbitShape","dispose","_orbitPoints","_eclipticDropLines","getEllipse","centerDate","julian","toJulianDay","endJd","step","getLine","bind","getTableOrbit","orbitFn","points","pos","pointsGeometry","setFromPoints","generateAndCacheOrbitShape","XYZ","pointGeometry","getEllipseGeometry","ecc","twoPi","pts","getLinesToEcliptic","getHexColor","_this$_orbitShape","getHex","setHexColor","hexVal","_this$_orbitShape2","_this$_orbitShape2$ma","getVisibility","_this$_orbitShape3","setVisibility","Orbit","orbitalType","skephem","opacity","PLANET","SKEph","SKprojectedOrbitLine","ASTEROID","loadAsteroid","DWARF_PLANET","loadPlanet","getXyzMeters","tCenturiesSinceJ200","xyz","_this$SKOrbit","planetsWithBumpMaps","planetsAsLoadableObjects","dwarfPlanets","Planet","toLowerCase","objUrl","tempMesh","onObjectLoad","imageUrl","bumpUrl","isBumpy","includes","isEarth","pNull","mesh","shininess","onTexturesLoad","promisedMapTexture","promisedBumpTexture","promisedEarthCloudTexture","bumpMap","status","earthClouds","bumpScale","clouds","side","promises","canvasResult","contextResult","getContext","imageMap","Image","crossOrigin","canvasMap","contextMap","drawImage","dataMap","getImageData","imageTrans","canvasTrans","contextTrans","dataTrans","dataResult","createImageData","offset","putImageData","src","allSettled","orbit","getPlanetType","getProjectedOrbitLine","loadPlanetAsObject","loadPlanetAsTexturedSphere","rotateZ","rotateY","StarField","isAlphaInverted","img","image","ctx","invertTextureColor","rotation","MiscHelpers","axesHelper","SimpleLight","_defaultIntensity","intensity","_light","isAmbientLight","setIsOn","isOn","createAsteroidGeometry","size","warpFactor","positionAttribute","getAttribute","vertices","fromBufferAttribute","join","random","setXYZ","Asteroid","PointLight","_radius","au","AsteroidBelt","meshes","asteroidData","datum","ind","getOrbit","orbits","dist","distanceTo","desig","getSKEphem","threejsScene","SceneManager","containerId","getTime","sun","isToyScale","toyScalables","setIsToyScale","isOrbitsVisible","zoomableOrbitals","setIsOrbitVisible","setIsOrbitsVisible","text","TEXT","toUpperCase","foundTarget","zoomables","find","isZoomingPosition","isZoomingAngle","zoomTarget","zoomClock","getPosition","zoomTraversalFraction","fraction","searchTimeElapsed","getElapsedTime","camera","getRadius","sinAlpha","asin","applyAxisAngle","lengthenFactor","updateDestinationCameraPosition","relativeDestinationCameraVector","cp","v1","newCameraPosition","v2","camPos","destinationLookPosition","destinationLookVector","presentLookVector","getWorldDirection","relativeDestinationLookVector","newLookPosition","angleTo","updateCameraViewingAngle","tryToStopZooming","lookDirection","planets","asteroidBelts","asteroids","starField","registerSceneEntities","onEnter","div","input","classList","searchField","tryToStartZooming","innerText","buttonToggleToyScale","toggleIsToyScale","buttonToggleHelpers","toggleHelpersVisibility","buttonToggleOrbits","toggleIsOrbitsVisible","maxDistance","initDate","date","destroy","props","backgroundColor","React","useEffect"],"mappings":"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"}